---------------------------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/scripts/logs/2023.10.12-16.01.30.log.txt
  log type:  text
 opened on:  12 Oct 2023, 16:01:30

. 
. di "Begin date and time: $S_DATE $S_TIME"
Begin date and time: 12 Oct 2023 16:01:30

. di "Stata version: `c(stata_version)'"
Stata version: 16.1

. di "Updated as of: `c(born_date)'"
Updated as of: 19 Nov 2020

. di "Variant:       `=cond( c(MP),"MP",cond(c(SE),"SE",c(flavor)) )'"
Variant:       MP

. di "Processors:    `c(processors)'"
Processors:    2

. di "OS:            `c(os)' `c(osdtl)'"
OS:            Windows 64-bit

. di "Machine type:  `c(machine_type)'"
Machine type:  PC (64-bit x86-64)

. 
. *   Analyses were run on Windows using Stata version 16
. version 16              // Set Version number for backward compatibility

. 
. * All required Stata packages are available in the /libraries/stata folder
. tokenize `"$S_ADO"', parse(";")

. while `"`1'"' != "" {
  2.   if `"`1'"'!="BASE" cap adopath - `"`1'"'
  3.   macro shift
  4. }

. adopath ++ "$working_ANALYSIS/scripts/libraries/stata"
  [1]              "C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/scripts/libraries/stata"
  [2]  (BASE)      "C:\Program Files\Stata16\ado\base/"

. mata: mata mlib index
.mlib libraries to be searched are now
    lmatabase;lmataado;lmataerm;lmatafc;lmatagsem;lmatalasso;lmatamcmc;lmatameta;lmatami;lmatamixlog;lmatanumlib;lmataopt;lmatapath;lmatapostest;lmatapss
> ;lmatasem;lmatasp;lmatasvy;lmatatab;lcolrspace

. sysdir set PERSONAL "$working_ANALYSIS/scripts/libraries/stata"

. 
. * Create directories for output files
. cap mkdir "$working_ANALYSIS/processed"

. cap mkdir "$working_ANALYSIS/results"

. cap mkdir "$working_ANALYSIS/results/intermediate"

. cap mkdir "$working_ANALYSIS/results/tables"

. cap mkdir "$working_ANALYSIS/results/figures"

. 
. * Set general graph style
. set scheme swift_red //select one scheme as reference scheme to work with

. grstyle init 

. {
. *Background color
. grstyle set color white: background plotregion graphregion legend box textbox //
. 
. *Main colors (note: swift_red only defines 8 colors. Multiplying the color, that is "xx yy zz*0.5" reduces/increases intensity and "xx yy zz%50" reduce
> s transparency)
. grstyle set color       "100 143 255" "120 94 240" "220 38 127" "254 97 0" "255 176 0" /// 5 main colors
>                                         "100 143 255*0.4" "120 94 240*0.4" "220 38 127*0.4" "254 97 0*0.4" "255 176 0*0.4" ///
>                                         "100 143 255*1.7" "120 94 240*1.7" "220 38 127*1.7" "254 97 0*1.7" "255 176 0*1.7" ///
>                                         : p# p#line p#lineplot p#bar p#area p#arealine p#pie histogram 
. 
. *Font size
. grstyle set size 10pt: heading //titles
. grstyle set size 8pt: subheading axis_title //axis titles
. grstyle set size 8pt: p#label p#boxlabel body small_body text_option axis_label tick_label minortick_label key_label //all other text
. }

. * -------------------------------------------------
. 
. 
. *--------------------------------------------------
. * Run processing and analysis scripts
. *--------------------------------------------------
. //TODO: update with finale cleaning / analysis files
. do "$working_ANALYSIS/scripts/01_clean.do"

. *--------------------------------------------------------------------------------------
. * SCRIPT: 01_clean.do
. * PURPOSE: cleans the raw experimental and survey data for leaders and villages and merges both datasets
. *--------------------------------------------------------------------------------------
. 
. 
. 
. 
. *---------------------------------------
. * 1) Clean leader data
. *---------------------------------------
. clear

. use "$working_ANALYSIS\data\leader_raw.dta"

. 
. *** Generate Leader dummies ***
. gen leader=ID

. /* ID-old, 13=TL, 14=DL*/
. replace leader=1 if leader==13
(32 real changes made)

. replace leader=0 if leader==14
(32 real changes made)

. label define leader1 1 "Chiefs" 0 "DEL"

. label values leader leader1 

. gen DEL= (leader==0)

. gen TL= (leader==1)

. drop Position // redundant with "leader"

. label variable DEL "democratic leader"

. label variable TL "traditional authority"

. 
. 
. 
. *** Generate Village-Variable in byte-Format ***
. /* Necessary if we want to control for village-fixed effects.
> Note: need to make sure that we use the same codes in villager dataset*/
. gen village = Village

. replace village = "1" if village=="Edundja"
(2 real changes made)

. replace village = "2" if village=="Ehafo"
(2 real changes made)

. replace village = "3" if village=="Endola"
(2 real changes made)

. replace village = "4" if village=="Epatululo"
(2 real changes made)

. replace village = "5" if village=="Epuku"
(2 real changes made)

. replace village = "6" if village=="Etale"
(2 real changes made)

. replace village = "7" if village=="Etilashi"
(2 real changes made)

. replace village = "8" if village=="Etomba"
(2 real changes made)

. replace village = "9" if village=="Ohangwena"
(2 real changes made)

. replace village = "10" if village=="Oipapakane"
(2 real changes made)

. replace village = "11" if village=="Okadiwa"
(2 real changes made)

. replace village = "12" if village=="Okafitu"
(2 real changes made)

. replace village = "13" if village=="Okakwa"
(2 real changes made)

. replace village = "14" if village=="Okangudi"
(2 real changes made)

. replace village = "15" if village=="Okapundja"
(2 real changes made)

. replace village = "16" if village=="Okatale"
(2 real changes made)

. replace village = "17" if village=="Okelemba"
(2 real changes made)

. replace village = "18" if village=="Omahenge"
(2 real changes made)

. replace village = "19" if village=="Omakango"
(2 real changes made)

. replace village = "20" if village=="Omalyata"
(2 real changes made)

. replace village = "21" if village=="Omaputo"
(2 real changes made)

. replace village = "22" if village=="Omukuve"
(2 real changes made)

. replace village = "23" if village=="Omutwe Oshimbungu"
(2 real changes made)

. replace village = "24" if village=="Onangwhe"
(2 real changes made)

. replace village = "25" if village=="Onekwaya East"
(2 real changes made)

. replace village = "26" if village=="Onekwaya West"
(2 real changes made)

. replace village = "27" if village=="Onengali"
(2 real changes made)

. replace village = "28" if village=="Ongonga"
(2 real changes made)

. replace village = "29" if village=="Onheleiwa"
(2 real changes made)

. replace village = "30" if village=="Oshikwiyu 1"
(2 real changes made)

. replace village = "31" if village=="Oshikwiyu 2"
(2 real changes made)

. replace village = "32" if village=="Ouhongo"
(2 real changes made)

. destring village, replace
village: all characters numeric; replaced as byte

. 
. #delimit;
delimiter now ;
. label define village 
> 1 "Edundja"
> 2 "Ehafo"
> 3 "Endola"
> 4 "Epatululo"
> 5 "Epuku"
> 6 "Etale"
> 7 "Etilashi"
> 8 "Etomba"
> 9 "Ohangwena"
> 10 "Oipapakane"
> 11 "Okadiwa"
> 12 "Okafitu"
> 13 "Okakwa"
> 14 "Okangudi"
> 15 "Okapundja"
> 16 "Okatale"
> 17 "Okelemba"
> 18 "Omahenge"
> 19 "Omakango"
> 20 "Omalyata"
> 21 "Omaputo"
> 22 "Omukuve"
> 23 "Omutwe Oshimbungu"
> 24 "Onangwhe"
> 25 "Onekwaya East"
> 26 "Onekwaya West"
> 27 "Onengali"
> 28 "Ongonga"
> 29 "Onheleiwa"
> 30 "Oshikwiyu 1"
> 31 "Oshikwiyu 2"
> 32 "Ouhongo";

. label values village village;

. #delimit cr
delimiter now cr
. quietly tab village Village //ok, everything correct

. drop Village // not necessary anymore

. label variable village "village names"

. tab village, gen(village_)

    village names |      Freq.     Percent        Cum.
------------------+-----------------------------------
          Edundja |          2        3.13        3.13
            Ehafo |          2        3.13        6.25
           Endola |          2        3.13        9.38
        Epatululo |          2        3.13       12.50
            Epuku |          2        3.13       15.63
            Etale |          2        3.13       18.75
         Etilashi |          2        3.13       21.88
           Etomba |          2        3.13       25.00
        Ohangwena |          2        3.13       28.13
       Oipapakane |          2        3.13       31.25
          Okadiwa |          2        3.13       34.38
          Okafitu |          2        3.13       37.50
           Okakwa |          2        3.13       40.63
         Okangudi |          2        3.13       43.75
        Okapundja |          2        3.13       46.88
          Okatale |          2        3.13       50.00
         Okelemba |          2        3.13       53.13
         Omahenge |          2        3.13       56.25
         Omakango |          2        3.13       59.38
         Omalyata |          2        3.13       62.50
          Omaputo |          2        3.13       65.63
          Omukuve |          2        3.13       68.75
Omutwe Oshimbungu |          2        3.13       71.88
         Onangwhe |          2        3.13       75.00
    Onekwaya East |          2        3.13       78.13
    Onekwaya West |          2        3.13       81.25
         Onengali |          2        3.13       84.38
          Ongonga |          2        3.13       87.50
        Onheleiwa |          2        3.13       90.63
      Oshikwiyu 1 |          2        3.13       93.75
      Oshikwiyu 2 |          2        3.13       96.88
          Ouhongo |          2        3.13      100.00
------------------+-----------------------------------
            Total |         64      100.00

. 
. 
. *** Generate unique Leader-ID ***
. sort village leader

. rename ID ID_old

. gen id = _n

. label variable id "unique identifier"

. duplicates report id //ok

Duplicates in terms of id

--------------------------------------
   copies | observations       surplus
----------+---------------------------
        1 |           64             0
--------------------------------------

. drop ID_old

. 
. 
. *** Day and Month ***
. /*Info on Day, Month and Interviewer only available at village level, not at individual level*/
. sort village TL

. xtset id village        //tell stata that village is time variable (necessary to make following commands)
       panel variable:  id (weakly balanced)
        time variable:  village, 1 to 32
                delta:  1 unit

. gen BXnew = BX
(32 missing values generated)

. replace BXnew=BXnew[_n+1] if TL==0 & BXnew==""
(32 real changes made)

. drop BX

. rename BXnew BX

. replace BV=BV[_n+1] if TL==0 & BV==.
(32 real changes made)

. replace BW=BW[_n+1] if TL==0 & BW==""
(32 real changes made)

. xtset, clear

. tab BX village /*ok, consitent*/

                  |                                                      village names
               BX |   Edundja      Ehafo     Endola  Epatululo      Epuku      Etale   Etilashi     Etomba  Ohangwena  Oipapakan    Okadiwa |     Total
------------------+-------------------------------------------------------------------------------------------------------------------------+----------
          Edundja |         2          0          0          0          0          0          0          0          0          0          0 |         2 
            Ehafo |         0          2          0          0          0          0          0          0          0          0          0 |         2 
           Endola |         0          0          2          0          0          0          0          0          0          0          0 |         2 
        Epatululu |         0          0          0          2          0          0          0          0          0          0          0 |         2 
            Epuku |         0          0          0          0          2          0          0          0          0          0          0 |         2 
            Etale |         0          0          0          0          0          2          0          0          0          0          0 |         2 
         Etilashi |         0          0          0          0          0          0          2          0          0          0          0 |         2 
           Etomba |         0          0          0          0          0          0          0          2          0          0          0 |         2 
        Ohangwena |         0          0          0          0          0          0          0          0          2          0          0 |         2 
       Oipapakane |         0          0          0          0          0          0          0          0          0          2          0 |         2 
          Okadiwa |         0          0          0          0          0          0          0          0          0          0          2 |         2 
          Okafitu |         0          0          0          0          0          0          0          0          0          0          0 |         2 
           Okakwa |         0          0          0          0          0          0          0          0          0          0          0 |         2 
        Okangundi |         0          0          0          0          0          0          0          0          0          0          0 |         2 
        Okapundja |         0          0          0          0          0          0          0          0          0          0          0 |         2 
          Okatale |         0          0          0          0          0          0          0          0          0          0          0 |         2 
         Okelemba |         0          0          0          0          0          0          0          0          0          0          0 |         2 
         Omahenge |         0          0          0          0          0          0          0          0          0          0          0 |         2 
         Omakango |         0          0          0          0          0          0          0          0          0          0          0 |         2 
         Omalyata |         0          0          0          0          0          0          0          0          0          0          0 |         2 
          Omaputu |         0          0          0          0          0          0          0          0          0          0          0 |         2 
          Omukuve |         0          0          0          0          0          0          0          0          0          0          0 |         2 
Omutwe Oshimbungu |         0          0          0          0          0          0          0          0          0          0          0 |         2 
         Onangwhe |         0          0          0          0          0          0          0          0          0          0          0 |         2 
    Onekwaya East |         0          0          0          0          0          0          0          0          0          0          0 |         2 
    Onekwaya West |         0          0          0          0          0          0          0          0          0          0          0 |         2 
         Onengali |         0          0          0          0          0          0          0          0          0          0          0 |         2 
          Ongonga |         0          0          0          0          0          0          0          0          0          0          0 |         2 
        Onheleiwa |         0          0          0          0          0          0          0          0          0          0          0 |         2 
      Oshikwiyu 1 |         0          0          0          0          0          0          0          0          0          0          0 |         2 
      Oshikwiyu 2 |         0          0          0          0          0          0          0          0          0          0          0 |         2 
          Ouhongo |         0          0          0          0          0          0          0          0          0          0          0 |         2 
------------------+-------------------------------------------------------------------------------------------------------------------------+----------
            Total |         2          2          2          2          2          2          2          2          2          2          2 |        64 


                  |                                                      village names
               BX |   Okafitu     Okakwa   Okangudi  Okapundja    Okatale   Okelemba   Omahenge   Omakango   Omalyata    Omaputo    Omukuve |     Total
------------------+-------------------------------------------------------------------------------------------------------------------------+----------
          Edundja |         0          0          0          0          0          0          0          0          0          0          0 |         2 
            Ehafo |         0          0          0          0          0          0          0          0          0          0          0 |         2 
           Endola |         0          0          0          0          0          0          0          0          0          0          0 |         2 
        Epatululu |         0          0          0          0          0          0          0          0          0          0          0 |         2 
            Epuku |         0          0          0          0          0          0          0          0          0          0          0 |         2 
            Etale |         0          0          0          0          0          0          0          0          0          0          0 |         2 
         Etilashi |         0          0          0          0          0          0          0          0          0          0          0 |         2 
           Etomba |         0          0          0          0          0          0          0          0          0          0          0 |         2 
        Ohangwena |         0          0          0          0          0          0          0          0          0          0          0 |         2 
       Oipapakane |         0          0          0          0          0          0          0          0          0          0          0 |         2 
          Okadiwa |         0          0          0          0          0          0          0          0          0          0          0 |         2 
          Okafitu |         2          0          0          0          0          0          0          0          0          0          0 |         2 
           Okakwa |         0          2          0          0          0          0          0          0          0          0          0 |         2 
        Okangundi |         0          0          2          0          0          0          0          0          0          0          0 |         2 
        Okapundja |         0          0          0          2          0          0          0          0          0          0          0 |         2 
          Okatale |         0          0          0          0          2          0          0          0          0          0          0 |         2 
         Okelemba |         0          0          0          0          0          2          0          0          0          0          0 |         2 
         Omahenge |         0          0          0          0          0          0          2          0          0          0          0 |         2 
         Omakango |         0          0          0          0          0          0          0          2          0          0          0 |         2 
         Omalyata |         0          0          0          0          0          0          0          0          2          0          0 |         2 
          Omaputu |         0          0          0          0          0          0          0          0          0          2          0 |         2 
          Omukuve |         0          0          0          0          0          0          0          0          0          0          2 |         2 
Omutwe Oshimbungu |         0          0          0          0          0          0          0          0          0          0          0 |         2 
         Onangwhe |         0          0          0          0          0          0          0          0          0          0          0 |         2 
    Onekwaya East |         0          0          0          0          0          0          0          0          0          0          0 |         2 
    Onekwaya West |         0          0          0          0          0          0          0          0          0          0          0 |         2 
         Onengali |         0          0          0          0          0          0          0          0          0          0          0 |         2 
          Ongonga |         0          0          0          0          0          0          0          0          0          0          0 |         2 
        Onheleiwa |         0          0          0          0          0          0          0          0          0          0          0 |         2 
      Oshikwiyu 1 |         0          0          0          0          0          0          0          0          0          0          0 |         2 
      Oshikwiyu 2 |         0          0          0          0          0          0          0          0          0          0          0 |         2 
          Ouhongo |         0          0          0          0          0          0          0          0          0          0          0 |         2 
------------------+-------------------------------------------------------------------------------------------------------------------------+----------
            Total |         2          2          2          2          2          2          2          2          2          2          2 |        64 


                  |                                                 village names
               BX | Omutwe Os   Onangwhe  Onekwaya   Onekwaya    Onengali    Ongonga  Onheleiwa  Oshikwiyu  Oshikwiyu    Ouhongo |     Total
------------------+--------------------------------------------------------------------------------------------------------------+----------
          Edundja |         0          0          0          0          0          0          0          0          0          0 |         2 
            Ehafo |         0          0          0          0          0          0          0          0          0          0 |         2 
           Endola |         0          0          0          0          0          0          0          0          0          0 |         2 
        Epatululu |         0          0          0          0          0          0          0          0          0          0 |         2 
            Epuku |         0          0          0          0          0          0          0          0          0          0 |         2 
            Etale |         0          0          0          0          0          0          0          0          0          0 |         2 
         Etilashi |         0          0          0          0          0          0          0          0          0          0 |         2 
           Etomba |         0          0          0          0          0          0          0          0          0          0 |         2 
        Ohangwena |         0          0          0          0          0          0          0          0          0          0 |         2 
       Oipapakane |         0          0          0          0          0          0          0          0          0          0 |         2 
          Okadiwa |         0          0          0          0          0          0          0          0          0          0 |         2 
          Okafitu |         0          0          0          0          0          0          0          0          0          0 |         2 
           Okakwa |         0          0          0          0          0          0          0          0          0          0 |         2 
        Okangundi |         0          0          0          0          0          0          0          0          0          0 |         2 
        Okapundja |         0          0          0          0          0          0          0          0          0          0 |         2 
          Okatale |         0          0          0          0          0          0          0          0          0          0 |         2 
         Okelemba |         0          0          0          0          0          0          0          0          0          0 |         2 
         Omahenge |         0          0          0          0          0          0          0          0          0          0 |         2 
         Omakango |         0          0          0          0          0          0          0          0          0          0 |         2 
         Omalyata |         0          0          0          0          0          0          0          0          0          0 |         2 
          Omaputu |         0          0          0          0          0          0          0          0          0          0 |         2 
          Omukuve |         0          0          0          0          0          0          0          0          0          0 |         2 
Omutwe Oshimbungu |         2          0          0          0          0          0          0          0          0          0 |         2 
         Onangwhe |         0          2          0          0          0          0          0          0          0          0 |         2 
    Onekwaya East |         0          0          2          0          0          0          0          0          0          0 |         2 
    Onekwaya West |         0          0          0          2          0          0          0          0          0          0 |         2 
         Onengali |         0          0          0          0          2          0          0          0          0          0 |         2 
          Ongonga |         0          0          0          0          0          2          0          0          0          0 |         2 
        Onheleiwa |         0          0          0          0          0          0          2          0          0          0 |         2 
      Oshikwiyu 1 |         0          0          0          0          0          0          0          2          0          0 |         2 
      Oshikwiyu 2 |         0          0          0          0          0          0          0          0          2          0 |         2 
          Ouhongo |         0          0          0          0          0          0          0          0          0          2 |         2 
------------------+--------------------------------------------------------------------------------------------------------------+----------
            Total |         2          2          2          2          2          2          2          2          2          2 |        64 

. label variable BX "village"

. 
. rename BV day_exp

. label variable day_exp "Day of experiment conduct"

. rename BW month_exp

. label variable month_exp "Month of experiment conduct"

. rename Day day_pre

. label var day_pre "Day of pre-questionnaire conduct

. rename Month month_pre

. label var month_pre "Month of pre-questionnaire conduct"

. replace month_exp="" if id==9 | id==10
(2 real changes made)

. destring month_exp, replace
month_exp: all characters numeric; replaced as byte
(2 missing values generated)

. 
. gen testCB = day_exp-CB
(32 missing values generated)

. tab testCB, miss

     testCB |      Freq.     Percent        Cum.
------------+-----------------------------------
        -19 |          1        1.56        1.56
          0 |         31       48.44       50.00
          . |         32       50.00      100.00
------------+-----------------------------------
      Total |         64      100.00

. sort village id

. /* edit village id day_exp day_pre CB testCB if testCB!=0 /* we assume that CB was a typo */ */
. drop CB testCB

. destring CC, replace
CC already numeric; no replace

. gen testCC = month_exp-CC
(33 missing values generated)

. replace month_exp=8 if village==5
(2 real changes made)

. drop CC

. quietly tab village CD /*ok*/

. drop CD

. 
. 
. 
. *** Interviewer ***
. sort village

. /* edit village Assistant Interviewer BY CE */
. 
. replace Interviewer="1" if regexm(Interviewer, "Pa")
(30 real changes made)

. replace Interviewer="2" if regexm(Interviewer, "Iya")
(23 real changes made)

. replace Interviewer="3" if regexm(Interviewer, "Sa")
(11 real changes made)

. rename Inter interviewer_pre

. label variable interviewer_pre "interviewer for leader, pre-game"

. destring interviewer_pre, replace
interviewer_pre: all characters numeric; replaced as byte

. label define interviewer 1"Parista" 2"Iyalo" 3"Sarah"

. label values interviewer_pre interviewer

. 
. rename Assistant interviewer_exp

. label var interviewer_exp "interviewer for leader in experiment and post questionnaire"

. label values interviewer_exp interviewer

. 
. label var BY "Interviewer in experiment for TL"

. label var CE "Interviewer in experiment for DEL"

. 
. 
. ************************************
. *** RANDOMISATION VARIABLE GAME 3***
. ************************************
. gen pos_pairRN = 0

. replace pos_pairRN = 1 if randomization==1 | randomization==2 | randomization==7 | randomization==8
(22 real changes made)

. replace pos_pairRN = 2 if randomization==3 | randomization==4 | randomization==9 | randomization==10
(22 real changes made)

. replace pos_pairRN = 3 if randomization==5 | randomization==6 | randomization==11 | randomization==12
(20 real changes made)

. 
. gen pos_pairNR = 0

. replace pos_pairNR = 1 if randomization==3 | randomization==5 | randomization==9 | randomization==11
(22 real changes made)

. replace pos_pairNR = 2 if randomization==1 | randomization==6 | randomization==7 | randomization==12
(22 real changes made)

. replace pos_pairNR = 3 if randomization==2 | randomization==4 | randomization==8 | randomization==10
(20 real changes made)

. 
. gen pos_pairNN = 0

. replace pos_pairNN = 1 if randomization==4 | randomization==6 | randomization==10 | randomization==12
(20 real changes made)

. replace pos_pairNN = 2 if randomization==2 | randomization==5 | randomization==8 | randomization==11
(20 real changes made)

. replace pos_pairNN = 3 if randomization==1 | randomization==3 | randomization==7 | randomization==9
(24 real changes made)

. 
. 
. **** MODULE A ****
. 
. *** Check Name-Gender consistency, generate gender dummy ***
. /* edit Name gender */
. rename A1gender male

. recode male (2=0)
(male: 18 changes made)

. label variable male "dummy =1 if male, 0 if women"

. 
. 
. *** Rename important Socio-demos ***
. rename A2marital maritalstatus

. label variable maritalstatus maritalstatus

. label define maritalstatus 1"married" 2"cohabiting" 3"Single" 4"Divorced" 5"Widowed"

. label values maritalstatus maritalstatus

. 
. gen married = (maritalstatus==1 | maritalstatus==2) if leader!=.

. label variable married "Dummy = 1 if married"

. 
. rename A3age age

. label variable age "age in years"

. 
. rename A4a education

. label var education "Highest grade attained at school"

. 
. recode A4bcol 2=0
(A4bcollegedegree: 55 changes made)

. rename A4bcol college

. 
. rename A5ho hhsize

. 
. rename A6 a6

. label variable a6 "Since when living in village"

. /* Later we may create a variable based on A6 and age, taking 1 if person has lived in village since birth */
. 
. rename A7com religion

. label variable religion "religious affiliation"

. replace religion="1" if regexm(religion, "lci")
(33 real changes made)

. replace religion="2" if regexm(religion, "angelica")
(29 real changes made)

. replace religion="3" if regexm(religion, "apos")
(1 real change made)

. replace religion="3" if regexm(religion, "church")
(1 real change made)

. destring religion, replace
religion: all characters numeric; replaced as byte

. label define religion 1"Elcin" 2"Angelican" 3"Apostolic" 4"Church of Christus"

. label values religion religion

. 
. /* No variation in A8a and A8b, can be dropped for leaders */
. drop A8* A7re

. 
. 
. ***************************
. *** MODULE F - PRE-GAME ***
. ***************************
. label define yes 1"yes" 0"no"

. 
. rename F1 f1old

. gen f1 = f1

. label variable f1 "In office since, corrected for DEL"

. /* Keep original f1 variable, but modify "inoffice". Assume that DEL cannot be longer in office than 14 years */
. replace f1=2000 if f1<2000 & DEL==1
(4 real changes made)

. 
. rename F2ate f2a

. label variable f2a "F2a. Is there a term office?"

. replace f2a=1 if  f2a==.
(2 real changes made)

. /* Strange, only few people answer affirmatively - MISTAKE IN OSHIVAMBO TRANSL? Vielleicht haben alle die Headmen Frage bekomment*/
. 
. rename F2c f2c

. /* All missing, I assume that everyone answered question with no*/
. replace f2c=0 if f2c==.
(64 real changes made)

. drop F2d

. label var f2c "F2c. Being in position before?"

. replace f2c=F2cWP if leader==0
(32 real changes made, 2 to missing)

. drop F2cWP

. 
. rename F2b f2b

. quietly tab f2b if f2a==1       //ok

. label variable f2b "F2b. Length of term office?"

. 
. rename F2e f2eold

. label var f2eold "F2e. Will u run for another term, not corrected?"

. gen f2e = f2eold
(37 missing values generated)

. label var f2e "F2e. Will u run for another term?"

. bysort f2a: tab f2e  /* People saying there is no office term restriction nevertheless answer they would run for another term*/

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> f2a = 1

F2e. Will u |
    run for |
    another |
      term? |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |         11       78.57       78.57
          2 |          3       21.43      100.00
------------+-----------------------------------
      Total |         14      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> f2a = 2

F2e. Will u |
    run for |
    another |
      term? |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |         13      100.00      100.00
------------+-----------------------------------
      Total |         13      100.00


. 
. 
. rename F3 f3

. label variable f3 "F3. How did DEL come to power"

. # delimit;
delimiter now ;
. label define f3
> 1 "Directly elected as chairperson by user"
> 2 "Elected as member of the WPC and then elected as CP by WPC"
> 3 "Elected by someone else, specify"
> 4 "Appointed, specify"
> 5 "Inherited position"
> 6 "Other, specify";

. # delimit cr 
delimiter now cr
. label values f3 f3

. 
. rename F3co f3comment

. tab f3 f3comment if f3comment!="."

 F3. How did DEL come |                 F3.comment
             to power | Villagers  village..  villagers  village.. |     Total
----------------------+--------------------------------------------+----------
Elected by someone el |         1          1          0          0 |         2 
   Appointed, specify |         0          0          1          0 |         1 
       Other, specify |         0          0          0          1 |         1 
----------------------+--------------------------------------------+----------
                Total |         1          1          1          1 |         4 

. 
. rename F3b f3b

. label variable f3b "F3b. How did TL come into office?"

. # delimit;
delimiter now ;
. label define f3b
> 1 "Elected by villagers"
> 2 "Eleceted by selected villagers"
> 3 "Elected someone else"
> 4 "Appointed"
> 5 "Inherited position"
> 6 "Other";

. label values f3b f3b;

. # delimit cr
delimiter now cr
. list id f3b F3bcomm if leader==1 & F3bcomm!=""

     +--------------------------------------------------------------------------------------------------------------+
     | id                    f3b                                                                         F3bcomment |
     |--------------------------------------------------------------------------------------------------------------|
 16. | 58              Appointed   Previous headman's family (was his grandfather). Villagers approve the decision. |
 18. |  4              Appointed                                                            by the previous headman |
 20. | 12              Appointed                                                                       royal family |
 24. | 20              Appointed                                                  father (who was previous headman) |
 26. | 42              Appointed                                                  appointed ba the previous headman |
     |--------------------------------------------------------------------------------------------------------------|
 27. | 18              Appointed               family-previous headman was uncle, village was established by family |
 28. | 24              Appointed                                                                     village elders |
 30. | 36              Appointed                                         By my father who was the previous headman. |
 31. | 22              Appointed                                                  village elders and senior headman |
 33. | 34              Appointed                                                              took over from nephew |
     |--------------------------------------------------------------------------------------------------------------|
 34. | 44              Appointed                                                         previous headman (husband) |
 35. | 38              Appointed                                                                       By my father |
 37. | 54              Appointed                                                                     senior headman |
 38. | 30              Appointed                                         By my father who was the previous headman. |
 40. | 62              Appointed                                              by my grandfather who was the headman |
     |--------------------------------------------------------------------------------------------------------------|
 42. | 60              Appointed       by family elders. Previous headman was also from this family (older brother) |
 45. | 16              Appointed                                                            by the previous headman |
 48. | 56   Elected someone else                                                                   previous headman |
 49. | 28              Appointed                                                previous headman and village elders |
 50. |  6              Appointed                                                  by previous headman (grandfather) |
     |--------------------------------------------------------------------------------------------------------------|
 51. | 50              Appointed                                         By my father who was the previous headman. |
 56. | 10   Elected someone else                                                                        grandfather |
 57. | 32              Appointed                                           appointed and then approved by villagers |
 59. | 46   Elected someone else                                                      relatives of previous headman |
 64. | 64              Appointed                                                                          villagers |
     +--------------------------------------------------------------------------------------------------------------+

. tab F3bcom if f3b==3

                            F3b.comment |      Freq.     Percent        Cum.
----------------------------------------+-----------------------------------
                            grandfather |          1       33.33       33.33
                       previous headman |          1       33.33       66.67
          relatives of previous headman |          1       33.33      100.00
----------------------------------------+-----------------------------------
                                  Total |          3      100.00

. replace f3b=4 if f3b==3
(3 real changes made)

. rename F3bcom f3bcomment

. 
. replace f3=1 if (f3comment=="Villagers" | f3comment=="villagers" | f3comment=="villagers voted")
(3 real changes made)

. 
. 
. global e ""a""b""c""

. foreach e of global e{
  2. rename F4`e' f4`e'
  3. }

. rename F4cc f4ccomment

. label var f4a "F4a. Who can become TL"

. label var f4b "F4b. Who can appoint TL"

. label var f4c "F4c. Voting/appointment procedure"

. # delimit:
delimiter now ;
. label define f4c
> 1"Voting/appointment was anonymous "
> 2"Voting/appointment was publicy held"
> 3"Other, specify";

. label values f4c f4c;

. #delimit cr 
delimiter now cr
. 
. rename F5 f5

. 
. label var f5 "F5. No of people running position as leader"

. 
. rename F6 f6

. label var f6 "F6. Motivation to become leader"

. /* Need to identify meaningful categories for this variable */
.  
. rename F7_func f7

. label var f7 "F7. Functions of Leader (self-reported)"

. 
. replace f5=F5a if leader==0
(26 real changes made)

. /*replace f5=20 if (f5==30 | f5==48)*/
. drop F5a

. rename F5b f5b

. label var f5b "Number of received votes"

. 
. /* Recode all dummies and assign label*/
. foreach var of varlist f2a f2c f2e {
  2. recode `var' (2=0)
  3. label values `var' yes
  4. }
(f2a: 50 changes made)
(f2c: 20 changes made)
(f2e: 3 changes made)

. 
. 
. ***************************
. *** MODULE F - Post-GAME ***
. ***************************
. 
. tab F10a

       F10a |      Freq.     Percent        Cum.
------------+-----------------------------------
          2 |         32      100.00      100.00
------------+-----------------------------------
      Total |         32      100.00

. rename F10a f10a

. label variable f10a "F10a, Do you receive a fix payment"

. recode f10a (2=0)
(f10a: 32 changes made)

. label values f10a yes

. 
. rename F10b f10b 

. label variable f10b "F10b, What kind of payments/benefits do you receive"

. gen f10b_new = f10b
(1 missing value generated)

. replace f10b_new="1" if regexm(f10b_new, "othing")
(32 real changes made)

. replace f10b_new="2" if regexm(f10b_new, "start up")
(2 real changes made)

. replace f10b_new="2" if regexm(f10b_new, "usines")
(9 real changes made)

. replace f10b_new="2" if regexm(f10b_new, "shebe")
(1 real change made)

. replace f10b_new="2" if regexm(f10b_new, "bar")
(1 real change made)

. replace f10b_new="3" if regexm(f10b_new, "transport")
(3 real changes made)

. replace f10b_new="4" if regexm(f10b_new, "owner")
(4 real changes made)

. replace f10b_new="4" if regexm(f10b_new, "death")
(1 real change made)

. replace f10b_new="4" if regexm(f10b_new, "deceased")
(1 real change made)

. replace f10b_new="4" if regexm(f10b_new, "taking over")
(1 real change made)

. replace f10b_new="5" if regexm(f10b_new, "land fees")
(3 real changes made)

. replace f10b_new="5" if regexm(f10b_new, "land")
(2 real changes made)

. replace f10b_new="6" if (f10b_new!="1" & f10b_new!="2" & f10b_new!="3" & f10b_new!="4" & f10b_new!="5")
(4 real changes made)

. destring f10b_new, replace
f10b_new: all characters numeric; replaced as byte

. # delimit;
delimiter now ;
. label define f10b_new
> 1"Nothing"
> 2"For starting business"
> 3"Transport allowance"
> 4"Change in house ownership"
> 5"Land fees"
> 6"Other";

. #delimit cr
delimiter now cr
. label values f10b_new f10b_new

. 
. rename F11 f11

. label variable f11 "F11, How much time do you spend leader activities"

. rename F12a f12a

. recode f12a (2=0)
(f12a: 8 changes made)

. label values f12a yes

. label variable f12a "F12a, Right to grant access to land"

. 
. rename F12b f12b

. label variable f12b "F12b, Decision process of land allocation"

. # delimit;
delimiter now ;
. label define f12b
> 1"take decision alone"
> 2"take decision alone but seek other’s opinion"
> 3"take decision together with other people"
> 4"Other specify";

. #delimit cr
delimiter now cr
. label values f12b f12b

. 
. forvalues i=1/4{
  2. rename F12c`i' f12c`i'
  3. }

. label variable f12c1 "Decision criterion applicant's Neediness"

. label variable f12c2 "Decision criterion applicant's Social status"

. label variable f12c3 "Decision criterion applicant's trustworthiness"

. label variable f12c4 "Decision criterion relationship to applicant"

. # delimit;
delimiter now ;
. label define f12c
> 1"Highly relevant"
> 2"Somewhat relevant"
> 3"Rather irrelevant"
> 4"Not at all relevant";

. # delimit cr
delimiter now cr
. foreach var of varlist f12c*{
  2. label values `var' f12c
  3. }

. 
. rename F12d f12d

. label variable f12d "Further criteria for land assignment"

. 
. rename F12e f12e

. label var f12e "Do beneficiaries of land assignment have to pay"

. recode f12e (2=0)
(f12e: 1 changes made)

. label values f12e yes

. 
. global e ""a""b""c""d""

. foreach e of global e{
  2. rename F13`e' f13`e'
  3. }

. label var f13a "Statement:leadership position helps me to improve my financial situation"

. label var f13b "Statement:leadership position increases my popularity among villagers"

. label var f13c "Statement:leadership position increases my status in the community"

. label var f13d "Statement:leadership fosters my connections to people outside the villages"

. foreach var of varlist f13*{
  2. recode `var' (2=0)
  3. label values `var' yes
  4. }
(f13a: 59 changes made)
(f13b: 2 changes made)
(f13c: 2 changes made)
(f13d: 15 changes made)

. 
. global e ""a""b""c""d""

. foreach e of global e{
  2. rename F18`e' f18`e'
  3. }

. label var f18a "Source of water supply for village"

. label define f18a 1"Pipeline" 2"Boreholes" 3"Other"

. 
. label var f18b "Frequency of wrong reports/refusals of water fee"

. # delimit;
delimiter now ;
. label define f18b
> 1"Almost all"
> 2"More than half"
> 3"Less than half, but still a sizeable fraction"
> 4"Only very few"
> 5"None";

. # delimit cr
delimiter now cr
. label values f18b f18b

. 
. label var f18c "Main reason for wrong reports/refusals"

. # delimit;
delimiter now ;
. label define f18c
> 1"Poverty"
> 2"Access to water is costless basic right"
> 3"Other";

. #delimit cr
delimiter now cr
. label values f18c f18c

. replace f18c =. if F18ccomment=="N/A"
(11 real changes made, 11 to missing)

. 
. label var f18d "What do you do with people who refuse to pay?"

. # delimit;
delimiter now ;
. label define f18d
> 1"Report to police"
> 2"Report to Rural Water Supply"
> 3"Report to traditional authority"
> 4"Try to convince them to pay"
> 5"Nothing"
> 6"Refusing access"
> 7"Other";

.  label values f18d f18d;

. # delimit cr
delimiter now cr
. replace f18d =. if F18dcomment=="N/A"
(10 real changes made, 10 to missing)

. replace f18d =2 if regexm(F18dcomment,"rural water")
(1 real change made)

. replace f18d =6 if regexm(F18dcomment,"close")
(2 real changes made)

. replace f18d =6 if regexm(F18dcomment,"cut off")
(1 real change made)

. 
. rename Qa qa

. label var qa "Who has final say wrt important water-related issue"

. rename Qb qb

. labe var qb "If decision is made by committee, according to what procedure"

. # delimit;
delimiter now ;
. label define qa
> 1"Chairperson"
> 2"WPC" 
> 3"WPA"
> 4"RWS"
> 5"Other";

. label values qa qa;

. label define qb
> 1"Majority vote"
> 2"Consensus"
> 3"Other";

. label values qb qb;

. # delimit cr 
delimiter now cr
. 
. replace qa=3 if Qaco=="community members" | Qaco=="village member"
(2 real changes made)

. replace qa=3 if Qaco=="all water tap users"
(1 real change made)

. /* Inconsistency in qb: answered by 31 people though only 19 took WPC in qa */
. 
. 
. /* Module F is cleaned */
. 
. 
. 
. ******************
. **** Module G ****
. ******************
. /* G1b is missing !!!*/
. 
. global el ""a""c""d""e""f""g""h""

. foreach e of global el{
  2. rename G1`e' g1`e'
  3. rename G1`e'_posit g1`e'_position
  4. }

. foreach var of varlist g1a g1c g1d g1e g1f g1g g1h{
  2. recode `var' (2=0)
  3. }
(g1a: 40 changes made)
(g1c: 41 changes made)
(g1d: 28 changes made)
(g1e: 34 changes made)
(g1f: 50 changes made)
(g1g: 33 changes made)
(g1h: 58 changes made)

. label var g1a "G1a. Council Member of traditional authority"  

. label var g1c "G1c. Management committee of a communal conservancy"

. label var g1d "G1d. Board of a political party"

. label var g1e "G1e. Board of a religious organization"

. label var g1f "G1f. Board of a sport or recreational organization"

. label var g1g "G1g. Board of professional organization"

. label var g1h "G1h. Board of other"

. 
. forva i=1/5{
  2. rename G2_name`i' g2_name`i'
  3. }

. forv i=1/3{
  2. rename G3_name`i' g3_name`i'
  3. }

. forv i=1/6{
  2. rename G4b_name`i' g4b_name`i'
  3. rename G4b_relationship`i' g4b_relation`i'
  4. }

. rename G4a g4a

. recode g4a (2=0)
(g4a: 7 changes made)

. label variable g4a "G4a. Relatives in village?"

. 
. label define rela 1"close friend" 2"relative" 3"no friend or relative" 

. global el ""a""c""d""e""

. foreach e of global el{
  2. rename G5`e' g5`e'
  3. label values g5`e' rela
  4. }

. label variable g5c "G5c. Relationship to Healer"

. label variable g5a "G5a. Relationship to TL/DEL"

. label variable g5d "G5d. Relationship to Councilor"

. label variable g5e "G5e. Relationship to priest"

. 
. rename G6_most g6

. rename G6co g6comment

. 
. # delimit;
delimiter now ;
. label define g6
> 1 "I myself"
> 2 "The traditional healer"
> 3 "The local councilor"
> 4 "The local priest/pastor" 
> 5 "TL / DEL"
> 6 "Other";

. # delimit cr
delimiter now cr
. label values g6 g6

. 
. 
. 
. ****************
. *** MODULE C ***
. ****************
. forvalues i=1/12{
  2. rename C`i' c`i'
  3. }

. 
. /* NOTE: For the labels, we use the following prefix:
> "BF" for Big Five item, "AL" for Authentic Leaderhsip item (Why did we not include self-awareness???? Fuck).
> 
> We further specify the respective components: 
> Components of AL:
> AL-IMP = Internalized Moral Perspective: C13, C16, C19, C22 
> AL-BP = Balanced Processing: C14, C17, C20, C23
> AL-RT = Relational Transparency: C15, C18, C21, C24
> 
> Components of 10-Item-BF:
> BF-EV = Extraversion: C26, C29
> BF-AN = Agreeableness: C25, C31
> BF-CN = Conscientiousness: C27, C32
> BF-NC = Neuroticism: C28, C33
> BF-ON = Openness: C30, C34
> */
. 
. label var c1 "C1. For important decisions members of a group should be allowed to vote"

. label var c2 "C2. Most people can learn to be leaders- it’s not a matter of birth"  

. label var c3 "C3. Democratic elections in this village ensure that the elected authorities act in the interests of their people"
note: label truncated to 80 characters

. label var c4 "C4. In most cases, failures in this village are traceable to  bad leadership"

. label var c5 "C5. Schools and parents should teach children to obey authority"

. label var c6 "C6. Favouring friends, relatives or supporters over others in the course of ones duties as a leader is sometimes justified"
note: label truncated to 80 characters

. label var c7 "C7. On the whole, men make better political leaders than women do"

. label var c8 "C8. A leader has to serve all his/her people including those who did not vote for him/her or are not friends with him/her" 
note: label truncated to 80 characters

. label var c9 "C9. Accepting a bribe in the course of ones duties is sometimes justified"

. label var c10 "C10. Most people in this village can be trusted" 

. label var c11 "C11. On the whole, more-educated people make better political leaders than the less-educated do"
note: label truncated to 80 characters

. label var c12 "C12. On the whole, elders make better political leaders than the youth do"

. label var c13 "AL-IMP My actions reflect my core values"

. label var c14 "AL-BP I seek others’ opinions before making up my own mind"

. label var c15 "AL-RT I openly share my feelings with others"

. label var c16 "AL-IMP I do allow group pressure to control me"

. label var c17 "AL-BP I listen closely to the ideas of those who disagree with me"

. label var c18 "AL-RT I let others know who I truly am as a person"

. label var c19 "AL-IMP Other people know where I stand on controversial issues"

. label var c20 "AL-BP I do not emphasize my own point of view at the expense of others"

. label var c21 "AL-RT I rarely present a “false” front to others"

. label var c22 "AL-IMP My morals guide what I do as a leader"

. label var c23 "AL-BP I listen very carefully to the ideas of others before making decisions"

. label var c24 "AL-RT I admit my mistakes to others"

. label var c25 "BF-AN I see myself as someone who is generally trusting"

. label var c26 "BF-EV I see myself as someone who is reserved"

. label var c27 "BF-CN I see myself as someone who tends to be lazy"

. label var c28 "BF-NC I see myself as someone who is relaxed, handles stress well"

. label var c29 "BF-EV I see myself as someone who is outgoing, sociable"

. label var c30 "BF-ON I see myself as someone who has few artistic interests"

. label var c31 "BF-AN I see myself as someone who tends to find fault with others"

. label var c32 "BF-CN I see myself as someone who does a thorough job"

. label var c33 "BF-NC I see myself as someone who gets nervous easily"

. label var c34 "BF-ON I see myself as someone who has an active imagination"

. 
. # delimit;
delimiter now ;
. label define c
> 1"Strongly disagree"
> 2"Disagree a little"
> 3"Agree a little"
> 4"Strongly agree"
> 5"Don’t know";

. # delimit cr
delimiter now cr
. forvalues i=1/34{
  2. label values c`i' c
  3. }

. /* NOTE: The answer category "dont know" has hardly been chosen. We can set it to missing, cannot work withit anyway*/
. forvalues i=1/34{
  2. replace c`i'=. if c`i'==5
  3. }
(0 real changes made)
(0 real changes made)
(0 real changes made)
(2 real changes made, 2 to missing)
(0 real changes made)
(0 real changes made)
(1 real change made, 1 to missing)
(0 real changes made)
(0 real changes made)
(1 real change made, 1 to missing)
(1 real change made, 1 to missing)
(1 real change made, 1 to missing)
(1 real change made, 1 to missing)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(5 real changes made, 5 to missing)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

. 
. 
. 
. label var c35a "I see myself as part of the Namibian nation"

. label var c35b "I see myself as part of my local community"

. label var c35c "I see myself as part of my ethnic group"   

. label var c35d "I see myself as part of my kinship/clan"           

. label var c35e "I see myself as a world citizen"

. label var c35f "I see myself as an autonomous individual"

. label define c35 1"Most applicable" 2"Second most applicable"

. foreach var of varlist c35*{
  2. label values `var' c35
  3. }

. 
. 
. 
. 
. ****************
. *** MODULE D ***
. ****************
. *** Recode Asset variables, 0 instead of 2 for no ***
. rename D1incomeso d1

. label variable d1 "Income source"

. # delimit;
delimiter now ;
. label define is
> 1"Public sector employee"
> 2"Private sector employee"
> 3"Agriculture"
> 4"Livestock farming"
> 5"Own business (self-employment)"
> 6"Pension"
> 7"Transfers"
> 8"Other";

. label values d1 is;

. # delimit cr
delimiter now cr
. /* one mistake in d1, income is 600, most probably pension. Change accordingly */
. replace d1=6 if d1==9
(1 real change made)

. replace d1=. if d1==0 | d1==100
(0 real changes made)

. 
. rename D1b d1b

. labe var d1b "Personal monthly income"

. 
. rename D2 d2

. label var d2 "Household monthly income"

. replace d2=600 if d1==6 & (d2==0 | d2==.)
(1 real change made)

. /* We may not use d2, data are shit */
. 
. rename D3a d3a

. rename D3b d3b

. rename D3c d3c

. label var d3a "Cattle"

. label var d3b "Sheep"

. label var d3c "Goats"

. 
. gen ssu = d3a*6+d3b+d3c

. label var ssu "Livestock possession in small stock units, 1 cattle equivalent to 6 goat/sheep"

. 
. 
. rename D4 d4

. label variable d4 "Comparison to others"

. label define d4 1"Better off" 2"Worse off" 3"Equal"

. label values d4 d4

. 
. global a ""a""b""c""d""e""f""g""i""j""k""l""m""n""

. foreach e of global a{
  2. recode D5`e'* 2=0
  3. }
(D5aOladio: 7 changes made)
(D5bTV: 48 changes made)
(D5cCell: 0 changes made)
(D5dOfiligi: 45 changes made)
(D5e_eshinalokukosha: 62 changes made)
(D5f_efiyalokuteleka: 42 changes made)
(D5g_eshinalokuhondja: 44 changes made)
(D5i_ohauto: 28 changes made)
(D5j_omota: 64 changes made)
(D5k_ombashikela: 41 changes made)
(D5l_okatembakendongi: 61 changes made)
(D5mGenerator: 58 changes made)
(D5n_oshipululo: 10 changes made)

. foreach e of global a{
  2. rename D5`e'* d5`e'
  3. }

. label var d5a "Radio"

. label var d5b "Television"

. label var d5c "Cell phone"

. label var d5d "Refrigerator / Freezer"

. label var d5e "Washing Machine"

. label var d5f "Stove (electric, paraffin, kerosin"

. label var d5g "Sewing machine"

. label var d5i "Car"

. label var d5j "Motorcycle / Scooter"

. label var d5k "Bicycle"

. label var d5l "Donkey-cart / Ox-cart"

. label var d5m "Generator"

. label var d5n "Plough"

. 
. 
. 
. rename D6wa d6

. label var d6 "HH's main source of water"

. # delimit;
delimiter now ;
. label define d6
> 1"Private tap"
> 2"Public tap"
> 3"Water tank"
> 4"Well"
> 5"Other";

. # delimit cr
delimiter now cr
. label values d6 d6

. rename D6c d6comment

. 
. rename D7afl d7a

. replace d7a=5 if d7a==6
(2 real changes made)

. label var d7a "HH's material for floor"

. # delimit;
delimiter now ;
. label define d7a
> 1"Sand"
> 2"concrete"
> 3"mud, clay and/or cow dung"
> 4"wood"
> 5"other";

. # delimit cr
delimiter now cr
. label values d7a d7a

. rename D7ac d7acomment

. 
. 
. 
. **************************************
. *** Procedural-Fairness: Game 1 ***
. **************************************
. 
. label var rule_1 "1=majority, 2=dictator, 3=Fake majority rule"

. label var rule_2 "1=majority, 2=dictator, 3=Fake majority rule"

. label var rule_3 "1=majority, 2=dictator, 3=Fake majority rule"

. label var rule_4 "1=majority, 2=dictator, 3=Fake majority rule"

. label var rule_bonus_1 "1=majority, 2=dictator, 3=Fake majority rule"

. label var rule_bonus_2 "1=majority, 2=dictator, 3=Fake majority rule"

. 
. label var vote_1 "Benefit to leader at the expense of villagers" /* A=(100,10,10,10,10,10,10)   vs.     B=(40,20,20,20,20,20,20) */

. label var vote_2 "Benefit to leader at no cost to villagers" /* A=(60,20,20,20,20,20,20)        vs.     B=(40,20,20,20,20,20,20)*/

. label var vote_3 "Unequal villagers" /* A=(40,5,23,23,23,23,23) vs.     B=(40,20,20,20,20,20,20)*/

. label var vote_4 "Spiteful Leader" /* A=(40,15,15,15,15,15,15)  vs.     B=(40,20,20,20,20,20,20)*/

. label var vote_bonus_1 "Small bonus (+10) for choosing majority or fake majority" /* same as in decision 1: A=(100,10,10,10,10,10,10)   vs.     B=(40,2
> 0,20,20,20,20,20)*/

. label var vote_bonus2 "Big bonus (+100) for choosing majority or fake majority" /* same as in decision 1: A=(100,10,10,10,10,10,10)     vs.     B=(40,2
> 0,20,20,20,20,20)*/

. 
. label var majority_1 "Majority-decision of group independent of implemented rule by leader"

. label var majority_2 "Majority-decision of group independent of implemented rule by leader"

. label var majority_3 "Majority-decision of group independent of implemented rule by leader"

. label var majority_4 "Majority-decision of group independent of implemented rule by leader"

. label var majority_bonus1 "Majority-decision of group independent of implemented rule by leader" /*only leaders voted / picked rule in bonus1, we took 
> villagers decision from decision 1*/

. label var majority_bonus2 "Majority-decision of group independent of implemented rule by leader" /*only leaders voted / picked rule in bonus2, we took 
> villagers decision from decision 1*/

. 
. label define decision 1 "Chose A" 2 "Chose B"

. 
. foreach var of varlist vote_*{
  2. replace `var'="1" if `var'=="a"
  3. replace `var'="2" if `var'=="b"
  4. destring `var', replace
  5. label values `var' decision
  6. }
(34 real changes made)
(30 real changes made)
vote_1: all characters numeric; replaced as byte
(19 real changes made)
(45 real changes made)
vote_2: all characters numeric; replaced as byte
(49 real changes made)
(15 real changes made)
vote_3: all characters numeric; replaced as byte
(18 real changes made)
(46 real changes made)
vote_4: all characters numeric; replaced as byte
(34 real changes made)
(30 real changes made)
vote_bonus_1: all characters numeric; replaced as byte
(38 real changes made)
(26 real changes made)
vote_bonus2: all characters numeric; replaced as byte

. 
. **************************************
. *** Social type, Preference-Game 2 ***
. **************************************
. 
. label variable decision1 "Prosocial game trade-off 5,5 vs 5,0" /* A=[5,5] B=[5,0] -> first number player himself, second number is rdm player from part
> icipants*/

. label variable decision2 "Envy game trade-off 5,5 vs 5,10" /* A=[5,5] B=[5,10] */

. label variable decision3 "Sharing game trade-off 5,5 vs 10,0" /* A=[5,5] B=[10,0] */

. 
. foreach var of varlist decision*{
  2. replace `var'="1" if `var'=="a"
  3. replace `var'="2" if `var'=="b"
  4. destring `var', replace
  5. label values `var' decision
  6. }
(59 real changes made)
(5 real changes made)
decision1: all characters numeric; replaced as byte
(31 real changes made)
(33 real changes made)
decision2: all characters numeric; replaced as byte
(42 real changes made)
(22 real changes made)
decision3: all characters numeric; replaced as byte

. 
. **************************************
. *** Nepotism(TG-TTP)-Game 3 ***
. **************************************
. 
. /*1) Bezeichnung der Paare im Nepotismus Game sollte unbenannt werden in pairRN, pairNR, pairNN
> Game 3 (TG-TTP)
> Pair 1  = RN, relative neutral
> Pair 2  = NR, neutral relative
> Pair 3  = NN, neutral neutral
> r = right, i.e. defection
> d = down, i.e. cooperation*/
. 
. label var punish_right_Pair1 "PSP in pairRN (Player A=relative,Player B=neutral)"

. label var punish_down_Pair1 "ASP in pairRN (Player A=relative,Player B=neutral)"

. label var punish_right_Pair2 "PSP in pairNR (Player A=neutral,Player B=relative)"

. label var punish_down_Pair2 "ASP in pairNR (Player A=neutral,Player B=relative)"

. label var punish_right_Pair3 "PSP in pairNN (Player A=neutral,Player B=neutral)"

. label var punish_down_Pair3 "ASP in pairNN (Player A=neutral,Player B=neutral)"

. 
. rename punish_right_Pair1 PSP_RN

. rename punish_right_Pair2 PSP_NR

. rename punish_right_Pair3 PSP_NN

. rename punish_down_Pair1 ASP_RN

. rename punish_down_Pair2 ASP_NR

. rename punish_down_Pair3 ASP_NN

. 
. 
. save "$working_ANALYSIS\processed\leader_clean.dta", replace
file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\processed\leader_clean.dta saved

. 
. 
. 
. 
. 
. *----------------------------
. * 2) Clean villager data
. *----------------------------
. clear

. use "$working_ANALYSIS\data\villagers_raw.dta"

. 
. *** Generate Village-Variable in byte-Format ***
. /* Necessary if we want to control for village-fixed effects.
> Note: need to make sure that we use the same codes in leader dataset*/
. 
. gen village = Village

. replace village = "1" if village=="Edundja"
(12 real changes made)

. replace village = "2" if village=="Ehafo"
(12 real changes made)

. replace village = "3" if village=="Endola"
(12 real changes made)

. replace village = "4" if village=="Epatululo"
(12 real changes made)

. replace village = "5" if village=="Epuku"
(12 real changes made)

. replace village = "6" if village=="Etale"
(12 real changes made)

. replace village = "7" if village=="Etilashi"
(12 real changes made)

. replace village = "8" if village=="Etomba"
(12 real changes made)

. replace village = "9" if village=="Ohangwena"
(12 real changes made)

. replace village = "10" if village=="Oipapakane"
(12 real changes made)

. replace village = "11" if village=="Okadiwa"
(12 real changes made)

. replace village = "12" if village=="Okafitu"
(12 real changes made)

. replace village = "13" if village=="Okakwa"
(12 real changes made)

. replace village = "14" if village=="Okangudi"
(12 real changes made)

. replace village = "15" if village=="Okapundja"
(12 real changes made)

. replace village = "16" if village=="Okatale"
(12 real changes made)

. replace village = "17" if village=="Okelemba"
(12 real changes made)

. replace village = "18" if village=="Omahenge"
(12 real changes made)

. replace village = "19" if village=="Omakango"
(12 real changes made)

. replace village = "20" if village=="Omalyata"
(12 real changes made)

. replace village = "21" if village=="Omaputo"
(12 real changes made)

. replace village = "22" if village=="Omukuve"
(12 real changes made)

. replace village = "23" if village=="Omutwe Oshimbungu"
(12 real changes made)

. replace village = "24" if village=="Onangwhe"
(12 real changes made)

. replace village = "25" if village=="Onekwaya East"
(12 real changes made)

. replace village = "26" if village=="Onekwaya west"
(12 real changes made)

. replace village = "27" if village=="Onengali"
(12 real changes made)

. replace village = "28" if village=="Ongonga"
(12 real changes made)

. replace village = "29" if village=="Onheleiwa"
(12 real changes made)

. replace village = "30" if village=="Oshikwiyu A"
(12 real changes made)

. replace village = "31" if village=="Oshikwiyu B"
(12 real changes made)

. replace village = "32" if village=="Ouhongo"
(12 real changes made)

. destring village, replace
village: all characters numeric; replaced as byte

. 
. #delimit;
delimiter now ;
. label define village 
> 1 "Edundja"
> 2 "Ehafo"
> 3 "Endola"
> 4 "Epatululo"
> 5 "Epuku"
> 6 "Etale"
> 7 "Etilashi"
> 8 "Etomba"
> 9 "Ohangwena"
> 10 "Oipapakane"
> 11 "Okadiwa"
> 12 "Okafitu"
> 13 "Okakwa"
> 14 "Okangudi"
> 15 "Okapundja"
> 16 "Okatale"
> 17 "Okelemba"
> 18 "Omahenge"
> 19 "Omakango"
> 20 "Omalyata"
> 21 "Omaputo"
> 22 "Omukuve"
> 23 "Omutwe Oshimbungu"
> 24 "Onangwhe"
> 25 "Onekwaya East"
> 26 "Onekwaya West"
> 27 "Onengali"
> 28 "Ongonga"
> 29 "Onheleiwa"
> 30 "Oshikwiyu 1"
> 31 "Oshikwiyu 2"
> 32 "Ouhongo";

. label values village village;

. #delimit cr
delimiter now cr
. quietly tab village Village //ok, everything correct

. drop Village // not necessary anymore

. label variable village "village names"

. tab village, gen(village_)

    village names |      Freq.     Percent        Cum.
------------------+-----------------------------------
          Edundja |         12        3.13        3.13
            Ehafo |         12        3.13        6.25
           Endola |         12        3.13        9.38
        Epatululo |         12        3.13       12.50
            Epuku |         12        3.13       15.63
            Etale |         12        3.13       18.75
         Etilashi |         12        3.13       21.88
           Etomba |         12        3.13       25.00
        Ohangwena |         12        3.13       28.13
       Oipapakane |         12        3.13       31.25
          Okadiwa |         12        3.13       34.38
          Okafitu |         12        3.13       37.50
           Okakwa |         12        3.13       40.63
         Okangudi |         12        3.13       43.75
        Okapundja |         12        3.13       46.88
          Okatale |         12        3.13       50.00
         Okelemba |         12        3.13       53.13
         Omahenge |         12        3.13       56.25
         Omakango |         12        3.13       59.38
         Omalyata |         12        3.13       62.50
          Omaputo |         12        3.13       65.63
          Omukuve |         12        3.13       68.75
Omutwe Oshimbungu |         12        3.13       71.88
         Onangwhe |         12        3.13       75.00
    Onekwaya East |         12        3.13       78.13
    Onekwaya West |         12        3.13       81.25
         Onengali |         12        3.13       84.38
          Ongonga |         12        3.13       87.50
        Onheleiwa |         12        3.13       90.63
      Oshikwiyu 1 |         12        3.13       93.75
      Oshikwiyu 2 |         12        3.13       96.88
          Ouhongo |         12        3.13      100.00
------------------+-----------------------------------
            Total |        384      100.00

. 
. *** Generate unique Villager-ID starting from 64 onwards ***
. sort village PNo

. rename PNo session_id

. gen id = _n+64

. label variable id "unique identifier"

. duplicates report id //ok

Duplicates in terms of id

--------------------------------------
   copies | observations       surplus
----------+---------------------------
        1 |          384             0
--------------------------------------

. 
. *** Day and Month ***
. rename Day day_exp

. label variable day_exp "Day of experiment conduct"

. rename Month month_exp

. label variable day_exp "Month of experiment conduct"

. 
. rename Relationshiptoleader relation

. label var relation "session_id 1-2 related TL, 3-4 DEL, 5-12 neutral"

. rename solvedallcontrolquestion solved_all

. label var solved_all "Participant answered all control questions correctly"

. 
. rename Name name

. label var name "Participant's name"

. 
. 
. **** MODULE A: PERSONAL CHARACTERISTICS ****
. 
. rename A1gender male

. recode male (2=0)
(male: 235 changes made)

. label variable male "dummy =1 if male, 0 if women"

. list name id if male==.

     +----------------------------+
     |                 name    id |
     |----------------------------|
 78. |     Paulus Albertina   142 |
 86. |      Rosalia Shaduwa   150 |
224. |     Mering Shitaleni   288 |
296. |    Rachel Makwatumba   360 |
300. | Haimbodi Hambeleleni   364 |
     +----------------------------+

. replace male=1 if id==142
(1 real change made)

. replace male=0 if id==150
(1 real change made)

. replace male=0 if id==360
(1 real change made)

. replace male=1 if id==364
(1 real change made)

. 
. *** Rename important Socio-demos ***
. 
. rename A3age age

. label variable age "age in years"

. 
. rename A4a education

. label var education "Highest grade attained at school"

. 
. rename A6 a6

. label variable a6 "Since when living in village"

. /* Later we may create a variable based on A6 and age, taking 1 if person has liv
> > ed in village since birth */
. 
. rename A9ethnicity a9eth

. label var a9eth "What ethnic group do you identify with?"

. rename A9bclan a9bclan

. label var a9bclan " If Ovambo, please specify the clan you identify with"

. ***MODULE A DONE***
. 
. **** MODULE B: VILLAGE LIFE AND LOCAL ORGANIZATIONS****
. 
. rename B1 b1

. label var b1 "What would you say is the most influential village position?"

. #delimit;
delimiter now ;
. label define b1
> 1 "TL"
> 2 "DEL"
> 3 "trad. healer/witch-doc"
> 4 "local councilor"
> 5 "local priest/pastor"
> 6 "other, define";

. label values b1 b1;

. #delimit cr
delimiter now cr
. 
. rename B2a b2a

. label var b2a "who is responsible for access to and use of the village’s water resources"

. #delimit;
delimiter now ;
. label define b2
> 1 "WPC committee"
> 2 "TL"
> 3 "local government"
> 4 "villagers"
> 5 "each individual him/herself"
> 6 "someone else";

. label values b2a b2;

. #delimit cr
delimiter now cr
. 
. rename B2b b2b

. label var b2b "who responsible for access to and use of the village’s agricultural land"

. label values b2b b2

. 
. rename B2c b2c

. label var b2c "who responsible for access to and use of the village’s grazing land "

. label values b2c b2

. 
. rename B3 b3

. label var b3 "Name of WPC?"

. 
. rename B4 b4

. recode b4 (2=0)
(b4: 326 changes made)

. label var b4 "Member of WPC-committee?"

. 
. rename B5a b5a

. recode b5a (2=0)
(b5a: 157 changes made)

. label var b5a "Vote in last wp-committee election?"

. 
. rename B5b b5b

. recode b5b (2=0)
(b5b: 90 changes made)

. label var b5b " If yes, did you vote for the current WPC"

. 
. rename B6candidates b6candidates

. label var b6candidates "How many candidates in the last election?"

. 
. global a ""a""b""c""d""e""f""

. foreach e of global a{
  2. rename B7`e' b7`e'
  3. replace b7`e'=. if b7`e'==5
  4. }
(118 real changes made, 118 to missing)
(106 real changes made, 106 to missing)
(163 real changes made, 163 to missing)
(130 real changes made, 130 to missing)
(130 real changes made, 130 to missing)
(74 real changes made, 74 to missing)

. #delimit;
delimiter now ;
. label define agree
> 1"Strongly disagree"
> 2"Disagree a little"
> 3"Agree a little"
> 4"Strongly agree"
> 5"Don’t know";

. # delimit cr
delimiter now cr
. 
. label var b7a "election votes were counted by a group of trustworthy people"

. label value b7a agree

. 
. label var b7b "elections held in privat"

. label value b7b agree

. 
. label var b7c "intimidation of candidates running for office"

. label value b7c agree

. 
. label var b7d "elected candidates made promises that were they didnt keep"

. label value b7d agree

. 
. label var b7e "people were paid to vote for a certain candidate"

. label value b7e agree

. 
. label var b7f "I felt pressure to vote for a ceratin candidate"

. label value b7f agree

. 
. 
. global b ""a""b""c""d""

. foreach e of global b{
  2. rename B8`e' b8`e'
  3. replace b8`e'=. if b8`e'==5
  4. }
(130 real changes made, 130 to missing)
(53 real changes made, 53 to missing)
(123 real changes made, 123 to missing)
(107 real changes made, 107 to missing)

. 
. label var b8a "Small repairs are directly undertaken by the WPC"

. label values b8a agree

. 
. label var b8b "WPC takes decisions in a way that they are understandable for the people"

. label value b8b agree

. 
. label var b8c "WPC takes action against people who wrongly report/refuse to pay the fees"

. label value b8c agree

. 
. label var b8d "DEL exploits his/her position for own benefit"

. label value b8d agree

. 
. rename B9 b9

. label var b9 "How many people report false water consumption?"

. #delimit;
delimiter now ;
. label define b9
> 1 "Almost all"
> 2 "More than half"
> 3 "Less than half, but still a sizeable fraction"
> 4 "Only very few"
> 5 "None"
> 6 "Don’t know";

. # delimit cr
delimiter now cr
. label value b9 b9

. 
. global c ""a""b""c""

. foreach e of global c{
  2. rename B10`e' b10`e'
  3. }

. label var b10a "Overall satisfaction with WP-committee?"

. #delimit;
delimiter now ;
. label define satisfied
> 1 "very satisfied"
> 2 "somewhat satisfied"
> 3 "somewhat dissatisfied"
> 4 "very dissatisfied"
> 5 "don't know";

. #delimit cr
delimiter now cr
. label value b10a satisfied

. 
. label var b10b "Satisfaction with performance of DEL?"

. label value b10b satisfied

. 
. label var b10c "Would you vote for the current chairperson(if tomorrow would be elections?"

. recode b10c (2=0)
(b10c: 41 changes made)

. 
. global d ""a""b""c""d""e""f""g""h""i""

. foreach e of global d{
  2. rename B11`e' b11`e'
  3. replace b11`e'=. if b11`e'==5
  4. }
(65 real changes made, 65 to missing)
(136 real changes made, 136 to missing)
(43 real changes made, 43 to missing)
(17 real changes made, 17 to missing)
(58 real changes made, 58 to missing)
(26 real changes made, 26 to missing)
(18 real changes made, 18 to missing)
(85 real changes made, 85 to missing)
(95 real changes made, 95 to missing)

. label var b11a "everybody from the village could become TL?"

. label value b11a agree

. 
. label var b11b "TL made promises he didn't keep?"

. label value b11b agree

. 
. label var b11c "TL allocates access to farming/grazin land in a fair manner?"

. label value b11c agree

. 
. label var b11d "In caes of Arguments/conflicts the TL tries to find fair solutions?"

. label value b11d agree

. 
. label var b11e "TL treats people equally in the trad. court?"

. label value b11e agree

. 
. label var b11f "TL takes actions against people who disobey rules?"

. label value b11f agree

. 
. label var b11g "TL takes decisions so they are understandable?"

. label value b11g agree

. 
. label var b11h "TL eploits his position to his own interest?"

. label value b11h agree

. 
. label var b11i"Creation of WP-committee reduced power of TL?"

. label value b11i agree

. 
. rename B12asatisfactionheadman b12satisfactionTL

. label var b12satisfactionTL "How satisfied are you with the performance of the village headman?"

. label value b12satisfactionTL satisfied

. 
. rename B12b b12b

. recode b12b (2=0)
(b12b: 23 changes made)

. label var b12b "If there was an election for the TL, would you vote for the current TL?"

. ***MODULE B DONE***
. 
. **** MODULE C: OPINIONS****
. 
. forvalues e=1/12{
  2. rename C`e' c`e'
  3. replace c`e'=. if c`e'==5
  4. }
(47 real changes made, 47 to missing)
(50 real changes made, 50 to missing)
(45 real changes made, 45 to missing)
(104 real changes made, 104 to missing)
(16 real changes made, 16 to missing)
(56 real changes made, 56 to missing)
(78 real changes made, 78 to missing)
(20 real changes made, 20 to missing)
(50 real changes made, 50 to missing)
(42 real changes made, 42 to missing)
(29 real changes made, 29 to missing)
(24 real changes made, 24 to missing)

. 
. label var c1 "C1. For important decisions members of a group should be allowed to vote"

. label var c2 "C2. Most people can learn to be leaders- it’s not a matter of birth"  

. label var c3 "C3. Democratic elections in this village ensure that the elected authorities act in the interests of their people"
note: label truncated to 80 characters

. label var c4 "C4. In most cases, failures in this village are traceable to  bad leadership"

. label var c5 "C5. Schools and parents should teach children to obey authority"

. label var c6 "C6. Favouring friends, relatives or supporters over others in the course of ones duties as a leader is sometimes justified"
note: label truncated to 80 characters

. label var c7 "C7. On the whole, men make better political leaders than women do"

. label var c8 "C8. A leader has to serve all his/her people including those who did not vote for him/her or are not friends with him/her" 
note: label truncated to 80 characters

. label var c9 "C9. Accepting a bribe in the course of ones duties is sometimes justified"

. label var c10 "C10. Most people in this village can be trusted" 

. label var c11 "C11. On the whole, more-educated people make better political leaders than the less-educated do"
note: label truncated to 80 characters

. label var c12 "C12. On the whole, elders make better political leaders than the youth do"

. 
. forvalues e=1/12{
  2. label values c`e' agree
  3. }

. ***MODULE C DONE***
. 
. **** MODULE D: ECONOMIC SITUATION****
. 
. *** Recode Asset variables, 0 instead of 2 for no ***
. rename D1incomeso d1

. label variable d1 "Income source"

. # delimit;
delimiter now ;
. label define is
> 1"Public sector employee"
> 2"Private sector employee"
> 3"Agriculture"
> 4"Livestock farming"
> 5"Own business (self-employment)"
> 6"Pension"
> 7"Transfers"
> 8"Other";

. label values d1 is;

. # delimit cr
delimiter now cr
. replace d1=6 if d1==9
(0 real changes made)

. 
. rename D1b d1b

. labe var d1b "Personal monthly income"

. 
. rename D2 d2

. label var d2 "Household monthly income"

. replace d2=600 if d1==6 & (d2==0 | d2==.)
(2 real changes made)

. /* We may not use d2, data are shit */
. 
. rename D3a d3a

. rename D3b d3b

. rename D3c d3c

. label var d3a "Cattle"

. label var d3b "Sheep"

. label var d3c "Goats"

. 
. gen ssu = d3a*6+d3b+d3c
(6 missing values generated)

. label var ssu "Livestock possession in small stock units, 1 cattle equivalent to 6 goat/sheep"

. 
. 
. rename D4 d4

. label variable d4 "Comparison to others"

. label define d4 1"Better off" 2"Worse off" 3"Equal"

. label values d4 d4

. 
. rename D5_etemba D5l_etemba

. 
. global f ""a""b""c""d""e""f""g""h""i""j""k""l""m""n""

. foreach e of global f{
  2. recode D5`e'* 2=0
  3. }
(D5a_oladio: 75 changes made)
(D5b_otivi: 319 changes made)
(D5c_Ongodiyopeke: 22 changes made)
(D5d_Oshikopayokutalaleka: 332 changes made)
(D5e_okila: 350 changes made)
(D5f_Eshinalokukosha: 372 changes made)
(D5g_efiya: 324 changes made)
(D5h_Eshinalokuhondja: 313 changes made)
(D5i_ohauto: 270 changes made)
(D5j_omota: 363 changes made)
(D5k_Ombashikela: 288 changes made)
(D5l_etemba: 352 changes made)
(D5mGenerator: 340 changes made)
(D5n_Oshipululo: 150 changes made)

. foreach e of global f{
  2. rename D5`e' d5`e'
  3. }

. label var d5a "Radio"

. label var d5b "Television"

. label var d5c "Cell phone"

. label var d5d "Fridge, Refrigerator"

. label var d5e "Freezer"

. label var d5f "Washing machine"

. label var d5g "Stove (electric, paraffin, kerosin"

. label var d5h "Sewing machine"

. label var d5i "Car"

. label var d5j "Motorcycle / Scooter"

. label var d5k "Bicycle"

. label var d5l "Donkey-cart / Ox-cart"

. label var d5m "Generator"

. label var d5n "Plough"

. 
. rename D6watersource d6

. label var d6 "HH's main source of water"

. # delimit;
delimiter now ;
. label define d6
> 1"Private tap"
> 2"Public tap"
> 3"Water tank"
> 4"Well"
> 5"Other";

. # delimit cr
delimiter now cr
. label values d6 d6

. 
. rename D7afl d7a

. replace d7a=5 if d7a==6
(0 real changes made)

. label var d7a "HH's material for floor"

. # delimit;
delimiter now ;
. label define d7a
> 1"Sand"
> 2"concrete"
> 3"mud, clay and/or cow dung"
> 4"wood"
> 5"other";

. # delimit cr
delimiter now cr
. label values d7a d7a

. 
. rename D7bwa d7b

. replace d7b=5 if d7b==6
(27 real changes made)

. label var d7b "HH's main material for walls"

. #delimit;
delimiter now ;
. label define d7b
> 1"cement blocks, bricks, stones"
> 2"corrugated iron, zinc"
> 3"sticks"
> 4"thatch, grass"
> 5"other";

. #delimit cr
delimiter now cr
. label values d7b d7b

. 
. ***MODULE D DONE***
. 
. ***************************************************
. ***MODULE E: Relationship to other participants***
. ***************************************************
. 
. rename e1afriends e1a

. label var e1a "close friends"

. rename e1brelatives e1b

. label var e1b "relatives of you"

. rename e1cfight e1c

. label var e1c "argument / fight in the past with"

. 
. rename e2ahead e2a

. label var e2a " How is your relationship to the TL"

. #delimit;
delimiter now ;
. label define e2
> 1 "close friend of mine"
> 2 "relative of mine"
> 3 "neither friend nor relative of mine";

. #delimit cr
delimiter now cr
. label values e2a e2

. 
. rename e2bchair e2b

. label var e2b "How is your relationship the the DEL"

. label values e2b e2

. ***MODULE E DONE***
. 
. 
. 
. **************************************
. *** Procedural-Fairness: Game 1 ***
. **************************************
. rename expectation_vi expec_game1

. label var expec_game1 "Villagers expectation if leader allows for a vote"

. 
. label var vote_1 "Benefit to leader at the expense of villagers" /* A=(100,10,10,10,10,10,10)   vs.     B=(40,20,20,20,20,20,20) */

. label var vote_2 "Benefit to leader at no cost to villagers" /* A=(60,20,20,20,20,20,20)        vs.     B=(40,20,20,20,20,20,20)*/

. label var vote_3 "Unequal villagers" /* A=(40,5,23,23,23,23,23) vs.     B=(40,20,20,20,20,20,20)*/

. label var vote_4 "Spiteful Leader" /* A=(40,15,15,15,15,15,15)  vs.     B=(40,20,20,20,20,20,20)*/

. 
. label var majority_1 "Majority-decision of group independent of implemented rule by leader"

. label var majority_2 "Majority-decision of group independent of implemented rule by leader"

. label var majority_3 "Majority-decision of group independent of implemented rule by leader"

. label var majority_4 "Majority-decision of group independent of implemented rule by leader"

. 
. foreach var of varlist vote_*{
  2. replace `var'="1" if `var'=="a"
  3. replace `var'="2" if `var'=="b"
  4. destring `var', replace
  5. label values `var' decision
  6. }
(124 real changes made)
(260 real changes made)
vote_1: all characters numeric; replaced as byte
(142 real changes made)
(242 real changes made)
vote_2: all characters numeric; replaced as byte
(238 real changes made)
(146 real changes made)
vote_3: all characters numeric; replaced as byte
(130 real changes made)
(254 real changes made)
vote_4: all characters numeric; replaced as byte

. 
. **************************************
. *** Social type, Preference-Game 2 ***
. **************************************
. 
. label variable decision1 "Envy trade-off 5,5 vs 5,0" /* A=[5,5] B=[5,0] -> first number player himself, second number is rdm player from participants*/

. label variable decision2 "Prosocial trade-off 5,5 vs 5,10" /* A=[5,5] B=[5,10] */

. label variable decision3 "Selfish trade-off 5,5 vs 10,0" /* A=[5,5] B=[10,0] */

. label define decision 1"Chose A" 2"Chose B"

. 
. foreach var of varlist decision*{
  2. replace `var'="1" if `var'=="a"
  3. replace `var'="2" if `var'=="b"
  4. destring `var', replace
  5. label values `var' decision
  6. }
(313 real changes made)
(71 real changes made)
decision1: all characters numeric; replaced as byte
(287 real changes made)
(97 real changes made)
decision2: all characters numeric; replaced as byte
(277 real changes made)
(107 real changes made)
decision3: all characters numeric; replaced as byte

. 
. **************************************
. *** Nepotism(TG-TTP)-Game 3 ***
. **************************************
. rename Role positionTG

. label var positionTG "Indicates whether participant is Player A or B in Trust Game"

. 
. gen pair="."

. label var pair "indicates in which pair the player is"

. replace pair="RN_TL" if Pair=="FV_TL"
variable pair was str1 now str5
(64 real changes made)

. replace pair="NR_TL" if Pair=="VF_TL"
(64 real changes made)

. replace pair="NN_TL" if Pair=="VV_TL"
(64 real changes made)

. replace pair="RN_DEL" if Pair=="FV_DL"
variable pair was str5 now str6
(64 real changes made)

. replace pair="NR_DEL" if Pair=="VF_DL"
(64 real changes made)

. replace pair="NN_DEL" if Pair=="VV_DL"
(64 real changes made)

. 
. rename Trust decision_A

. label var decision_A "Dummy for decision of Player A, 1==coop 0==defection"

. 
. rename Trustwort decision_B

. label var decision_B "Dummy for decision of Player B, 1==coop 0==defection"

. 
. rename expectation_pl expec_B

. label var expec_B "Expectation of Player B whether leader will punish him"

. 
. 
. 
. save "$working_ANALYSIS\processed\villager_clean.dta", replace
file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\processed\villager_clean.dta saved

. 
. 
. 
. 
. 
. *----------------------------
. * 3) Append both datasets
. *----------------------------
. append using "$working_ANALYSIS\processed\leader_clean.dta"
(note: variable d3c was byte, now int to accommodate using data's values)
(label decision already defined)
(label d7a already defined)
(label d6 already defined)
(label d4 already defined)
(label is already defined)
(label village already defined)

. 
. 
. duplicates report id /*ok, 448*/

Duplicates in terms of id

--------------------------------------
   copies | observations       surplus
----------+---------------------------
        1 |          448             0
--------------------------------------

. sort id

. replace name=Name if name==""
(64 real changes made)

. drop Name

. label variable session_id "Player ID of villager in games"

. order id name village

. 
. 
. foreach var of varlist  pos_pairRN pos_pairNR pos_pairNN{
  2. label var `var' "Order of pair in nepotism game"
  3. }

. 
. drop BX /* Consistent with "village", do not need it anymore*/

. drop testCC

. drop Pair

. 
. *** Leader session_id ***
. replace session_id=13 if TL==1
(32 real changes made)

. replace session_id=14 if DEL==1
(32 real changes made)

. 
. *** variable to identify all 3 groups
. gen villager = 0

. replace villager = 1 if session_id<13
(384 real changes made)

. gen id1=0

. replace id1=1 if TL==1
(32 real changes made)

. replace id1=2 if villager==1
(384 real changes made)

. label define setup 0 "DEL" 1 "Chiefs" 2 "Villagers"

. label values id1 setup

. 
. save "$working_ANALYSIS\processed\data_clean.dta", replace
file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\processed\data_clean.dta saved

. 
. 
. 
. 
. ** EOF
. 
end of do-file

. do "$working_ANALYSIS/scripts/02_generate.do"

. *--------------------------------------------------------------------------------------
. * SCRIPT: 02_generate.do
. * PURPOSE: generates additional variables used in the analysis
. *--------------------------------------------------------------------------------------
. 
. 
. 
. clear

. use "$working_ANALYSIS\processed\data_clean.dta"

. 
. // GAME 1: PROCEDURAL FAIRNESS
. 
. rename rule_1 rule1

. rename rule_2 rule2

. rename rule_3 rule3

. rename rule_4 rule4

. rename rule_bonus_1 rule5

. rename rule_bonus_2 rule6

. 
. rename vote_1 vote1

. rename vote_2 vote2

. rename vote_3 vote3

. rename vote_4 vote4

. rename vote_bonus_1 vote5

. rename vote_bonus2 vote6

. 
. rename majority_1 majority1

. rename majority_2 majority2

. rename majority_3 majority3

. rename majority_4 majority4

. rename majority_bonus1 majority5

. rename majority_bonus2 majority6

. 
. 
. // Create dummies for democratic and autocratic choices
. *democratic
. gen dem1=0

. replace dem1=1 if rule1==1
(41 real changes made)

. gen dem2=0

. replace dem2=1 if rule2==1
(39 real changes made)

. gen dem3=0

. replace dem3=1 if rule3==1
(44 real changes made)

. gen dem4=0

. replace dem4=1 if rule4==1
(37 real changes made)

. gen dem5=0

. replace dem4=1 if rule5==1
(10 real changes made)

. gen dem6=0

. replace dem4=1 if rule6==1
(5 real changes made)

. egen dem7 = rowmean(dem1 dem2 dem3 dem4)

. 
. *dictator
. gen dic1=0

. replace dic1=1 if rule1==2
(9 real changes made)

. gen dic2=0

. replace dic2=1 if rule2==2
(12 real changes made)

. gen dic3=0

. replace dic3=1 if rule3==2
(7 real changes made)

. gen dic4=0

. replace dic4=1 if rule4==2
(7 real changes made)

. gen dic5=0

. replace dic5=1 if rule5==2
(3 real changes made)

. gen dic6=0

. replace dic6=1 if rule6==2
(2 real changes made)

. 
. *pseudo-democratic
. gen fake1=0

. replace fake1=1 if rule1==3
(14 real changes made)

. gen fake2=0

. replace fake2=1 if rule2==3
(13 real changes made)

. gen fake3=0

. replace fake3=1 if rule3==3
(13 real changes made)

. gen fake4=0

. replace fake4=1 if rule4==3
(20 real changes made)

. gen fake5=0

. replace fake5=1 if rule5==3
(20 real changes made)

. gen fake6=0

. replace fake6=1 if rule6==3
(21 real changes made)

. 
. replace rule1=1 if dem1==1
(0 real changes made)

. replace rule1=2 if fake1==1
(14 real changes made)

. replace rule1=3 if dic1==1
(9 real changes made)

. replace rule2=1 if dem2==1
(0 real changes made)

. replace rule2=2 if fake2==1
(13 real changes made)

. replace rule2=3 if dic2==1
(12 real changes made)

. replace rule3=1 if dem3==1
(0 real changes made)

. replace rule3=2 if fake4==1
(17 real changes made)

. replace rule3=3 if dic4==1
(4 real changes made)

. replace rule4=1 if dem4==1
(15 real changes made)

. replace rule4=2 if fake4==1
(20 real changes made)

. replace rule4=3 if dic4==1
(7 real changes made)

. replace rule5=1 if dem5==1
(0 real changes made)

. replace rule5=2 if fake5==1
(20 real changes made)

. replace rule5=3 if dic5==1
(3 real changes made)

. replace rule6=1 if dem6==1
(0 real changes made)

. replace rule6=2 if fake6==1
(21 real changes made)

. replace rule6=3 if dic6==1
(2 real changes made)

. 
. *subsample autocratic rule choices
. gen pseudo1=0

. replace pseudo1=1 if rule1==3
(9 real changes made)

. replace pseudo1=. if rule1==1
(41 real changes made, 41 to missing)

. gen pseudo2=0

. replace pseudo2=1 if rule2==3
(12 real changes made)

. replace pseudo2=. if rule2==1
(39 real changes made, 39 to missing)

. gen pseudo3=0

. replace pseudo3=1 if rule3==3
(11 real changes made)

. replace pseudo3=. if rule3==1
(31 real changes made, 31 to missing)

. gen pseudo4=0

. replace pseudo4=1 if rule4==3
(7 real changes made)

. replace pseudo4=. if rule4==1
(37 real changes made, 37 to missing)

. egen pseudo_all = rowmean(pseudo1 pseudo2 pseudo3 pseudo4)
(25 missing values generated)

. 
. *same rule across all three rounds
. gen stable_rule=0

. replace stable_rule=1 if rule1==rule5==rule6
(30 real changes made)

. 
. *game1_group
. *devide each village into two groups of game 1: TL or DEL (13=TL, 14=DEL)?
. gen game1_group = 13

. replace game1_group =14 if session_id==1 | session_id==2 | session_id==5 | session_id==6 | session_id==9 | session_id==10 | session_id==14
(224 real changes made)

. order game1_group, before(vote1)

. 
. *villager_preference1
. *now the villager preferences, i.e. majority without leader (6 villager per group, a draw is therefore possible)
. * villager_preference1 ("A", "B" or "draw") gives the preferences of the six villager (without leader) in the first decision of game 1
. egen count_A = total(vote1==1) if id>64, by(village game1_group)
(64 missing values generated)

. order count_A, after(vote1)

. 
. replace count_A = count_A[_n-1] if session_id==13
(0 real changes made)

. replace count_A = count_A[_n-4] if session_id==14
(0 real changes made)

. 
. gen villager_preference1="A"

. replace villager_preference1 = "B" if count_A<3
(276 real changes made)

. replace villager_preference1 = "draw" if count_A==3
variable villager_preference1 was str1 now str4
(72 real changes made)

. order villager_preference1, after(vote1)

. label variable villager_preference "majority vote of 6 villagers over distribution A and B"

. 
. 
. drop count_A

. 
. *Bonus order
. gen bonus_order=. if id >64
(448 missing values generated)

. replace bonus_order=1 if  randomization<7
(38 real changes made)

. replace bonus_order=0 if  randomization>6 
(410 real changes made)

. label def bonus_order 1 "Small first" 0 "Large first", replace

. lab val bonus_order bonus_order

. 
. *Identifier for first bonus that was offered to leaders
. gen rule_bonus_first = rule5 if bonus_order==1
(414 missing values generated)

. replace rule_bonus_first = rule6 if bonus_order==0
(30 real changes made)

. gen rule_bonus_second = rule5 if bonus_order==0
(418 missing values generated)

. replace rule_bonus_second = rule6 if bonus_order==1
(34 real changes made)

. 
. *New variable to identify baseline rule choices
. gen rule_base=rule1
(384 missing values generated)

. lab def rulebasic 1 "Base: Democratic" 2 "Base: Pseudo" 3 "Base: Autocratic", replace

. lab val rule_base rulebasic

. bysort village game1_group: egen group_rule_base = mean(rule_base)

. lab val group_rule_base rulebasic

. tab group_rule_base, gen(rule_base)

 group_rule_base |      Freq.     Percent        Cum.
-----------------+-----------------------------------
Base: Democratic |        287       64.06       64.06
    Base: Pseudo |         98       21.88       85.94
Base: Autocratic |         63       14.06      100.00
-----------------+-----------------------------------
           Total |        448      100.00

. 
. * label rule choices consistently
. lab def rule 1 "Democratic" 2 "Pseudo-democratic" 3 "Autocratic" , replace

. foreach x of varlist rule1 rule5 rule6 rule_bonus_first rule_bonus_second {
  2.         lab val `x' rule
  3.         }

. 
. *payoff1, payoff5, payoff6
. *what do these villagers get?
. *Basic
. gen payoff1 = 0 if id<65
(384 missing values generated)

. replace payoff1 = 1 if (id<65) & ((rule1==1 & majority1=="B") | (rule1!=1 & vote1==2))
(41 real changes made)

. label variable payoff1 "distribution A or B that is paid to the group in decision 1"

. 
. *Small Bonus
. gen payoff5 = 0 if id<65
(384 missing values generated)

. replace payoff5 = 1 if (id<65) & ((rule5==1 & majority5=="B") | (rule5!=1 & vote5==2))
(40 real changes made)

. label variable payoff5 "distribution A or B that is paid to the group in small bonus"

. 
. *Large Bonus
. gen payoff6 = 0 if id<65
(384 missing values generated)

. replace payoff6 = 1 if (id<65) & ((rule6==1 & majority6=="B") | (rule6!=1 & vote6==2))
(42 real changes made)

. label variable payoff6 "distribution A or B that is paid to the group in large bonus"

. 
. lab def payoff_lab 0 "A" 1 "B"

. foreach var of varlist payoff1 payoff5 payoff6 {
  2.         lab val `var' payoff_lab
  3.         }

.         
. order payoff1 payoff5 payoff6, after(villager_preference1)

. gsort village game1_group -session_id

. 
. by village game1_group: replace payoff1 = payoff1[_n-1] if missing(payoff1)
(384 real changes made)

. by village game1_group: replace payoff5 = payoff5[_n-1] if missing(payoff5)
(384 real changes made)

. by village game1_group: replace payoff6 = payoff6[_n-1] if missing(payoff6)
(384 real changes made)

. 
. sort village session_id

. 
. 
. 
. // Leadertypes based on baseline stage 1 & stage 2 decisions
. gen true_democrat=0

. replace true_democrat=1 if rule1==1 
(41 real changes made)

. gen pseudo_democrat=0

. replace pseudo_democrat=1 if rule1==2 & vote1==1
(9 real changes made)

. gen paternalistic=0

. replace paternalistic=1 if rule1==2 & vote1==2
(5 real changes made)

. gen dictator=0

. replace dictator=1 if rule1==3 & vote1==1
(6 real changes made)

. gen benevolent_dictator=0

. replace benevolent_dictator=1 if rule1==3 & vote1==2
(3 real changes made)

. 
. gen leader_type=1 if true_democrat==1
(407 missing values generated)

. replace leader_type=2 if pseudo_democrat==1
(9 real changes made)

. replace leader_type=3 if paternalistic==1
(5 real changes made)

. replace leader_type=4 if dictator==1
(6 real changes made)

. replace leader_type=5 if benevolent_dictator==1
(3 real changes made)

. lab def lab_types 1 "True-democrat" 2 "Pseudo-democrat" 3 "Paternalist" 4 "Autocrat" 5 "Benevolent-Autocrat"

. lab val leader_type lab_types

. 
. 
. bysort village game1_group: egen group_leader_type = mean(leader_type)

. lab val group_leader_type lab_types

. 
. lab def vote_lab 1 "Distribution A" 2 "Distribution B"

. lab val vote1 vote_lab

. tab group_leader_type, gen(leader_type)

  group_leader_type |      Freq.     Percent        Cum.
--------------------+-----------------------------------
      True-democrat |        287       64.06       64.06
    Pseudo-democrat |         63       14.06       78.13
        Paternalist |         35        7.81       85.94
           Autocrat |         42        9.38       95.31
Benevolent-Autocrat |         21        4.69      100.00
--------------------+-----------------------------------
              Total |        448      100.00

. 
. 
. 
. ************************************
. *** 1C: Preference game (Game 2)
. 
. gen social_type=6 

. replace social_type = 1 if decision1==1 & decision2==1 & decision3==1
(228 real changes made)

. replace social_type = 2 if decision1==1 & decision2==1 & decision3==2
(51 real changes made)

. replace social_type = 3 if decision1==1 & decision2==2 & decision3==1
(61 real changes made)

. replace social_type = 4 if decision1==1 & decision2==2 & decision3==2
(32 real changes made)

. replace social_type = 5 if decision1==2 & decision2==1 & decision3==2
(24 real changes made)

. 
. gen social_type2 =.
(448 missing values generated)

. replace social_type2=1 if (social_type==1 | social_type==2)
(279 real changes made)

. replace social_type2=2 if (social_type==3 | social_type==4)
(93 real changes made)

. replace social_type2=3 if social_type==5
(24 real changes made)

. replace social_type2=4 if social_type2==. & social_type==6
(52 real changes made)

. 
. # delimit;
delimiter now ;
. label define social
> 1       "Strongly egalitarian"
> 2       "Weakly egalitarian"
> 3   "Strongly generous"
> 4       "Weakly generous"
> 5       "Spiteful"
> 6       "Ambiguous";

. label define social2
> 1       "Egalitarian"
> 2       "Generous"
> 3   "Spiteful"
> 4       "Ambiguous";

. # delimit cr
delimiter now cr
. label values  social_type social

. label values  social_type2 social2

. 
. 
. 
. // Gen dummy for no education
. gen no_educ = 0 if education>0 & education!=.
(44 missing values generated)

. replace no_educ =1 if education==0
(41 real changes made)

. 
. // age-squared
. gen age_sq = age*age
(1 missing value generated)

. 
. // intrinsic motivation - binary variable:
. * Based on the definition of Frey & Oberholzer (1997) ->
. * intrinsic(=1): one likes to do them or because the individual derives some satisfaction from doing  his or her duty
. *extrinsic(=0): activated from the outside
. * if there are both intrinsic and extrinsic motives mentioned, the variable takes the value 1 - there can be some intrinsic motives crowded out by the 
> bonus paymen 
. 
. gen motivation=.
(448 missing values generated)

. replace motivation=0 if f6=="accepted because people but trust in her"
(1 real change made)

. replace motivation=0 if f6=="just accepted what the villagers voted."
(1 real change made)

. replace motivation=1 if f6=="to help the community mantain water"
(1 real change made)

. replace motivation=1 if f6=="because I believe that I was born with characteristic of a leader."
(1 real change made)

. replace motivation=0 if f6=="i just accepted because the villagers appointed me"
(1 real change made)

. replace motivation=1 if f6=="to lead the community. A calling from god. Care for the community"
(1 real change made)

. replace motivation=1 if f6=="to train the committee members to be in goood communication / relationship with tap users"
(1 real change made)

. replace motivation=1 if f6=="accepted the task attributed to him and help his community"
(1 real change made)

. replace motivation=0 if f6=="just accepted the vote"
(2 real changes made)

. replace motivation=1 if f6=="Assist and meet the needs of the villagers"
(1 real change made)

. replace motivation=1 if f6=="to care and protect the use of water"
(1 real change made)

. replace motivation=0 if f6=="he was chosen and just accepted"
(1 real change made)

. replace motivation=0 if f6=="accepted responsibility"
(1 real change made)

. replace motivation=1 if f6=="to lead the community"
(2 real changes made)

. replace motivation=1 if f6=="volunteer to help bring water to the village, help the community"
(1 real change made)

. replace motivation=1 if f6=="to lead the community"
(0 real changes made)

. replace motivation=1 if f6=="help his community"
(1 real change made)

. replace motivation=0 if f6=="was obliged, to lead the village, to bring development to the village"
(1 real change made)

. replace motivation=1 if f6=="guarantee availability of water"
(1 real change made)

. replace motivation=0 if f6=="Accepted because it is a calling by God. Did not want to disappoint the father and villagers."
(1 real change made)

. replace motivation=1 if f6=="to help the community, to keep or take care of the water pipes"
(1 real change made)

. replace motivation=1 if f6=="to fight for the good of the community. To bring it up to standard."
(1 real change made)

. replace motivation=0 if f6=="because there was a lack of people to be in the committee"
(1 real change made)

. replace motivation=0 if f6=="accepted because there was no on else to care and protect the community and it's members"
(1 real change made)

. replace motivation=1 if f6=="arrange meetings, have better / good communication with village, report to senior headman"
(1 real change made)

. replace motivation=0 if f6=="I just accepted the position, because the villagers wanted me to lead them."
(1 real change made)

. replace motivation=1 if f6=="to take care of the water tap"
(1 real change made)

. replace motivation=1 if f6=="lead the community. Care for the community"
(1 real change made)

. replace motivation=1 if f6=="keep water in the community"
(1 real change made)

. replace motivation=0 if f6=="There was no election. Just accepted to be the headman as my father appointed me."
(1 real change made)

. replace motivation=1 if f6=="to lead the community, to take of the water tap"
(1 real change made)

. replace motivation=0 if f6=="just accepted a responsibility given by elders and villagers."
(1 real change made)

. replace motivation=1 if f6=="serving the community, take care of water related needs"
(1 real change made)

. replace motivation=1 if f6=="to lead the community as given by god."
(1 real change made)

. replace motivation=1 if f6=="care and protect the tap, sustain water"
(1 real change made)

. replace motivation=0 if f6=="Just accepted because my late father appointed me and also the villagers trusted/trust me to lead them"
(1 real change made)

. replace motivation=0 if f6=="was appointed to be one of the candidates, just accepted the result of the vote"
(1 real change made)

. replace motivation=0 if f6=="just accepted because people trusted me."
(1 real change made)

. replace motivation=1 if f6=="was given a responsibility and accepted, wanted to help bring private taps to village"
(1 real change made)

. replace motivation=0 if f6=="took over family duties. Was not willing to give the village away to a stranger or another family."
(1 real change made)

. replace motivation=1 if f6=="to keep taps in good condition, to arrange meetings, wotk with community members"
(1 real change made)

. replace motivation=0 if f6=="just accepted the responsibility, because the villagers accepted me as their headman."
(1 real change made)

. replace motivation=0 if f6=="just accepted, because the community voted him"
(1 real change made)

. replace motivation=1 if f6=="to lead the nation. To care for community members. Help provide for community members."
(1 real change made)

. replace motivation=0 if f6=="Accepted villagers decision"
(1 real change made)

. replace motivation=0 if f6=="I just accepted as a calling from God."
(1 real change made)

. replace motivation=1 if f6=="to help develop the village"
(1 real change made)

. replace motivation=0 if f6=="just accepted to lead the villagers, because they appointed/elected me."
(1 real change made)

. replace motivation=1 if f6=="to assist the community, accepted a responsibility given to him by the villagers, help develop the community"
(1 real change made)

. replace motivation=0 if f6=="i just accepted"
(1 real change made)

. replace motivation=1 if f6=="to help develop the village, improve water supply"
(1 real change made)

. replace motivation=0 if f6=="There was no motive, just accepted."
(1 real change made)

. replace motivation=0 if f6=="just accepted the vote"
(0 real changes made)

. replace motivation=1 if f6=="to lead the community. To help develop the community. To help improve people's/community member's lives."
(1 real change made)

. replace motivation=1 if f6=="help out the villagers without expectations"
(1 real change made)

. replace motivation=0 if f6=="" /*leader gave no answer - we set his intrinsic-motivation to 0*/
(385 real changes made)

. replace motivation=0 if f6=="just accepted votes & didnt volunteer to be a candidate"
(1 real change made)

. replace motivation=1 if f6=="A God given gift/role. Did not want to disappoint community members. Lead the community."
(1 real change made)

. replace motivation=0 if f6=="just accepted, because the people voted me"
(1 real change made)

. replace motivation=1 if f6=="God given responsibility as well as responsibility from family and community members. Lead and care for the community."
(1 real change made)

. replace motivation=1 if f6=="to care for taps and the community"
(1 real change made)

. replace motivation=0 if f6=="I just accepted the responsibility"
(1 real change made)

. replace motivation=1 if f6=="wanted to bring taps to the village, especially for drinking water purposes, used to drink from wells"
(1 real change made)

. replace motivation=1 if f6=="assist every community member"
(1 real change made)

. replace motivation=. if id>64
(384 real changes made, 384 to missing)

. lab def motivation 0 "extrinsic" 1 "intrinsic", replace

. lab val motivation motivation

. gen extrinsic_leader = 1 if motivation==0
(419 missing values generated)

. replace extrinsic_leader = 0 if motivation==1
(35 real changes made)

. lab def extrensic 0 "Intrinsic" 1 "Extrinsic", replace

. lab val extrinsic_leader extrensic

. bysort village game1_group: egen group_extrinsic_leader = mean(extrinsic_leader)

. 
. 
. // PERCEPTION OF LEADERS PERFORMANCE BY VILLAGERS
. lab def agree1 1 "strongly disagree" 2 "disagree a little" 3 "neutral" 4 "agree a little" 5 "strongly agree"

. 
. * synchronize scales
. foreach v of varlist b12satisfactionTL b10b {
  2.         replace `v'=5 if `v'==.
  3.         local i = `i' + 1
  4.         gen e_`i'=1 if `v'==4
  5.         replace e_`i'=2 if `v'==3
  6.         replace e_`i'=3 if `v'==5
  7.         replace e_`i'=4 if `v'==2
  8.         replace e_`i'=5 if `v'==1
  9.         replace e_`i'=. if villager==0
 10.         lab val e_`i' agree1
 11.         }
(69 real changes made)
(446 missing values generated)
(1 real change made)
(73 real changes made)
(35 real changes made)
(337 real changes made)
(64 real changes made, 64 to missing)
(69 real changes made)
(444 missing values generated)
(5 real changes made)
(99 real changes made)
(41 real changes made)
(299 real changes made)
(64 real changes made, 64 to missing)

. 
. foreach v of varlist b11g b8b b11f b8c b11h b8d {
  2.         replace `v'=5 if `v'==.
  3.         local i = `i' + 1
  4.         gen e_`i'=1 if `v'==1
  5.         replace e_`i'=2 if `v'==2
  6.         replace e_`i'=3 if `v'==5
  7.         replace e_`i'=4 if `v'==3
  8.         replace e_`i'=5 if `v'==4
  9.         replace e_`i'=. if villager==0
 10.         lab val e_`i' agree1
 11.         }
(91 real changes made)
(424 missing values generated)
(8 real changes made)
(91 real changes made)
(19 real changes made)
(306 real changes made)
(64 real changes made, 64 to missing)
(131 real changes made)
(426 missing values generated)
(13 real changes made)
(131 real changes made)
(30 real changes made)
(252 real changes made)
(64 real changes made, 64 to missing)
(98 real changes made)
(431 missing values generated)
(6 real changes made)
(98 real changes made)
(25 real changes made)
(302 real changes made)
(64 real changes made, 64 to missing)
(208 real changes made)
(391 missing values generated)
(11 real changes made)
(208 real changes made)
(24 real changes made)
(148 real changes made)
(64 real changes made, 64 to missing)
(152 real changes made)
(193 missing values generated)
(10 real changes made)
(152 real changes made)
(6 real changes made)
(25 real changes made)
(64 real changes made, 64 to missing)
(185 real changes made)
(232 missing values generated)
(8 real changes made)
(185 real changes made)
(8 real changes made)
(31 real changes made)
(64 real changes made, 64 to missing)

. 
. *TL specific satisfaction items
. foreach v of varlist b11b b11c b11d b11e b11f b11g b11h {
  2.         replace `v'=5 if `v'==.
  3.         local j = `j' + 1
  4.         gen opinionTL_`j'=1 if `v'==1
  5.         replace opinionTL_`j'=2 if `v'==2
  6.         replace opinionTL_`j'=3 if `v'==5
  7.         replace opinionTL_`j'=4 if `v'==3
  8.         replace opinionTL_`j'=5 if `v'==4
  9.         replace opinionTL_`j'=. if villager==0
 10.         lab val opinionTL_`j' agree1
 11.         }
(207 real changes made)
(245 missing values generated)
(5 real changes made)
(207 real changes made)
(9 real changes made)
(24 real changes made)
(64 real changes made, 64 to missing)
(116 real changes made)
(418 missing values generated)
(8 real changes made)
(116 real changes made)
(25 real changes made)
(269 real changes made)
(64 real changes made, 64 to missing)
(84 real changes made)
(433 missing values generated)
(6 real changes made)
(84 real changes made)
(23 real changes made)
(320 real changes made)
(64 real changes made, 64 to missing)
(126 real changes made)
(421 missing values generated)
(7 real changes made)
(126 real changes made)
(19 real changes made)
(269 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(431 missing values generated)
(6 real changes made)
(98 real changes made)
(25 real changes made)
(302 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(424 missing values generated)
(8 real changes made)
(91 real changes made)
(19 real changes made)
(306 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(193 missing values generated)
(10 real changes made)
(152 real changes made)
(6 real changes made)
(25 real changes made)
(64 real changes made, 64 to missing)

. *scale all items so that higher agreement indicates higher satisfaction
. gen opinionTL_1reverse = 6-opinionTL_1
(64 missing values generated)

. gen opinionTL_7reverse = 6-opinionTL_7
(64 missing values generated)

. 
. alpha e_1 opinionTL_1reverse opinionTL_2 opinionTL_3 opinionTL_4 opinionTL_5 opinionTL_6 opinionTL_7reverse 

Test scale = mean(unstandardized items)

Average interitem covariance:     .3230128
Number of items in the scale:            8
Scale reliability coefficient:      0.7473

. * alpha=0.75 pretty reliable scale, can reduce dimensionality
. *start with simple additative index, 
. egen mean_satisfactionTL = rowmean (e_1 opinionTL_1reverse opinionTL_2 opinionTL_3 opinionTL_4 opinionTL_5 opinionTL_6 opinionTL_7)
(64 missing values generated)

. 
. *DEL specific satisfaction  items
. foreach v of varlist b8a b8b b8c b8d {
  2.         replace `v'=5 if `v'==.
  3.         local k = `k' + 1
  4.         gen opinionDEL_`k'=1 if `v'==1
  5.         replace opinionDEL_`k'=2 if `v'==2
  6.         replace opinionDEL_`k'=3 if `v'==5
  7.         replace opinionDEL_`k'=4 if `v'==3
  8.         replace opinionDEL_`k'=5 if `v'==4
  9.         replace opinionDEL_`k'=. if villager==0
 10.         lab val opinionDEL_`k' agree1
 11.         }
(208 real changes made)
(401 missing values generated)
(16 real changes made)
(208 real changes made)
(36 real changes made)
(141 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(426 missing values generated)
(13 real changes made)
(131 real changes made)
(30 real changes made)
(252 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(391 missing values generated)
(11 real changes made)
(208 real changes made)
(24 real changes made)
(148 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(232 missing values generated)
(8 real changes made)
(185 real changes made)
(8 real changes made)
(31 real changes made)
(64 real changes made, 64 to missing)

. *scale all items so that higher agreement indicates higher satisfaction
. gen opinionTL_4reverse = 6-opinionTL_4
(64 missing values generated)

. 
. alpha e_2 opinionDEL_1 opinionDEL_2 opinionDEL_3 opinionTL_4reverse

Test scale = mean(unstandardized items)
Reversed item:  opinionTL_4reverse

Average interitem covariance:     .2561201
Number of items in the scale:            5
Scale reliability coefficient:      0.5149

. * alpha=0.52 less reliable
. *start with simple additative index, 
. egen mean_satisfactionDEL = rowmean (e_2 opinionDEL_1 opinionDEL_2 opinionDEL_3 opinionTL_4reverse)
(64 missing values generated)

. 
. 
. *generate satisfaction dependent on which leaders villagers were matched with in game 1
. gen satisfaction_TL = mean_satisfactionTL
(64 missing values generated)

. replace satisfaction_TL = . if game1_group!=13
(192 real changes made, 192 to missing)

. gen satisfaction_DEL = mean_satisfactionDEL
(64 missing values generated)

. replace satisfaction_DEL = . if game1_group!=14
(192 real changes made, 192 to missing)

. egen satisfaction_leader = rowmean (satisfaction_TL satisfaction_DEL)
(64 missing values generated)

. lab val satisfaction_leader agree1

. lab var satisfaction_leader "Leader satisfaction index (decision-making, exploitation, etc.)"

. egen z_satisfaction = std(satisfaction_leader)
(64 missing values generated)

. 
. *Satisfaction with performance of DEL / TL
. gen performance_TL = e_1
(64 missing values generated)

. replace performance_TL = . if game1_group!=13
(192 real changes made, 192 to missing)

. gen performance_DEL = e_2
(64 missing values generated)

. replace performance_DEL = . if game1_group!=14
(192 real changes made, 192 to missing)

. egen performance_leader = rowmean (performance_TL performance_DEL)
(64 missing values generated)

. lab val performance_leader agree1

. lab var performance_leader "How satisfied are you with the peformance of the TL/DEL?"

. 
. *label variables
. label var e_1 "Satisfied with the chief in general?"

. label var e_2 "Satisfied with the DEL in general?"

. label var e_3 "The Chief makes decisions in an understandable manner?"

. label var e_4 "The DEL makes decisions in an understandable manner?"

. label var e_5 "The Chief takes appropriate actions against people who disobey the rules?"

. label var e_6 "The DEL takes appropriate actions against people who disobey the rules?"

. label var e_7 "Does the chief exploit his or her position?"

. label var e_8 "Does the DEL exploit his or her position?"

. 
. *Combined Index of leader quality
. gen reverse_e7 = 6-e_7
(64 missing values generated)

. alpha e_1 e_3 e_5 reverse_e7

Test scale = mean(unstandardized items)

Average interitem covariance:     .2492895
Number of items in the scale:            4
Scale reliability coefficient:      0.5633

. 
. 
. ***************************
. **** BIG FIVE
. /*
> Rammstedt, B. & John, O. P. (2007). Measuring personality in one minute or less: A 10-item short version of the Big Five Inventory in English and Germa
> n. 
> Journal of Research in Personality, 41, 203-212. 
> 
> De Young et al. 2010 Psych. Science: Neuroticism covaried with volume of brain regions associated with threat, punishment, and negative affect. 
> http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3049165/
> 
> 
> Positively formualed items: c29, c25, c28, c32, c34
> Negatively formulated items: c26, c27, c30, c31, c33
> */
. 
. *** 1. Step, gen new variables
. foreach var of varlist c25-c34{
  2. replace `var'=. if `var'==5
  3. gen `var'new = `var'
  4. }
(0 real changes made)
(389 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)

. 
. *** 2. Step, recode negatively formulated items ***
. foreach var of varlist c26new c27new c30new c31new c33new{
  2. recode `var' (1=4) (2=3) (3=2) (4=1)
  3. }
(c26new: 64 changes made)
(c27new: 64 changes made)
(c30new: 64 changes made)
(c31new: 64 changes made)
(c33new: 64 changes made)

. quietly tab c26 c26new

. quietly tab c27 c27new

. sum c25-c34     /* we have missings for c25, otherwise complete info*/

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         c25 |         59    2.559322     1.47708          1          4
         c26 |         64    2.328125     1.43709          1          4
         c27 |         64    2.421875    1.499256          1          4
         c28 |         64     2.59375     1.46622          1          4
         c29 |         64     2.65625     1.48237          1          4
-------------+---------------------------------------------------------
         c30 |         64     2.90625    1.317992          1          4
         c31 |         64    2.671875    1.369216          1          4
         c32 |         64      2.6875    1.467911          1          4
         c33 |         64     2.90625    1.399759          1          4
         c34 |         64    2.640625    1.505199          1          4

. 
. *** 3. Step: Build variables ***
. /* Higher values mean more agreeable, extraverted etc. */  
. gen extraversion=(c29new+c26new)/2 if leader!=. 
(384 missing values generated)

. gen agreeableness=(c25new+c31new)/2 if leader!=. & c25!=.
(389 missing values generated)

. replace agreeableness=c31new if leader!=. & c25==.
(5 real changes made)

. gen conscientiousness=(c32new+c27new)/2 if leader!=.
(384 missing values generated)

. gen neuroticism=(c33new+c28new)/2 if leader!=.
(384 missing values generated)

. gen openness=(c34new+c30new)/2 if leader!=.
(384 missing values generated)

. 
. *** 4. Step: test for scale reliability (Cronbach's alpha)
. alpha c29new c26new             /*extraversion: 0.86*/

Test scale = mean(unstandardized items)

Average interitem covariance:     1.615575
Number of items in the scale:            2
Scale reliability coefficient:      0.8624

. alpha c25new c31new, item       /*agreeableness: 0.81*/

Test scale = mean(unstandardized items)

Average interitem covariance:     1.384278
Number of items in the scale:            2
Scale reliability coefficient:      0.8128

. alpha c32new c27new     /*Conscientiousness: 0.92 */

Test scale = mean(unstandardized items)

Average interitem covariance:     1.866071
Number of items in the scale:            2
Scale reliability coefficient:      0.9176

. alpha c33new c28new     /*neuroticism: 0.76 */

Test scale = mean(unstandardized items)

Average interitem covariance:      1.24504
Number of items in the scale:            2
Scale reliability coefficient:      0.7547

. alpha c34new c30new     /*openness: 0.49*/

Test scale = mean(unstandardized items)

Average interitem covariance:     .6532738
Number of items in the scale:            2
Scale reliability coefficient:      0.4922

. 
. *** 5. Step: Standardize BIG5 measures
. foreach var of varlist extraversion-openness{
  2. sum `var'
  3. gen `var'_normal = (`var'-r(min))/(r(max)-r(min))
  4. }

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
extraversion |         64    2.664063     1.36874          1          4
(384 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
agreeablen~s |         64    2.492188    1.310798          1          4
(384 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
conscienti~s |         64    2.632813    1.426067          1          4
(384 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 neuroticism |         64     2.34375    1.284446          1          4
(384 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    openness |         64    2.367188    1.152093          1          4
(384 missing values generated)

. sum *_normal 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
extraversi~l |         64    .5546875    .4562468          0          1
agreeablen~l |         64    .4973958    .4369327          0          1
conscienti~l |         64    .5442708    .4753558          0          1
neuroticis~l |         64    .4479167    .4281487          0          1
openness_n~l |         64    .4557292    .3840311          0          1

. 
. foreach var of varlist *_normal{
  2. ttest `var', by(leader)
  3. }

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32    .5729167    .0816145    .4616813    .4064628    .7393705
  Chiefs |      32    .5364583    .0808551    .4573854    .3715533    .7013633
---------+--------------------------------------------------------------------
combined |      64    .5546875    .0570308    .4562468    .4407205    .6686545
---------+--------------------------------------------------------------------
    diff |            .0364583    .1148846               -.1931927    .2661094
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   0.3173
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.6240         Pr(|T| > |t|) = 0.7520          Pr(T > t) = 0.3760

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32     .546875    .0774952    .4383792    .3888225    .7049275
  Chiefs |      32    .4479167    .0772067    .4367473    .2904525    .6053809
---------+--------------------------------------------------------------------
combined |      64    .4973958    .0546166    .4369327    .3882533    .6065384
---------+--------------------------------------------------------------------
    diff |            .0989583     .109391               -.1197112    .3176278
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   0.9046
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.8154         Pr(|T| > |t|) = 0.3692          Pr(T > t) = 0.1846

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32     .578125    .0843302    .4770436    .4061325    .7501175
  Chiefs |      32    .5104167    .0846461    .4788305    .3377799    .6830535
---------+--------------------------------------------------------------------
combined |      64    .5442708    .0594195    .4753558    .4255305    .6630112
---------+--------------------------------------------------------------------
    diff |            .0677083    .1194845               -.1711377    .3065544
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   0.5667
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.7135         Pr(|T| > |t|) = 0.5730          Pr(T > t) = 0.2865

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32     .484375    .0757132    .4282987    .3299569    .6387931
  Chiefs |      32    .4114583    .0763118     .431685    .2558193    .5670974
---------+--------------------------------------------------------------------
combined |      64    .4479167    .0535186    .4281487    .3409683     .554865
---------+--------------------------------------------------------------------
    diff |            .0729167    .1074988               -.1419703    .2878037
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   0.6783
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.7499         Pr(|T| > |t|) = 0.5001          Pr(T > t) = 0.2501

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32     .515625    .0687345    .3888209    .3754401    .6558099
  Chiefs |      32    .3958333      .06641    .3756714    .2603893    .5312773
---------+--------------------------------------------------------------------
combined |      64    .4557292    .0480039    .3840311    .3598011    .5516573
---------+--------------------------------------------------------------------
    diff |            .1197917    .0955757               -.0712614    .3108447
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   1.2534
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.8926         Pr(|T| > |t|) = 0.2148          Pr(T > t) = 0.1074

. /* No sig differences between leader type*/
. 
. label variable extraversion "B5 extraversion, based on c29 and recoded c26new"

. label variable agreeableness "B5 agreeableness, based on c25 and recoded c31new"

. label variable neuroticism "B5 neuroticism, based on c28 and recoded c33new"

. label variable conscientiousness "B5 conscientiousness, based on c32 and recoded c27new"

. label variable openness "B5 openess, based on c34 and recoded c30new"

. 
. drop c25new-c34new

. 
. 
. // Pairwise correlations
. global big5 *_normal

. foreach var of varlist $big5{
  2. pwcorr extra*_normal `var', sig
  3. }

             | extrav~l extrav~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
extraversi~l |   1.0000   1.0000 
             |   0.0000
             |

             | extrav~l agreea~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
agreeablen~l |   0.8877   1.0000 
             |   0.0000
             |

             | extrav~l consci~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
conscienti~l |   0.8933   1.0000 
             |   0.0000
             |

             | extrav~l neurot~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
neuroticis~l |   0.7980   1.0000 
             |   0.0000
             |

             | extrav~l openne~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
openness_n~l |   0.7514   1.0000 
             |   0.0000
             |

. /* THAT is Puzzling: Big 5s are strongly correlated among each other. Including them jointly in regressions will be problematic due to multicollinearit
> y */
. ******************************************
. 
. 
. 
. 
. *********C13-C24***************************
. /*we used authentic leadership self-assessment questionnaire (pdf).
> Literature uses 5-point scale, and than simply takes the sum of all 4 items. Values above 15 mean high AL, values of 15 and below mean low AL.
> In our case this would mean value of >12 is high AL, value of 12 and below is low AL.
> However, we have one missing for c13. This person would hence automatically get a low AL score. 
> We could circumvent this problem by taking the average score. (NOT NOW)
> */
. alpha c13 c16 c19 c22           /*moral perspective: 0.72*/

Test scale = mean(unstandardized items)

Average interitem covariance:     .7498122
Number of items in the scale:            4
Scale reliability coefficient:      0.7168

. alpha c14 c17 c20 c23           /*balanced processing: 0.94*/

Test scale = mean(unstandardized items)

Average interitem covariance:     1.769841
Number of items in the scale:            4
Scale reliability coefficient:      0.9400

. alpha c15 c18 c21 c24           /*relation transparency: 0.89*/

Test scale = mean(unstandardized items)
Reversed item:  c18

Average interitem covariance:     1.439153
Number of items in the scale:            4
Scale reliability coefficient:      0.8881

. global AL c13 c14 c15 c16 c17 c18 c19 c20 c21 c22 c23 c24

. pca $AL

Principal components/correlation                 Number of obs    =         63
                                                 Number of comp.  =          8
                                                 Trace            =         12
    Rotation: (unrotated = principal)            Rho              =     1.0000

    --------------------------------------------------------------------------
       Component |   Eigenvalue   Difference         Proportion   Cumulative
    -------------+------------------------------------------------------------
           Comp1 |       8.5811      7.32232             0.7151       0.7151
           Comp2 |      1.25878      .460893             0.1049       0.8200
           Comp3 |      .797884      .163611             0.0665       0.8865
           Comp4 |      .634273      .265805             0.0529       0.9393
           Comp5 |      .368468      .159598             0.0307       0.9700
           Comp6 |      .208871      .101596             0.0174       0.9874
           Comp7 |      .107275     .0639178             0.0089       0.9964
           Comp8 |     .0433571     .0433571             0.0036       1.0000
           Comp9 |            0            0             0.0000       1.0000
          Comp10 |            0            0             0.0000       1.0000
          Comp11 |            0            0             0.0000       1.0000
          Comp12 |            0            .             0.0000       1.0000
    --------------------------------------------------------------------------

Principal components (eigenvectors) 

    ------------------------------------------------------------------------------------------------------------
        Variable |    Comp1     Comp2     Comp3     Comp4     Comp5     Comp6     Comp7     Comp8 | Unexplained 
    -------------+--------------------------------------------------------------------------------+-------------
             c13 |   0.3208    0.0298   -0.0208   -0.1035    0.0913    0.3360    0.8725   -0.0500 |           0 
             c14 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
             c15 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
             c16 |   0.2263    0.5218    0.3625   -0.0501   -0.0987   -0.7058    0.1851    0.0213 |           0 
             c17 |   0.3314    0.0409    0.1100    0.0062    0.0989    0.0943   -0.2182   -0.9000 |           0 
             c18 |  -0.2049    0.2666    0.4631    0.7441    0.1512    0.3054    0.0343    0.0387 |           0 
             c19 |  -0.0103    0.7180   -0.6419    0.0961   -0.1419    0.1882   -0.0837   -0.0246 |           0 
             c20 |   0.2379   -0.3204   -0.1916    0.5104   -0.7051   -0.1688    0.1142   -0.0697 |           0 
             c21 |   0.2496   -0.1812   -0.4078    0.4026    0.6572   -0.3738    0.0312    0.0621 |           0 
             c22 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
             c23 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
             c24 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
    ------------------------------------------------------------------------------------------------------------

. estat loadings

Principal component loadings (unrotated)
    component normalization: sum of squares(column) = 1

    ----------------------------------------------------------------------------------------------
                 |    Comp1     Comp2     Comp3     Comp4     Comp5     Comp6     Comp7     Comp8 
    -------------+--------------------------------------------------------------------------------
             c13 |    .3208     .0298   -.02084    -.1035    .09128      .336     .8725   -.05001 
             c14 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
             c15 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
             c16 |    .2263     .5218     .3625   -.05012   -.09875    -.7058     .1851    .02134 
             c17 |    .3314    .04087       .11   .006219    .09893     .0943    -.2182       -.9 
             c18 |   -.2049     .2666     .4631     .7441     .1512     .3054    .03432    .03871 
             c19 |  -.01034      .718    -.6419    .09615    -.1419     .1882   -.08369    -.0246 
             c20 |    .2379    -.3204    -.1916     .5104    -.7051    -.1688     .1142   -.06972 
             c21 |    .2496    -.1812    -.4078     .4026     .6572    -.3738     .0312    .06212 
             c22 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
             c23 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
             c24 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
    ----------------------------------------------------------------------------------------------

. predict AL1, score 
(7 components skipped)

Scoring coefficients 
    sum of squares(column-loading) = 1

    ----------------------------------------------------------------------------------------------
        Variable |    Comp1     Comp2     Comp3     Comp4     Comp5     Comp6     Comp7     Comp8 
    -------------+--------------------------------------------------------------------------------
             c13 |   0.3208    0.0298   -0.0208   -0.1035    0.0913    0.3360    0.8725   -0.0500 
             c14 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
             c15 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
             c16 |   0.2263    0.5218    0.3625   -0.0501   -0.0987   -0.7058    0.1851    0.0213 
             c17 |   0.3314    0.0409    0.1100    0.0062    0.0989    0.0943   -0.2182   -0.9000 
             c18 |  -0.2049    0.2666    0.4631    0.7441    0.1512    0.3054    0.0343    0.0387 
             c19 |  -0.0103    0.7180   -0.6419    0.0961   -0.1419    0.1882   -0.0837   -0.0246 
             c20 |   0.2379   -0.3204   -0.1916    0.5104   -0.7051   -0.1688    0.1142   -0.0697 
             c21 |   0.2496   -0.1812   -0.4078    0.4026    0.6572   -0.3738    0.0312    0.0621 
             c22 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
             c23 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
             c24 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
    ----------------------------------------------------------------------------------------------

. sum AL1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         AL1 |         63   -3.78e-09    2.929351  -3.588274   3.158526

. 
. gen moral_perspective=c13+c16+c19+c22
(385 missing values generated)

. gen balance_processing=c14+c17+c20+c23
(384 missing values generated)

. gen relational_transparency=c15+c18+c21+c24
(384 missing values generated)

. label variable moral_perspective "AL moral perspective, total score on c13 c16 c19 and c22"

. label variable balance_processing "AL balance processing, total score on c14 c17 c20 and c23"

. label variable relational_transparency "AL relational transparency, total score on c15 c18 c21 and c24"

. 
. pwcorr moral balance

             | moral_~e balanc~g
-------------+------------------
moral_pers~e |   1.0000 
balance_pr~g |   0.8252   1.0000 

. pwcorr moral relational

             | moral_~e relati~y
-------------+------------------
moral_pers~e |   1.0000 
relational~y |   0.7987   1.0000 

. pwcorr balance relationa

             | balanc~g relati~y
-------------+------------------
balance_pr~g |   1.0000 
relational~y |   0.9073   1.0000 

. egen helpauthentic = rowmean(moral_pers balance_pro relational_trans)
(384 missing values generated)

. gen authentic_leader1=0 if helpauthe!=.
(384 missing values generated)

. replace authentic_leader1=1 if helpauthe>12 & helpauthe!=.
(34 real changes made)

. label variable authentic_leader1 "1=high authentic leadership, 0 otherwise"

. lab def authentic 0 "Low" 1 "High", replace

. lab val authentic_leader1 authentic

. 
. /* AGAIN, very strong correlation among AL variables. Including them jointly in regressions may be no good idea*/
. gen strong_moral=0 if leader!=.
(384 missing values generated)

. replace strong_moral=1 if moral_perspective>=13 & leader!=.
(23 real changes made)

. gen strong_balance=0 if leader!=.
(384 missing values generated)

. replace strong_balance=1 if balance_processing>=13 & leader!=.
(36 real changes made)

. gen strong_relational=0 if leader!=.
(384 missing values generated)

. replace strong_relational=1 if relational_transparency>=13 & leader!=.
(28 real changes made)

. 
. foreach var of varlist  strong_moral strong_balance strong_relational{
  2. tab2 `var' leader, chi2
  3. }

-> tabulation of strong_moral by leader  

strong_mor |        leader
        al |       DEL     Chiefs |     Total
-----------+----------------------+----------
         0 |        21         20 |        41 
         1 |        11         12 |        23 
-----------+----------------------+----------
     Total |        32         32 |        64 

          Pearson chi2(1) =   0.0679   Pr = 0.794

-> tabulation of strong_balance by leader  

strong_bal |        leader
      ance |       DEL     Chiefs |     Total
-----------+----------------------+----------
         0 |        13         15 |        28 
         1 |        19         17 |        36 
-----------+----------------------+----------
     Total |        32         32 |        64 

          Pearson chi2(1) =   0.2540   Pr = 0.614

-> tabulation of strong_relational by leader  

strong_rel |        leader
   ational |       DEL     Chiefs |     Total
-----------+----------------------+----------
         0 |        17         19 |        36 
         1 |        15         13 |        28 
-----------+----------------------+----------
     Total |        32         32 |        64 

          Pearson chi2(1) =   0.2540   Pr = 0.614

. /* No differences, will not change if we use Fisher exact test for values being very similar*/
. label variable strong_moral"AL dummy for moral perspective"

. label variable strong_balance "AL dummy for balance processing"

. label variable strong_relational "AL dummy for relational transparency"

. 
. gen authentic_leader2=0 if leader!=.
(384 missing values generated)

. replace authentic_leader2=1 if strong_moral==1 & strong_balance==1 & strong_relational==1
(17 real changes made)

. label variable authentic_leader2 "Measure of authentic leadership based on dummies"

. 
. * standardize authentic leadership scale (z-scores)
. egen AL_score=rowmean(moral_perspective balance_processing relational_transparency)
(384 missing values generated)

. egen z_AL_score=std(AL_score)
(384 missing values generated)

. 
. * Village level leader motivation
. bysort village: egen aux_motivation=total(motivation)

. gen intrinsic_DEL=0 if motivation==0 & TL==0
(437 missing values generated)

. replace intrinsic_DEL=1 if motivation==1 & TL==0
(21 real changes made)

. gen intrinsic_TL=0 if motivation==0 & TL==1
(430 missing values generated)

. replace intrinsic_TL=1 if motivation==1 & TL==1
(14 real changes made)

. gen sum_motivation=.
(448 missing values generated)

. replace sum_motivation=0 if aux_motivation==0
(56 real changes made)

. replace sum_motivation=1 if aux_motivation==1 & intrinsic_DEL==0
(7 real changes made)

. replace sum_motivation=1 if aux_motivation==1 & intrinsic_TL==1
(7 real changes made)

. replace sum_motivation=2 if aux_motivation==1 & intrinsic_TL==0
(14 real changes made)

. replace sum_motivation=2 if aux_motivation==1 & intrinsic_DEL==1
(14 real changes made)

. replace sum_motivation=3 if aux_motivation==2
(98 real changes made)

. lab def motivation2 0 "both extrinsic" 1 "DEL extrinsic/ TL intrinsic" 2 "TL extrinsic/ DEL intrinsic"  3 "both intrinsic", replace

. lab val sum_motivation motivation2

. 
. gen bonus_AL=bonus*authentic_leader1
(384 missing values generated)

. 
. 
. 
. /* NOTE:
> - FWe drop d5j (Motorrad), cell phone and freezer as this has too little variation. Drop sewing machine as no obs for leader
> - Include dummies for d6 and d7a, in case of d6 a dummy if main source is private tap (d6==1) und in case of d7 if d7a=02 (concrete)
> */
. 
. * Dummies for main income sources
. gen i_sf=0

. replace i_sf=1 if d1==3 | d1==4
(138 real changes made)

. lab var i_sf "Farming"

. 
. gen i_ob=0 

. replace i_ob=1 if d1==5
(67 real changes made)

. label var i_ob "Own business"

. 
. gen i_em=0

. replace i_em=1 if d1==1 | d1==2
(45 real changes made)

. label var i_em "Employment"

. 
. gen i_p=0

. replace i_p=1 if d1==6
(93 real changes made)

. label var i_p "Pension"

. 
. 
. 
. gen privatetap = (d6==1) if d6!=.
(5 missing values generated)

. gen robustfloor = (d7a==2 | d7a==4) if d7a!=.
(6 missing values generated)

. label variable robustfloor "Dummy taking 1 if concrete or wooden housefloor, based on d7a"

. label variable privatetap "Dummy if privat tap, based on d6"

. 
. // Normalize livestock assets to [0,1] range
. sum d3a 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         d3a |        442    8.873303    19.44391          0        300

. gen z_cattle = (d3a - r(min))/(r(max)-r(min))
(6 missing values generated)

. sum d3b

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         d3b |        442    .3733032    2.747666          0         30

. gen z_sheeps = (d3b - r(min))/(r(max)-r(min))
(6 missing values generated)

. sum d3c

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         d3c |        442    13.35068    16.80289          0        200

. gen z_goats = (d3c - r(min))/(r(max)-r(min))
(6 missing values generated)

. 
. bysort villager: sum z_cattle z_sheeps z_goats

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> villager = 0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         64    .0488021    .0654421          0         .4
    z_sheeps |         64      .00625         .05          0         .4
     z_goats |         64    .1092188    .1390792          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> villager = 1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |        378    .0263228    .0642247          0          1
    z_sheeps |        378    .0134921    .0968875          0          1
     z_goats |        378    .0595635    .0683105          0         .5


. 
. global asset z_cattle z_sheeps z_goats d5a d5b d5c d5d d5e d5f d5g d5i d5j d5k d5l d5m d5n robustfloor privatetap

. global asset2 d5a d5b d5d d5f d5g d5i d5k-d5n privatetap

. 
. pca $asset2, comp(1)

Principal components/correlation                 Number of obs    =        431
                                                 Number of comp.  =          1
                                                 Trace            =         11
    Rotation: (unrotated = principal)            Rho              =     0.2645

    --------------------------------------------------------------------------
       Component |   Eigenvalue   Difference         Proportion   Cumulative
    -------------+------------------------------------------------------------
           Comp1 |      2.90923      1.66106             0.2645       0.2645
           Comp2 |      1.24818      .104836             0.1135       0.3779
           Comp3 |      1.14334      .186404             0.1039       0.4819
           Comp4 |      .956937      .136826             0.0870       0.5689
           Comp5 |      .820111     .0212259             0.0746       0.6434
           Comp6 |      .798885     .0776617             0.0726       0.7161
           Comp7 |      .721223     .0385552             0.0656       0.7816
           Comp8 |      .682668     .0664126             0.0621       0.8437
           Comp9 |      .616255     .0419399             0.0560       0.8997
          Comp10 |      .574316     .0454601             0.0522       0.9519
          Comp11 |      .528855            .             0.0481       1.0000
    --------------------------------------------------------------------------

Principal components (eigenvectors) 

    --------------------------------------
        Variable |    Comp1 | Unexplained 
    -------------+----------+-------------
             d5a |   0.1841 |       .9014 
             d5b |   0.3884 |       .5612 
             d5d |   0.3551 |       .6332 
             d5f |   0.2575 |       .8071 
             d5g |   0.3441 |       .6556 
             d5i |   0.3654 |       .6117 
             d5k |   0.2157 |       .8646 
             d5l |   0.2627 |       .7992 
             d5m |   0.3276 |       .6878 
             d5n |   0.2742 |       .7813 
      privatetap |   0.2702 |       .7877 
    --------------------------------------

. estat loadings

Principal component loadings (unrotated)
    component normalization: sum of squares(column) = 1

    ------------------------
                 |    Comp1 
    -------------+----------
             d5a |    .1841 
             d5b |    .3884 
             d5d |    .3551 
             d5f |    .2575 
             d5g |    .3441 
             d5i |    .3654 
             d5k |    .2157 
             d5l |    .2627 
             d5m |    .3276 
             d5n |    .2742 
      privatetap |    .2702 
    ------------------------

. predict pc1, score

Scoring coefficients 
    sum of squares(column-loading) = 1

    ------------------------
        Variable |    Comp1 
    -------------+----------
             d5a |   0.1841 
             d5b |   0.3884 
             d5d |   0.3551 
             d5f |   0.2575 
             d5g |   0.3441 
             d5i |   0.3654 
             d5k |   0.2157 
             d5l |   0.2627 
             d5m |   0.3276 
             d5n |   0.2742 
      privatetap |   0.2702 
    ------------------------

. estat kmo // legitimate pca, kmo=0.79 > 0.7

Kaiser-Meyer-Olkin measure of sampling adequacy

    -----------------------
        Variable |     kmo 
    -------------+---------
             d5a |  0.7485 
             d5b |  0.8123 
             d5d |  0.7777 
             d5f |  0.7751 
             d5g |  0.8669 
             d5i |  0.8242 
             d5k |  0.7672 
             d5l |  0.7011 
             d5m |  0.7625 
             d5n |  0.7944 
      privatetap |  0.8454 
    -------------+---------
         Overall |  0.7924 
    -----------------------

. sum pc1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         pc1 |        431   -7.56e-09    1.705647  -2.108749   6.471886

. gen pca_wealth=pc1
(17 missing values generated)

. label var pca_wealth "Socio-economic status proxy based on first component of pca"

. 
. xtile quintile=pca_wealth, nq(5)

. bysort leader: sum pca_wealth

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> leader = DEL

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  pca_wealth |         32     .451963    1.621559  -2.108749   3.726418

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> leader = Chiefs

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  pca_wealth |         32    1.702505    1.805242  -1.535614   6.471886

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> leader = .

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  pca_wealth |        367   -.1878555    1.616336  -2.108749    5.90319


. label define quints 1 "Poorest" 2 "Poor" 3 "Medium" 4 "Wealthy" 5 "Wealthiest"

. label values quintile quints

. 
. bysort quintile: sum $asset

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Poorest

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         90    .0064074    .0161085          0         .1
    z_sheeps |         90    .0018519    .0175682          0   .1666667
     z_goats |         90    .0268889    .0432498          0         .2
         d5a |         91    .4395604    .4990834          0          1
         d5b |         91           0           0          0          0
-------------+---------------------------------------------------------
         d5c |         91    .9230769    .2679457          0          1
         d5d |         91           0           0          0          0
         d5e |         91           0           0          0          0
         d5f |         91           0           0          0          0
         d5g |         91           0           0          0          0
-------------+---------------------------------------------------------
         d5i |         91           0           0          0          0
         d5j |         91           0           0          0          0
         d5k |         91     .010989    .1048285          0          1
         d5l |         91           0           0          0          0
         d5m |         91           0           0          0          0
-------------+---------------------------------------------------------
         d5n |         91    .1648352    .3730873          0          1
 robustfloor |         91     .032967    .1795395          0          1
  privatetap |         91    .0659341    .2495417          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Poor

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         82    .0156911    .0245088          0   .1066667
    z_sheeps |         82    .0146341    .1068437          0   .9333333
     z_goats |         82    .0370122    .0440318          0         .2
         d5a |         83    .9036145    .2969133          0          1
         d5b |         83           0           0          0          0
-------------+---------------------------------------------------------
         d5c |         83    .9638554    .1877845          0          1
         d5d |         83    .0120482    .1097643          0          1
         d5e |         83    .0120482    .1097643          0          1
         d5f |         83           0           0          0          0
         d5g |         83           0           0          0          0
-------------+---------------------------------------------------------
         d5i |         83     .060241    .2393792          0          1
         d5j |         83           0           0          0          0
         d5k |         83    .1325301    .3411274          0          1
         d5l |         83           0           0          0          0
         d5m |         83           0           0          0          0
-------------+---------------------------------------------------------
         d5n |         83    .5421687    .5012473          0          1
 robustfloor |         83    .0481928    .2154753          0          1
  privatetap |         83     .313253    .4666359          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Medium

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |        100       .0332    .1024579          0          1
    z_sheeps |        100    .0036667    .0176606          0         .1
     z_goats |        100      .06995    .0820953          0         .5
         d5a |        101    .9108911    .2863218          0          1
         d5b |        101     .039604    .1959996          0          1
-------------+---------------------------------------------------------
         d5c |        101     .950495    .2180017          0          1
         d5d |        101     .049505    .2180017          0          1
         d5e |        101     .019802    .1400141          0          1
         d5f |        101     .009901    .0995037          0          1
         d5g |        101    .0792079      .27141          0          1
-------------+---------------------------------------------------------
         d5i |        101    .2475248    .4337267          0          1
         d5j |        101     .029703    .1706133          0          1
         d5k |        101    .3762376     .486857          0          1
         d5l |        101     .009901    .0995037          0          1
         d5m |        101           0           0          0          0
-------------+---------------------------------------------------------
         d5n |        101    .7821782    .4148243          0          1
 robustfloor |        100         .07    .2564324          0          1
  privatetap |        101    .5544554    .4995047          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Wealthy

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         70    .0448571    .0639738          0   .3333333
    z_sheeps |         70    .0171429    .1215497          0          1
     z_goats |         70    .0861429    .0781033          0        .35
         d5a |         70    .9285714    .2593989          0          1
         d5b |         70    .2142857    .4132886          0          1
-------------+---------------------------------------------------------
         d5c |         70    .9714286    .1678015          0          1
         d5d |         70    .1571429    .3665631          0          1
         d5e |         70    .0714286    .2593989          0          1
         d5f |         70    .0142857    .1195229          0          1
         d5g |         70    .2142857    .4132886          0          1
-------------+---------------------------------------------------------
         d5i |         70    .6714286    .4730851          0          1
         d5j |         70    .0857143     .281963          0          1
         d5k |         70    .2857143    .4550158          0          1
         d5l |         70    .0714286    .2593989          0          1
         d5m |         70    .1142857    .3204552          0          1
-------------+---------------------------------------------------------
         d5n |         70    .8857143    .3204552          0          1
 robustfloor |         70    .0714286    .2593989          0          1
  privatetap |         70    .6428571    .4826171          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Wealthiest

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         86    .0513953    .0617892          0         .4
    z_sheeps |         86     .029845    .1392819          0   .8666667
     z_goats |         86    .1172093    .1187424          0          1
         d5a |         86    .9186047    .2750451          0          1
         d5b |         86    .6162791    .4891434          0          1
-------------+---------------------------------------------------------
         d5c |         86    .9534884    .2118255          0          1
         d5d |         86    .5348837    .5017071          0          1
         d5e |         86     .244186    .4321233          0          1
         d5f |         86    .2906977    .4567476          0          1
         d5g |         86    .5813953    .4962238          0          1
-------------+---------------------------------------------------------
         d5i |         86    .7790698    .4173068          0          1
         d5j |         86    .0581395    .2353796          0          1
         d5k |         86    .4767442    .5023883          0          1
         d5l |         86     .244186    .4321233          0          1
         d5m |         86    .3837209    .4891434          0          1
-------------+---------------------------------------------------------
         d5n |         86    .9069767    .2921686          0          1
 robustfloor |         86    .1046512    .3078988          0          1
  privatetap |         86    .7790698    .4173068          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = .

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         14    .0235714    .0295685          0   .0833333
    z_sheeps |         14           0           0          0          0
     z_goats |         14       .0675    .0560134          0       .175
         d5a |         11    .8181818    .4045199          0          1
         d5b |         11    .2727273    .4670994          0          1
-------------+---------------------------------------------------------
         d5c |         12    .9166667    .2886751          0          1
         d5d |         11    .1818182    .4045199          0          1
         d5e |         12    .1666667    .3892495          0          1
         d5f |         11    .0909091    .3015113          0          1
         d5g |         11    .0909091    .3015113          0          1
-------------+---------------------------------------------------------
         d5i |         12    .0833333    .2886751          0          1
         d5j |         11    .0909091    .3015113          0          1
         d5k |         11    .1818182    .4045199          0          1
         d5l |         10          .1    .3162278          0          1
         d5m |         10          .2     .421637          0          1
-------------+---------------------------------------------------------
         d5n |         10          .2     .421637          0          1
 robustfloor |         12    .0833333    .2886751          0          1
  privatetap |         12         .25     .452267          0          1


. 
. 
. 
. 
. *** Create Variable that informs about years living in village ***
. /* Problem: for 50% of sample, a6 takes the value of "1". What does this mean? */
. 
. ** lifetime spent in village
. replace a6=2000 if id==380
(1 real change made)

. *Assistant for got a zero in the year
. gen years_in_village = .
(448 missing values generated)

. gen a6_new = 2015-a6 if a6 > 1
(226 missing values generated)

. label variable a6_new "Transformation of a6 in years"

. replace years_in_village = age if a6==1
(222 real changes made)

. replace  years_in_village = a6_new if a6 > 1
(222 real changes made)

. gen rootedness=years_in_village/age
(5 missing values generated)

. replace rootedness=1 if rootedness > 1
(58 real changes made)

. label variable rootedness "Fraction of lifetime spent in village"

. *some are younger than the time spent in the village (they probably have been living there all their life)
. 
. 
. *** experience in years
. gen experience = 2015-f1
(384 missing values generated)

. label variable experience "Years in office"

. 
. 
. // Competition
. gen f5new=f5
(390 missing values generated)

. replace f5new=0 if f5new==. & leader!=.
(6 real changes made)

. rename f5new competitor

. 
. gen dcompetitor = (competitor>0 & competitor!=.)

. label variable competitor "Number of competitors in previous election"

. label variable dcompetitor "Dummy=1 if there were some other candidates in previous election"

. 
. /*
> gen competitor2=competitor
> replace competitor2=20 if competitor2>=20 & competitor2!=.
> */
. 
. // Term office
. gen term=f2a
(384 missing values generated)

. label variable term "Dummy=1 if person faces term office"

. 
. // Elected
. gen elected =1 if f3b==1 | (f3==1 | f3==2)
(412 missing values generated)

. replace elected=0 if elected ==. & leader!=.
(28 real changes made)

. label variable elected "Dummy=1 if person was elected rather than appointed"

. 
. // Secret elections
. gen secretelec = 1 if f4c==1
(432 missing values generated)

. replace secretelec = 0 if f4c>1 & f4c!=.
(47 real changes made)

. label var secretelec "Dummy =1 if elections were secretly held"

. 
. 
. save "$working_ANALYSIS\processed\analysis_wide.dta", replace
file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\processed\analysis_wide.dta saved

. 
. 
. /*
> Reshape dataset into long-format for analysis of bonus payment rounds.
> Generate additional variables for analysis in long-format.
> */
. reshape long rule vote majority payoff, i(id) j(decision)
(note: j = 1 2 3 4 5 6)
(note: payoff2 not found)
(note: payoff3 not found)
(note: payoff4 not found)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                      448   ->    2688
Number of variables                 442   ->     426
j variable (6 values)                     ->   decision
xij variables:
                  rule1 rule2 ... rule6   ->   rule
                  vote1 vote2 ... vote6   ->   vote
      majority1 majority2 ... majority6   ->   majority
            payoff1 payoff2 ... payoff6   ->   payoff
-----------------------------------------------------------------------------

. 
. *Drop all decisions except 1, 5 and 6 (basic, bonus1, bonus2)
. drop if decision>1 & decision<5
(1,344 observations deleted)

. drop if id>64
(1,152 observations deleted)

. order decision rule vote majority payoff, after(session_id)

. order session_id, after(id)

. 
. *---------------------------------------------------------
. * Generating additional variables for long-format analysis
. *---------------------------------------------------------
. * Binary rule choice
. gen dem=0

. replace dem=1 if rule==1
(123 real changes made)

. 
. gen dic=0

. replace dic=1 if rule==3
(14 real changes made)

. 
. gen fake=0

. replace fake=1 if rule==2
(55 real changes made)

. *bonus: 0=no bonus, 1=any bonus
. gen bonus=0

. replace bonus=1 if decision>4
(128 real changes made)

. 
. 
. *bonus_size: 0=no, 1=small, 2=large
. gen bonus_size=0

. replace bonus_size=1 if decision==5
(64 real changes made)

. replace bonus_size=2 if decision==6
(64 real changes made)

. lab def bonus_size1 0 "Baseline" 1 "Small Bonus" 2 "Large Bonus", replace

. lab val bonus_size bonus_size1

. 
. 
. *Generate identifier for the first bonus that was offered
. gen bonus_first=0 if (decision==6 & randomization<7) | (decision==5 & randomization>6)
(128 missing values generated)

. replace bonus_first=1 if (decision==5 & randomization<7) | (decision==6 & randomization>6)
(64 real changes made)

. label def first_lab 0 "3rd round" 1 "2nd round", replace

. lab val bonus_first first_lab

. 
. replace rule=1 if dem==1
(0 real changes made)

. replace rule=2 if fake==1
(0 real changes made)

. replace rule=3 if dic==1
(0 real changes made)

. 
. label def bonus 0 "Baseline (n=64)" 1 "Pooled Bonus (n=128)", replace

. label def rule 1 "Democratic" 2 "Pseudo-democratic" 3 "Autocratic" , replace

. label val bonus bonus

. label val rule rule

. 
. order bonus bonus_size bonus_order randomization dem dic fake, after(majority)

. 
. *rule choice variable for basic round
. gen rule_basic = rule if decision==1
(128 missing values generated)

. replace rule_basic = rule_basic[_n-1] if missing(rule_basic)
(128 real changes made)

. order rule_basic, after(rule)

. label def rule_basic 1 "Base: Democratic (n=41)" 2 "Base: Pseudo (n=14)" 3 "Base: Autocrat (n=9)", replace

. label val rule_basic rule_basic

. 
. 
. qui tab bonus_size, gen(bonus_)

. qui tab bonus_order, gen(order_)

. qui tab rule_basic, gen(baseline_)

. 
. *interactions 
. gen bonus_democrat=bonus*baseline_1

. gen bonus_pseudo=bonus*baseline_2

. gen bonus_dictator=bonus*baseline_3

. 
. *
. 
. // Globals
. global order order_3

. global socio education age pca_wealth male experience married rootedness

. 
. *interactions
. gen bonus_extrinsic=bonus*extrinsic_leader

. gen bonus_TL=bonus*TL

. 
. 
. save "$working_ANALYSIS\processed\analysis_long.dta", replace
file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\processed\analysis_long.dta saved

. 
. 
. 
. 
. ** EOF
. 
end of do-file

. do "$working_ANALYSIS/scripts/03_analysis.do"

. *--------------------------------------------------------------------
. * SCRIPT: 03_analysis.do
. * PURPOSE: replicates the tables and figures and saves the results
. *--------------------------------------------------------------------
. 
. *--------------------------------------------------
. * STRUCTURE OF THE DO-FILE
. /*
> 
>         1) Analysis for main paper
>         2) Analysis for supplementary online materials
> */
. *--------------------------------------------------
. 
. 
. *--------------------------------------------------
. * (1) Analysis for main paper
. *--------------------------------------------------
. 
. 
. *Figure 1.      Normative expectations regarding group decision-making
. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. * Please indicate for each of the statement whether you disagree strongly, disagree a little, neither agree nor disagree, agree a little, or strongly a
> gree
.  global dem_norm c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12

.  foreach var of varlist $dem_norm {
  2.         replace `var'=0 if `var'==. 
  3.         }
(51 real changes made)
(53 real changes made)
(49 real changes made)
(113 real changes made)
(23 real changes made)
(61 real changes made)
(86 real changes made)
(26 real changes made)
(63 real changes made)
(52 real changes made)
(36 real changes made)
(32 real changes made)

.         
. foreach var of varlist $dem_norm {
  2.         gen new_`var'=1 if `var'==1
  3.         replace new_`var'=2 if `var'==2 
  4.         replace new_`var'=3 if `var'==0 
  5.         replace new_`var'=4 if `var'==3
  6.         replace new_`var'=5 if `var'==4
  7.         }
(372 missing values generated)
(8 real changes made)
(51 real changes made)
(19 real changes made)
(294 real changes made)
(353 missing values generated)
(20 real changes made)
(53 real changes made)
(43 real changes made)
(237 real changes made)
(390 missing values generated)
(10 real changes made)
(49 real changes made)
(30 real changes made)
(301 real changes made)
(353 missing values generated)
(22 real changes made)
(113 real changes made)
(30 real changes made)
(188 real changes made)
(399 missing values generated)
(4 real changes made)
(23 real changes made)
(9 real changes made)
(363 real changes made)
(191 missing values generated)
(13 real changes made)
(61 real changes made)
(24 real changes made)
(93 real changes made)
(284 missing values generated)
(45 real changes made)
(86 real changes made)
(34 real changes made)
(119 real changes made)
(397 missing values generated)
(6 real changes made)
(26 real changes made)
(6 real changes made)
(359 real changes made)
(153 missing values generated)
(11 real changes made)
(63 real changes made)
(12 real changes made)
(67 real changes made)
(334 missing values generated)
(38 real changes made)
(52 real changes made)
(71 real changes made)
(173 real changes made)
(307 missing values generated)
(40 real changes made)
(36 real changes made)
(55 real changes made)
(176 real changes made)
(375 missing values generated)
(21 real changes made)
(32 real changes made)
(61 real changes made)
(261 real changes made)

. lab var new_c1 "For important decisions members of a group should be allowed to vote."

. lab var new_c2 "Most people can learn to be leaders, it is not a matter of birth."

. lab var new_c3 "Democratic elections in this village ensure that the elected authorities act in the interest of their people."
note: label truncated to 80 characters

. lab var new_c4 "In most cases, failures in this village are traceable to bad cicumstances and not bad leadership."
note: label truncated to 80 characters

. lab var new_c5 "Schools and parents schould teach children to obey authority."

. lab var new_c6 "Favouring friends, relatives or supporters over others in the course of ones duties as a leader is sometimes justified."
note: label truncated to 80 characters

. lab var new_c7 "On the whole, men make better political leaders than women do."

. lab var new_c8 "A leader hast to serve all people including those who did not vote for him/her or are not friends."
note: label truncated to 80 characters

. lab var new_c9 "Accepting a bribe in the course of ones duties is sometimes justified."

. lab var new_c10 "Most people in this village can be trusted."

. lab var new_c11 "On the whole, more educated people make better political leaders than the less educated do."
note: label truncated to 80 characters

. lab var new_c12 "On the whole, elders make better political leaders than the youth do."

.         
. gen new_c6r = 6- new_c6

. gen new_c7r = 6- new_c7 

. gen new_c9r = 6- new_c9

. alpha new_c1 new_c3 new_c8 new_c9r 

Test scale = mean(unstandardized items)

Average interitem covariance:     .9378221
Number of items in the scale:            4
Scale reliability coefficient:      0.7613

. 
. gen types = 0 if villager==1
(64 missing values generated)

. replace types = 1 if extrinsic_leader==0
(35 real changes made)

. replace types = 2 if extrinsic_leader==1
(29 real changes made)

. lab def villy1 0 "Villager" 1 "Intrinsic leader" 2 "Extrinsic leader", replace

. lab val types villy1

. 
. *graphical presentation
. preserve

. rename new_c1 norm1

. rename new_c3 norm2

. rename new_c8 norm3

. 
. 
. reshape long norm ,i(id) j(pr_id)
(note: j = 1 2 3)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                      448   ->    1344
Number of variables                 458   ->     457
j variable (3 values)                     ->   pr_id
xij variables:
                      norm1 norm2 norm3   ->   norm
-----------------------------------------------------------------------------

. label define pr1 1 "Group voting" 2 "Elections" 3 "Inclusive"

. label values pr_id pr1

. 
. cibar norm, over1(types) over2(pr_id) bargap(0) gap(80) barlabel(on) blpos(11) blgap(0.01) blfmt(%9.1f) graphopts(legend() xsize(4) ysize(2) yla(1(1)5)
>   ytitle("Mean") note("{bf: Group voting}='For important decisions members of a group should be allowed to vote.'" "{bf: Elections}='Democratic electio
> ns in this village ensure that the elected authorities act in the interest of their people.'" "{bf: Inclusive}='A leader hast to serve all people inclu
> ding those who did not vote for him/her or are not friends.'")) ciopts(lpattern(dash) lcolor(black))

. gr save "$working_ANALYSIS/results/intermediate/figure1_normative_expectations.gph", replace
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure1_normative_expecta
> tions.gph not found)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure1_normative_expectations.
> gph saved)

. gr export "$working_ANALYSIS/results/figures/figure1_normative_expectations.tif", replace width(3465)
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure1_normative_expectations
> .tif not found)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure1_normative_expectations.tif w
> ritten in TIFF format)

. 
. 
. ttest new_c1 if types!= 2, by(types)
new_c1 ambiguous abbreviation
r(111);

end of do-file
r(111);

end of do-file

r(111);

. do "C:\Users\istei\AppData\Local\Temp\STD3f80_000000.tmp"

. *--------------------------------------------------------------------
. * SCRIPT: 03_analysis.do
. * PURPOSE: replicates the tables and figures and saves the results
. *--------------------------------------------------------------------
. 
. *--------------------------------------------------
. * STRUCTURE OF THE DO-FILE
. /*
> 
>         1) Analysis for main paper
>         2) Analysis for supplementary online materials
> */
. *--------------------------------------------------
. 
. 
. *--------------------------------------------------
. * (1) Analysis for main paper
. *--------------------------------------------------
. 
. 
. *Figure 1.      Normative expectations regarding group decision-making
. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. * Please indicate for each of the statement whether you disagree strongly, disagree a little, neither agree nor disagree, agree a little, or strongly a
> gree
.  global dem_norm c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12

.  foreach var of varlist $dem_norm {
  2.         replace `var'=0 if `var'==. 
  3.         }
(51 real changes made)
(53 real changes made)
(49 real changes made)
(113 real changes made)
(23 real changes made)
(61 real changes made)
(86 real changes made)
(26 real changes made)
(63 real changes made)
(52 real changes made)
(36 real changes made)
(32 real changes made)

.         
. foreach var of varlist $dem_norm {
  2.         gen new_`var'=1 if `var'==1
  3.         replace new_`var'=2 if `var'==2 
  4.         replace new_`var'=3 if `var'==0 
  5.         replace new_`var'=4 if `var'==3
  6.         replace new_`var'=5 if `var'==4
  7.         }
(372 missing values generated)
(8 real changes made)
(51 real changes made)
(19 real changes made)
(294 real changes made)
(353 missing values generated)
(20 real changes made)
(53 real changes made)
(43 real changes made)
(237 real changes made)
(390 missing values generated)
(10 real changes made)
(49 real changes made)
(30 real changes made)
(301 real changes made)
(353 missing values generated)
(22 real changes made)
(113 real changes made)
(30 real changes made)
(188 real changes made)
(399 missing values generated)
(4 real changes made)
(23 real changes made)
(9 real changes made)
(363 real changes made)
(191 missing values generated)
(13 real changes made)
(61 real changes made)
(24 real changes made)
(93 real changes made)
(284 missing values generated)
(45 real changes made)
(86 real changes made)
(34 real changes made)
(119 real changes made)
(397 missing values generated)
(6 real changes made)
(26 real changes made)
(6 real changes made)
(359 real changes made)
(153 missing values generated)
(11 real changes made)
(63 real changes made)
(12 real changes made)
(67 real changes made)
(334 missing values generated)
(38 real changes made)
(52 real changes made)
(71 real changes made)
(173 real changes made)
(307 missing values generated)
(40 real changes made)
(36 real changes made)
(55 real changes made)
(176 real changes made)
(375 missing values generated)
(21 real changes made)
(32 real changes made)
(61 real changes made)
(261 real changes made)

. lab var new_c1 "For important decisions members of a group should be allowed to vote."

. lab var new_c2 "Most people can learn to be leaders, it is not a matter of birth."

. lab var new_c3 "Democratic elections in this village ensure that the elected authorities act in the interest of their people."
note: label truncated to 80 characters

. lab var new_c4 "In most cases, failures in this village are traceable to bad cicumstances and not bad leadership."
note: label truncated to 80 characters

. lab var new_c5 "Schools and parents schould teach children to obey authority."

. lab var new_c6 "Favouring friends, relatives or supporters over others in the course of ones duties as a leader is sometimes justified."
note: label truncated to 80 characters

. lab var new_c7 "On the whole, men make better political leaders than women do."

. lab var new_c8 "A leader hast to serve all people including those who did not vote for him/her or are not friends."
note: label truncated to 80 characters

. lab var new_c9 "Accepting a bribe in the course of ones duties is sometimes justified."

. lab var new_c10 "Most people in this village can be trusted."

. lab var new_c11 "On the whole, more educated people make better political leaders than the less educated do."
note: label truncated to 80 characters

. lab var new_c12 "On the whole, elders make better political leaders than the youth do."

.         
. gen new_c6r = 6- new_c6

. gen new_c7r = 6- new_c7 

. gen new_c9r = 6- new_c9

. alpha new_c1 new_c3 new_c8 new_c9r 

Test scale = mean(unstandardized items)

Average interitem covariance:     .9378221
Number of items in the scale:            4
Scale reliability coefficient:      0.7613

. 
. gen types = 0 if villager==1
(64 missing values generated)

. replace types = 1 if extrinsic_leader==0
(35 real changes made)

. replace types = 2 if extrinsic_leader==1
(29 real changes made)

. lab def villy1 0 "Villager" 1 "Intrinsic leader" 2 "Extrinsic leader", replace

. lab val types villy1

. 
. *graphical presentation
. preserve

. rename new_c1 norm1

. rename new_c3 norm2

. rename new_c8 norm3

. 
. 
. reshape long norm ,i(id) j(pr_id)
(note: j = 1 2 3)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                      448   ->    1344
Number of variables                 458   ->     457
j variable (3 values)                     ->   pr_id
xij variables:
                      norm1 norm2 norm3   ->   norm
-----------------------------------------------------------------------------

. label define pr1 1 "Group voting" 2 "Elections" 3 "Inclusive"

. label values pr_id pr1

. 
. cibar norm, over1(types) over2(pr_id) bargap(0) gap(80) barlabel(on) blpos(11) blgap(0.01) blfmt(%9.1f) graphopts(legend() xsize(4) ysize(2) yla(1(1)5)
>   ytitle("Mean") note("{bf: Group voting}='For important decisions members of a group should be allowed to vote.'" "{bf: Elections}='Democratic electio
> ns in this village ensure that the elected authorities act in the interest of their people.'" "{bf: Inclusive}='A leader hast to serve all people inclu
> ding those who did not vote for him/her or are not friends.'")) ciopts(lpattern(dash) lcolor(black))

. gr save "$working_ANALYSIS/results/intermediate/figure1_normative_expectations.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure1_normative_expectations.
> gph saved)

. gr export "$working_ANALYSIS/results/figures/figure1_normative_expectations.tif", replace width(3465)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure1_normative_expectations.tif w
> ritten in TIFF format)

. 
. restore

. 
. ttest new_c1 if types!= 2, by(types)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
Villager |     384    4.117188    .0727191    1.424997    3.974209    4.260166
Intrinsi |      35    3.685714    .3142857    1.859339    3.047009     4.32442
---------+--------------------------------------------------------------------
combined |     419    4.081146     .071734    1.468359    3.940141     4.22215
---------+--------------------------------------------------------------------
    diff |            .4314732    .2587118               -.0770686     .940015
------------------------------------------------------------------------------
    diff = mean(Villager) - mean(Intrinsi)                        t =   1.6678
Ho: diff = 0                                     degrees of freedom =      417

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9519         Pr(|T| > |t|) = 0.0961          Pr(T > t) = 0.0481

. ranksum new_c1 if types!= 1, by(types)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

       types |      obs    rank sum    expected
-------------+---------------------------------
    Villager |      384       81341       79488
Extrinsic le |       29        4150        6003
-------------+---------------------------------
    combined |      413       85491       85491

unadjusted variance   384192.00
adjustment for ties  -110872.43
                     ----------
adjusted variance     273319.57

Ho: new_c1(types==Villager) = new_c1(types==Extrinsic leader)
             z =   3.544
    Prob > |z| =   0.0004

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

. ranksum new_c1 if types!= 0, by(types)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

       types |      obs    rank sum    expected
-------------+---------------------------------
Intrinsic le |       35      1259.5      1137.5
Extrinsic le |       29       820.5       942.5
-------------+---------------------------------
    combined |       64        2080        2080

unadjusted variance     5497.92
adjustment for ties    -1346.28
                     ----------
adjusted variance       4151.63

Ho: new_c1(types==Intrinsic leader) = new_c1(types==Extrinsic leader)
             z =   1.893
    Prob > |z| =   0.0583
    Exact Prob =   0.0707

. reg new_c1 i.types

      Source |       SS           df       MS      Number of obs   =       448
-------------+----------------------------------   F(2, 445)       =     11.23
       Model |  50.9697275         2  25.4848638   Prob > F        =    0.0000
    Residual |  1010.02804       445  2.26972593   R-squared       =    0.0480
-------------+----------------------------------   Adj R-squared   =    0.0438
       Total |  1060.99777       447   2.3735968   Root MSE        =    1.5066

-----------------------------------------------------------------------------------
           new_c1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |  -.4314732   .2660076    -1.62   0.106    -.9542605     .091314
Extrinsic leader  |  -1.324084    .290133    -4.56   0.000    -1.894285    -.753883
                  |
            _cons |   4.117188   .0768814    53.55   0.000     3.966092    4.268283
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    5.57
            Prob > F =    0.0187

. reg new_c3 i.types, vce(hc3)

Linear regression                               Number of obs     =        448
                                                F(2, 445)         =      19.56
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1286
                                                Root MSE          =     1.3309

-----------------------------------------------------------------------------------
                  |             Robust HC3
           new_c3 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |   -.652753   .3228877    -2.02   0.044    -1.287327   -.0181788
Extrinsic leader  |  -1.999551   .3337905    -5.99   0.000    -2.655552    -1.34355
                  |
            _cons |   4.309896   .0633192    68.07   0.000     4.185454    4.434338
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    8.74
            Prob > F =    0.0033

. reg new_c8 i.types, vce(hc3)

Linear regression                               Number of obs     =        448
                                                F(2, 445)         =      16.19
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1495
                                                Root MSE          =     1.2404

-----------------------------------------------------------------------------------
                  |             Robust HC3
           new_c8 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |  -.9443452   .3349403    -2.82   0.005    -1.602606    -.286084
Extrinsic leader  |  -1.917744   .3828851    -5.01   0.000    -2.670232   -1.165257
                  |
            _cons |   4.572917   .0551377    82.94   0.000     4.464554    4.681279
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    3.75
            Prob > F =    0.0535

. 
. 
. *normative expecation related to group voting by leader baseline choice
. reg new_c1 i.rule_base3 if villager==1, vce(hc3)

Linear regression                               Number of obs     =        384
                                                F(1, 382)         =       4.87
                                                Prob > F          =     0.0279
                                                R-squared         =     0.0087
                                                Root MSE          =     1.4207

------------------------------------------------------------------------------
             |             Robust HC3
      new_c1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
1.rule_base3 |   .3808081   .1725629     2.21   0.028     .0415161    .7201001
       _cons |   4.063636   .0807426    50.33   0.000     3.904881    4.222392
------------------------------------------------------------------------------

. 
. 
end of do-file

. do "C:\Users\istei\AppData\Local\Temp\STD3f80_000000.tmp"

. do "$working_ANALYSIS/scripts/03_analysis.do"

. *--------------------------------------------------------------------
. * SCRIPT: 03_analysis.do
. * PURPOSE: replicates the tables and figures and saves the results
. *--------------------------------------------------------------------
. 
. *--------------------------------------------------
. * STRUCTURE OF THE DO-FILE
. /*
> 
>         1) Analysis for main paper
>         2) Analysis for supplementary online materials
> */
. *--------------------------------------------------
. 
. 
. *--------------------------------------------------
. * (1) Analysis for main paper
. *--------------------------------------------------
. 
. 
. *Figure 1.      Normative expectations regarding group decision-making
. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. * Please indicate for each of the statement whether you disagree strongly, disagree a little, neither agree nor disagree, agree a little, or strongly a
> gree
.  global dem_norm c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12

.  foreach var of varlist $dem_norm {
  2.         replace `var'=0 if `var'==. 
  3.         }
(51 real changes made)
(53 real changes made)
(49 real changes made)
(113 real changes made)
(23 real changes made)
(61 real changes made)
(86 real changes made)
(26 real changes made)
(63 real changes made)
(52 real changes made)
(36 real changes made)
(32 real changes made)

.         
. foreach var of varlist $dem_norm {
  2.         gen new_`var'=1 if `var'==1
  3.         replace new_`var'=2 if `var'==2 
  4.         replace new_`var'=3 if `var'==0 
  5.         replace new_`var'=4 if `var'==3
  6.         replace new_`var'=5 if `var'==4
  7.         }
(372 missing values generated)
(8 real changes made)
(51 real changes made)
(19 real changes made)
(294 real changes made)
(353 missing values generated)
(20 real changes made)
(53 real changes made)
(43 real changes made)
(237 real changes made)
(390 missing values generated)
(10 real changes made)
(49 real changes made)
(30 real changes made)
(301 real changes made)
(353 missing values generated)
(22 real changes made)
(113 real changes made)
(30 real changes made)
(188 real changes made)
(399 missing values generated)
(4 real changes made)
(23 real changes made)
(9 real changes made)
(363 real changes made)
(191 missing values generated)
(13 real changes made)
(61 real changes made)
(24 real changes made)
(93 real changes made)
(284 missing values generated)
(45 real changes made)
(86 real changes made)
(34 real changes made)
(119 real changes made)
(397 missing values generated)
(6 real changes made)
(26 real changes made)
(6 real changes made)
(359 real changes made)
(153 missing values generated)
(11 real changes made)
(63 real changes made)
(12 real changes made)
(67 real changes made)
(334 missing values generated)
(38 real changes made)
(52 real changes made)
(71 real changes made)
(173 real changes made)
(307 missing values generated)
(40 real changes made)
(36 real changes made)
(55 real changes made)
(176 real changes made)
(375 missing values generated)
(21 real changes made)
(32 real changes made)
(61 real changes made)
(261 real changes made)

. lab var new_c1 "For important decisions members of a group should be allowed to vote."

. lab var new_c2 "Most people can learn to be leaders, it is not a matter of birth."

. lab var new_c3 "Democratic elections in this village ensure that the elected authorities act in the interest of their people."
note: label truncated to 80 characters

. lab var new_c4 "In most cases, failures in this village are traceable to bad cicumstances and not bad leadership."
note: label truncated to 80 characters

. lab var new_c5 "Schools and parents schould teach children to obey authority."

. lab var new_c6 "Favouring friends, relatives or supporters over others in the course of ones duties as a leader is sometimes justified."
note: label truncated to 80 characters

. lab var new_c7 "On the whole, men make better political leaders than women do."

. lab var new_c8 "A leader hast to serve all people including those who did not vote for him/her or are not friends."
note: label truncated to 80 characters

. lab var new_c9 "Accepting a bribe in the course of ones duties is sometimes justified."

. lab var new_c10 "Most people in this village can be trusted."

. lab var new_c11 "On the whole, more educated people make better political leaders than the less educated do."
note: label truncated to 80 characters

. lab var new_c12 "On the whole, elders make better political leaders than the youth do."

.         
. gen new_c6r = 6- new_c6

. gen new_c7r = 6- new_c7 

. gen new_c9r = 6- new_c9

. alpha new_c1 new_c3 new_c8 new_c9r 

Test scale = mean(unstandardized items)

Average interitem covariance:     .9378221
Number of items in the scale:            4
Scale reliability coefficient:      0.7613

. 
. gen types = 0 if villager==1
(64 missing values generated)

. replace types = 1 if extrinsic_leader==0
(35 real changes made)

. replace types = 2 if extrinsic_leader==1
(29 real changes made)

. lab def villy1 0 "Villager" 1 "Intrinsic leader" 2 "Extrinsic leader", replace

. lab val types villy1

. 
. *graphical presentation
. preserve

. rename new_c1 norm1

. rename new_c3 norm2

. rename new_c8 norm3

. 
. 
. reshape long norm ,i(id) j(pr_id)
(note: j = 1 2 3)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                      448   ->    1344
Number of variables                 458   ->     457
j variable (3 values)                     ->   pr_id
xij variables:
                      norm1 norm2 norm3   ->   norm
-----------------------------------------------------------------------------

. label define pr1 1 "Group voting" 2 "Elections" 3 "Inclusive"

. label values pr_id pr1

. 
. cibar norm, over1(types) over2(pr_id) bargap(0) gap(80) barlabel(on) blpos(11) blgap(0.01) blfmt(%9.1f) graphopts(legend() xsize(4) ysize(2) yla(1(1)5)
>   ytitle("Mean") note("{bf: Group voting}='For important decisions members of a group should be allowed to vote.'" "{bf: Elections}='Democratic electio
> ns in this village ensure that the elected authorities act in the interest of their people.'" "{bf: Inclusive}='A leader hast to serve all people inclu
> ding those who did not vote for him/her or are not friends.'")) ciopts(lpattern(dash) lcolor(black))

. gr save "$working_ANALYSIS/results/intermediate/figure1_normative_expectations.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure1_normative_expectations.
> gph saved)

. gr export "$working_ANALYSIS/results/figures/figure1_normative_expectations.tif", replace width(3465)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure1_normative_expectations.tif w
> ritten in TIFF format)

. 
. 
. ttest new_c1 if types!= 2, by(types)
new_c1 ambiguous abbreviation
r(111);

end of do-file
r(111);

end of do-file

r(111);

. do "C:\Users\istei\AppData\Local\Temp\STD3f80_000000.tmp"

. ttest new_c1 if types!= 2, by(types)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
Villager |     384    4.117188    .0727191    1.424997    3.974209    4.260166
Intrinsi |      35    3.685714    .3142857    1.859339    3.047009     4.32442
---------+--------------------------------------------------------------------
combined |     419    4.081146     .071734    1.468359    3.940141     4.22215
---------+--------------------------------------------------------------------
    diff |            .4314732    .2587118               -.0770686     .940015
------------------------------------------------------------------------------
    diff = mean(Villager) - mean(Intrinsi)                        t =   1.6678
Ho: diff = 0                                     degrees of freedom =      417

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9519         Pr(|T| > |t|) = 0.0961          Pr(T > t) = 0.0481

. 
end of do-file

. do "C:\Users\istei\AppData\Local\Temp\STD3f80_000000.tmp"

. ranksum new_c1 if types!= 1, by(types)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

       types |      obs    rank sum    expected
-------------+---------------------------------
    Villager |      384       81341       79488
Extrinsic le |       29        4150        6003
-------------+---------------------------------
    combined |      413       85491       85491

unadjusted variance   384192.00
adjustment for ties  -110872.43
                     ----------
adjusted variance     273319.57

Ho: new_c1(types==Villager) = new_c1(types==Extrinsic leader)
             z =   3.544
    Prob > |z| =   0.0004

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

. 
end of do-file

. do "C:\Users\istei\AppData\Local\Temp\STD3f80_000000.tmp"

. ranksum new_c1 if types!= 0, by(types)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

       types |      obs    rank sum    expected
-------------+---------------------------------
Intrinsic le |       35      1259.5      1137.5
Extrinsic le |       29       820.5       942.5
-------------+---------------------------------
    combined |       64        2080        2080

unadjusted variance     5497.92
adjustment for ties    -1346.28
                     ----------
adjusted variance       4151.63

Ho: new_c1(types==Intrinsic leader) = new_c1(types==Extrinsic leader)
             z =   1.893
    Prob > |z| =   0.0583
    Exact Prob =   0.0707

. 
end of do-file

. do "C:\Users\istei\AppData\Local\Temp\STD3f80_000000.tmp"

. do "$working_ANALYSIS/scripts/03_analysis.do"

. *--------------------------------------------------------------------
. * SCRIPT: 03_analysis.do
. * PURPOSE: replicates the tables and figures and saves the results
. *--------------------------------------------------------------------
. 
. *--------------------------------------------------
. * STRUCTURE OF THE DO-FILE
. /*
> 
>         1) Analysis for main paper
>         2) Analysis for supplementary online materials
> */
. *--------------------------------------------------
. 
. 
. *--------------------------------------------------
. * (1) Analysis for main paper
. *--------------------------------------------------
. 
. 
. *Figure 1.      Normative expectations regarding group decision-making
. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. * Please indicate for each of the statement whether you disagree strongly, disagree a little, neither agree nor disagree, agree a little, or strongly a
> gree
.  global dem_norm c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12

.  foreach var of varlist $dem_norm {
  2.         replace `var'=0 if `var'==. 
  3.         }
(51 real changes made)
(53 real changes made)
(49 real changes made)
(113 real changes made)
(23 real changes made)
(61 real changes made)
(86 real changes made)
(26 real changes made)
(63 real changes made)
(52 real changes made)
(36 real changes made)
(32 real changes made)

.         
. foreach var of varlist $dem_norm {
  2.         gen new_`var'=1 if `var'==1
  3.         replace new_`var'=2 if `var'==2 
  4.         replace new_`var'=3 if `var'==0 
  5.         replace new_`var'=4 if `var'==3
  6.         replace new_`var'=5 if `var'==4
  7.         }
(372 missing values generated)
(8 real changes made)
(51 real changes made)
(19 real changes made)
(294 real changes made)
(353 missing values generated)
(20 real changes made)
(53 real changes made)
(43 real changes made)
(237 real changes made)
(390 missing values generated)
(10 real changes made)
(49 real changes made)
(30 real changes made)
(301 real changes made)
(353 missing values generated)
(22 real changes made)
(113 real changes made)
(30 real changes made)
(188 real changes made)
(399 missing values generated)
(4 real changes made)
(23 real changes made)
(9 real changes made)
(363 real changes made)
(191 missing values generated)
(13 real changes made)
(61 real changes made)
(24 real changes made)
(93 real changes made)
(284 missing values generated)
(45 real changes made)
(86 real changes made)
(34 real changes made)
(119 real changes made)
(397 missing values generated)
(6 real changes made)
(26 real changes made)
(6 real changes made)
(359 real changes made)
(153 missing values generated)
(11 real changes made)
(63 real changes made)
(12 real changes made)
(67 real changes made)
(334 missing values generated)
(38 real changes made)
(52 real changes made)
(71 real changes made)
(173 real changes made)
(307 missing values generated)
(40 real changes made)
(36 real changes made)
(55 real changes made)
(176 real changes made)
(375 missing values generated)
(21 real changes made)
(32 real changes made)
(61 real changes made)
(261 real changes made)

. lab var new_c1 "For important decisions members of a group should be allowed to vote."

. lab var new_c2 "Most people can learn to be leaders, it is not a matter of birth."

. lab var new_c3 "Democratic elections in this village ensure that the elected authorities act in the interest of their people."
note: label truncated to 80 characters

. lab var new_c4 "In most cases, failures in this village are traceable to bad cicumstances and not bad leadership."
note: label truncated to 80 characters

. lab var new_c5 "Schools and parents schould teach children to obey authority."

. lab var new_c6 "Favouring friends, relatives or supporters over others in the course of ones duties as a leader is sometimes justified."
note: label truncated to 80 characters

. lab var new_c7 "On the whole, men make better political leaders than women do."

. lab var new_c8 "A leader hast to serve all people including those who did not vote for him/her or are not friends."
note: label truncated to 80 characters

. lab var new_c9 "Accepting a bribe in the course of ones duties is sometimes justified."

. lab var new_c10 "Most people in this village can be trusted."

. lab var new_c11 "On the whole, more educated people make better political leaders than the less educated do."
note: label truncated to 80 characters

. lab var new_c12 "On the whole, elders make better political leaders than the youth do."

.         
. gen new_c6r = 6- new_c6

. gen new_c7r = 6- new_c7 

. gen new_c9r = 6- new_c9

. alpha new_c1 new_c3 new_c8 new_c9r 

Test scale = mean(unstandardized items)

Average interitem covariance:     .9378221
Number of items in the scale:            4
Scale reliability coefficient:      0.7613

. 
. gen types = 0 if villager==1
(64 missing values generated)

. replace types = 1 if extrinsic_leader==0
(35 real changes made)

. replace types = 2 if extrinsic_leader==1
(29 real changes made)

. lab def villy1 0 "Villager" 1 "Intrinsic leader" 2 "Extrinsic leader", replace

. lab val types villy1

. 
. *graphical presentation
. preserve

. rename new_c1 norm1

. rename new_c3 norm2

. rename new_c8 norm3

. 
. 
. reshape long norm ,i(id) j(pr_id)
(note: j = 1 2 3)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                      448   ->    1344
Number of variables                 458   ->     457
j variable (3 values)                     ->   pr_id
xij variables:
                      norm1 norm2 norm3   ->   norm
-----------------------------------------------------------------------------

. label define pr1 1 "Group voting" 2 "Elections" 3 "Inclusive"

. label values pr_id pr1

. 
. cibar norm, over1(types) over2(pr_id) bargap(0) gap(80) barlabel(on) blpos(11) blgap(0.01) blfmt(%9.1f) graphopts(legend() xsize(4) ysize(2) yla(1(1)5)
>   ytitle("Mean") note("{bf: Group voting}='For important decisions members of a group should be allowed to vote.'" "{bf: Elections}='Democratic electio
> ns in this village ensure that the elected authorities act in the interest of their people.'" "{bf: Inclusive}='A leader hast to serve all people inclu
> ding those who did not vote for him/her or are not friends.'")) ciopts(lpattern(dash) lcolor(black))

. gr save "$working_ANALYSIS/results/intermediate/figure1_normative_expectations.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure1_normative_expectations.
> gph saved)

. gr export "$working_ANALYSIS/results/figures/figure1_normative_expectations.tif", replace width(3465)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure1_normative_expectations.tif w
> ritten in TIFF format)

. restore

. 
. ttest new_c1 if types!= 2, by(types)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
Villager |     384    4.117188    .0727191    1.424997    3.974209    4.260166
Intrinsi |      35    3.685714    .3142857    1.859339    3.047009     4.32442
---------+--------------------------------------------------------------------
combined |     419    4.081146     .071734    1.468359    3.940141     4.22215
---------+--------------------------------------------------------------------
    diff |            .4314732    .2587118               -.0770686     .940015
------------------------------------------------------------------------------
    diff = mean(Villager) - mean(Intrinsi)                        t =   1.6678
Ho: diff = 0                                     degrees of freedom =      417

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9519         Pr(|T| > |t|) = 0.0961          Pr(T > t) = 0.0481

. ranksum new_c1 if types!= 1, by(types)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

       types |      obs    rank sum    expected
-------------+---------------------------------
    Villager |      384       81341       79488
Extrinsic le |       29        4150        6003
-------------+---------------------------------
    combined |      413       85491       85491

unadjusted variance   384192.00
adjustment for ties  -110872.43
                     ----------
adjusted variance     273319.57

Ho: new_c1(types==Villager) = new_c1(types==Extrinsic leader)
             z =   3.544
    Prob > |z| =   0.0004

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

. ranksum new_c1 if types!= 0, by(types)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

       types |      obs    rank sum    expected
-------------+---------------------------------
Intrinsic le |       35      1259.5      1137.5
Extrinsic le |       29       820.5       942.5
-------------+---------------------------------
    combined |       64        2080        2080

unadjusted variance     5497.92
adjustment for ties    -1346.28
                     ----------
adjusted variance       4151.63

Ho: new_c1(types==Intrinsic leader) = new_c1(types==Extrinsic leader)
             z =   1.893
    Prob > |z| =   0.0583
    Exact Prob =   0.0707

. reg new_c1 i.types

      Source |       SS           df       MS      Number of obs   =       448
-------------+----------------------------------   F(2, 445)       =     11.23
       Model |  50.9697275         2  25.4848638   Prob > F        =    0.0000
    Residual |  1010.02804       445  2.26972593   R-squared       =    0.0480
-------------+----------------------------------   Adj R-squared   =    0.0438
       Total |  1060.99777       447   2.3735968   Root MSE        =    1.5066

-----------------------------------------------------------------------------------
           new_c1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |  -.4314732   .2660076    -1.62   0.106    -.9542605     .091314
Extrinsic leader  |  -1.324084    .290133    -4.56   0.000    -1.894285    -.753883
                  |
            _cons |   4.117188   .0768814    53.55   0.000     3.966092    4.268283
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    5.57
            Prob > F =    0.0187

. reg new_c3 i.types, vce(hc3)

Linear regression                               Number of obs     =        448
                                                F(2, 445)         =      19.56
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1286
                                                Root MSE          =     1.3309

-----------------------------------------------------------------------------------
                  |             Robust HC3
           new_c3 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |   -.652753   .3228877    -2.02   0.044    -1.287327   -.0181788
Extrinsic leader  |  -1.999551   .3337905    -5.99   0.000    -2.655552    -1.34355
                  |
            _cons |   4.309896   .0633192    68.07   0.000     4.185454    4.434338
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    8.74
            Prob > F =    0.0033

. reg new_c8 i.types, vce(hc3)

Linear regression                               Number of obs     =        448
                                                F(2, 445)         =      16.19
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1495
                                                Root MSE          =     1.2404

-----------------------------------------------------------------------------------
                  |             Robust HC3
           new_c8 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |  -.9443452   .3349403    -2.82   0.005    -1.602606    -.286084
Extrinsic leader  |  -1.917744   .3828851    -5.01   0.000    -2.670232   -1.165257
                  |
            _cons |   4.572917   .0551377    82.94   0.000     4.464554    4.681279
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    3.75
            Prob > F =    0.0535

. 
. 
. *normative expecation related to group voting by leader baseline choice
. reg new_c1 i.rule_base3 if villager==1, vce(hc3)

Linear regression                               Number of obs     =        384
                                                F(1, 382)         =       4.87
                                                Prob > F          =     0.0279
                                                R-squared         =     0.0087
                                                Root MSE          =     1.4207

------------------------------------------------------------------------------
             |             Robust HC3
      new_c1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
1.rule_base3 |   .3808081   .1725629     2.21   0.028     .0415161    .7201001
       _cons |   4.063636   .0807426    50.33   0.000     3.904881    4.222392
------------------------------------------------------------------------------

. 
. 
. 
. 
. *Figure 2.      Preference for democratic governance in study region
. clear

. use "$working_ANALYSIS/data/afro_r6.dta"

. keep if COUNTRY==22
(52,735 observations deleted)

. rename *, lower

. 
. 
. gen ohangwena= 0

. replace ohangwena = 1 if region == 588
(120 real changes made)

. lab def ohang 0 "Rest of Namibia" 1 "Ohangwena", replace

. lab val ohangwena ohang

. *SUPPORT FOR DEMOCRACY
. tab q30, nolab

       Q30. |
Support for |
  democracy |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        192       16.00       16.00
          2 |         96        8.00       24.00
          3 |        884       73.67       97.67
          9 |         28        2.33      100.00
------------+-----------------------------------
      Total |      1,200      100.00

. lab def democracy 1 "Does't matter for someone like me" 2 "Sometimes non-democratic preferable" 3 "Always democracy preferable", replace 

. lab val q30 democracy

. foreach x of varlist q30 q52b q52j q52k q68d q71a {
  2.         replace `x'=. if `x'==9
  3. }
(28 real changes made, 28 to missing)
(31 real changes made, 31 to missing)
(11 real changes made, 11 to missing)
(27 real changes made, 27 to missing)
(68 real changes made, 68 to missing)
(11 real changes made, 11 to missing)

. encode location_level_1, gen(constituency)

. gen demo_pref= 1 if q30==3
(316 missing values generated)

. replace demo_pref = 0 if q30<3
(288 real changes made)

. 
. ttest q52b, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,050    2.117143    .0287843    .9327182    2.060661    2.173624
Ohangwen |     119    2.327731    .0810391     .884032    2.167252    2.488211
---------+--------------------------------------------------------------------
combined |   1,169     2.13858    .0271916    .9296993     2.08523     2.19193
---------+--------------------------------------------------------------------
    diff |           -.2105882    .0897523               -.3866822   -.0344943
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =  -2.3463
Ho: diff = 0                                     degrees of freedom =     1167

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.0096         Pr(|T| > |t|) = 0.0191          Pr(T > t) = 0.9904

. ttest q52j, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,070    2.080374    .0272134     .890175    2.026976    2.133772
Ohangwen |     119     1.87395    .0822994    .8977809    1.710974    2.036925
---------+--------------------------------------------------------------------
combined |   1,189    2.059714    .0258893    .8927129     2.00892    2.110508
---------+--------------------------------------------------------------------
    diff |            .2064243    .0860936                .0375116    .3753369
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   2.3977
Ho: diff = 0                                     degrees of freedom =     1187

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9917         Pr(|T| > |t|) = 0.0167          Pr(T > t) = 0.0083

. ttest q52k, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,053      2.1415    .0276339    .8967179    2.087277    2.195724
Ohangwen |     120    2.008333    .0771479    .8451128    1.855573    2.161094
---------+--------------------------------------------------------------------
combined |   1,173    2.127877    .0260487    .8921436     2.07677    2.178984
---------+--------------------------------------------------------------------
    diff |            .1331671    .0859051                -.035378    .3017123
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   1.5502
Ho: diff = 0                                     degrees of freedom =     1171

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9393         Pr(|T| > |t|) = 0.1214          Pr(T > t) = 0.0607

. ttest q68d, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,030    2.976699    .0226438    .7267222    2.932266    3.021132
Ohangwen |     102    2.911765    .0871282    .8799521    2.738926    3.084604
---------+--------------------------------------------------------------------
combined |   1,132    2.970848    .0220421    .7416127      2.9276    3.014096
---------+--------------------------------------------------------------------
    diff |            .0649343    .0769905               -.0861261    .2159947
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   0.8434
Ho: diff = 0                                     degrees of freedom =     1130

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.8004         Pr(|T| > |t|) = 0.3992          Pr(T > t) = 0.1996

. ttest q71a, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,069    3.727783    .0394163    1.288739    3.650441    3.805125
Ohangwen |     120    3.391667     .130875    1.433664    3.132521    3.650812
---------+--------------------------------------------------------------------
combined |   1,189     3.69386    .0379148    1.307375    3.619473    3.768248
---------+--------------------------------------------------------------------
    diff |            .3361163    .1255415                .0898084    .5824242
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   2.6773
Ho: diff = 0                                     degrees of freedom =     1187

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9962         Pr(|T| > |t|) = 0.0075          Pr(T > t) = 0.0038

.  
. gen com_member = 0

. replace com_member = 1 if q19b==3 | q19b==2
(169 real changes made)

. 
. *Democracy is preferable to any other kind of government.
. gen study_sites = 0

. replace study_sites = 1 if ohangwena==1
(120 real changes made)

. replace study_sites = 2 if constituency==9 | constituency==43 | constituency==71
(40 real changes made)

. lab def studies 0 "Rest of Namibia (n=1058)" 1 "Rest of Ohangwena (n=76)" 2 "Study sites (n=38)", replace

. lab val study_sites studies

. catplot q30, over(study_sites) asyvars stack horizontal recast(bar) yla(0(20)100, nogrid) percent(study_sites) bargap(10) blabel(bar, format(%9.0f) pos
> (center)  gap(0.1)) title("Which of these three statements is closest to your own opinion?")  b1title("") legend(ring(1) pos(6) rows(3))

. gr save  "$working_ANALYSIS/results/intermediate/support_dem_namibia.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/support_dem_namibia.gph saved)

. gr export "$working_ANALYSIS/results/figures/afro_support_democracy.tif", replace width(4000)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/afro_support_democracy.tif written i
> n TIFF format)

. ranksum q30 if study_sites!=1, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Nami |     1058    581626.5      580313
Study sites  |       38     19529.5       20843
-------------+---------------------------------
    combined |     1096      601156      601156

unadjusted variance  3675315.67
adjustment for ties   -1.60e+06
                     ----------
adjusted variance    2073385.02

Ho: q30(study_~s==Rest of Namibia (n=1058)) = q30(study_~s==Study sites (n=38))
             z =   0.912
    Prob > |z| =   0.3617

. ranksum q30 if study_sites!=0, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Ohan |       76      4414.5        4370
Study sites  |       38      2140.5        2185
-------------+---------------------------------
    combined |      114        6555        6555

unadjusted variance    27676.67
adjustment for ties   -11049.14
                     ----------
adjusted variance      16627.52

Ho: q30(study_~s==Rest of Ohangwena (n=76)) = q30(study_~s==Study sites (n=38))
             z =   0.345
    Prob > |z| =   0.7300
    Exact Prob =   0.7819

. 
. reg q52b i.study_sites, vce(hc3)

Linear regression                               Number of obs     =      1,169
                                                F(2, 1166)        =      11.40
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0144
                                                Root MSE          =     .92378

-------------------------------------------------------------------------------------------
                          |             Robust HC3
                     q52b |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
--------------------------+----------------------------------------------------------------
              study_sites |
Rest of Ohangwena (n=76)  |   .4145027    .091302     4.54   0.000     .2353682    .5936372
      Study sites (n=38)  |  -.1921429   .1581376    -1.22   0.225    -.5024089    .1181232
                          |
                    _cons |   2.117143    .028798    73.52   0.000     2.060641    2.173645
-------------------------------------------------------------------------------------------

. ranksum q52b if study_sites!=1, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Nami |     1050      575205      572775
Study sites  |       40       19390       21820
-------------+---------------------------------
    combined |     1090      594595      594595

unadjusted variance  3818500.00
adjustment for ties  -454608.43
                     ----------
adjusted variance    3363891.57

Ho: q52b(study_~s==Rest of Namibia (n=1058)) = q52b(study_~s==Study sites (n=38))
             z =   1.325
    Prob > |z| =   0.1852

. ranksum q71a if study_sites!=1, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Nami |     1069      596168      593295
Study sites  |       40       19327       22200
-------------+---------------------------------
    combined |     1109      615495      615495

unadjusted variance  3955300.00
adjustment for ties  -359561.61
                     ----------
adjusted variance    3595738.39

Ho: q71a(study_~s==Rest of Namibia (n=1058)) = q71a(study_~s==Study sites (n=38))
             z =   1.515
    Prob > |z| =   0.1297

. 
. 
. 
. * Load cleaned dataset (long-format)
. clear

. use "$working_ANALYSIS/processed/analysis_long.dta"

. 
. *set panel
. xtset id decision
       panel variable:  id (strongly balanced)
        time variable:  decision, 1 to 6, but with gaps
                delta:  1 unit

. 
. 
. *Figure 4.      Average treatment effects of payment
. *Panel A: Main treatment effects
. tab rule if decision<2

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         41       64.06       64.06
Pseudo-democratic |         14       21.88       85.94
       Autocratic |          9       14.06      100.00
------------------+-----------------------------------
            Total |         64      100.00

. bys TL: tab rule if decision<2

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> TL = 0

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         18       56.25       56.25
Pseudo-democratic |          8       25.00       81.25
       Autocratic |          6       18.75      100.00
------------------+-----------------------------------
            Total |         32      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> TL = 1

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         23       71.88       71.88
Pseudo-democratic |          6       18.75       90.63
       Autocratic |          3        9.38      100.00
------------------+-----------------------------------
            Total |         32      100.00


. prtest dem1 if decision<2, by(TL)

Two-sample test of proportions                     0: Number of obs =       32
                                                   1: Number of obs =       32
------------------------------------------------------------------------------
       Group |       Mean   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
           0 |      .5625   .0876951                      .3906208    .7343792
           1 |     .71875   .0794804                      .5629712    .8745288
-------------+----------------------------------------------------------------
        diff |    -.15625   .1183536                     -.3882187    .0757187
             |  under Ho:   .1199543    -1.30   0.193
------------------------------------------------------------------------------
        diff = prop(0) - prop(1)                                  z =  -1.3026
    Ho: diff = 0

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(Z < z) = 0.0964         Pr(|Z| > |z|) = 0.1927          Pr(Z > z) = 0.9036

. 
. 
. * Small and Large bonus seperately
. eststo reg_dem1: xtprobit dem bonus_2 bonus_3 , vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -125.38709  
Iteration 1:   log pseudolikelihood = -125.38709  

Fitting full model:

rho =  0.0     log pseudolikelihood = -125.38709
rho =  0.1     log pseudolikelihood = -120.97002
rho =  0.2     log pseudolikelihood = -117.59758
rho =  0.3     log pseudolikelihood = -115.02704
rho =  0.4     log pseudolikelihood = -113.13299
rho =  0.5     log pseudolikelihood = -111.87369
rho =  0.6     log pseudolikelihood = -111.29283
rho =  0.7     log pseudolikelihood = -111.58207

Iteration 0:   log pseudolikelihood = -111.29429  
Iteration 1:   log pseudolikelihood = -110.64933  
Iteration 2:   log pseudolikelihood = -110.63147  
Iteration 3:   log pseudolikelihood = -110.63147  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       0.00
Log pseudolikelihood  = -110.63147              Prob > chi2       =     0.9999

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .0038466   .2964481     0.01   0.990     -.577181    .5848743
     bonus_3 |   .0038466   .2964481     0.01   0.990     -.577181    .5848743
       _cons |   .5973239   .2794914     2.14   0.033     .0495309    1.145117
-------------+----------------------------------------------------------------
    /lnsig2u |   .5734665   .4495206                     -.3075777    1.454511
-------------+----------------------------------------------------------------
     sigma_u |   1.332069   .2993962                      .8574531    2.069393
         rho |   .6395627   .1036245                      .4237061    .8106917
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dem=1), predict(pr)
dy/dx w.r.t. : bonus_2 bonus_3

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .0008635   .0665514     0.01   0.990    -.1295748    .1313019
     bonus_3 |   .0008635   .0665514     0.01   0.990    -.1295748    .1313019
------------------------------------------------------------------------------

. est store pr1

. eststo reg_fake1: xtprobit fake bonus_2 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =  -114.9984  
Iteration 1:   log pseudolikelihood = -113.09846  
Iteration 2:   log pseudolikelihood = -113.09531  
Iteration 3:   log pseudolikelihood = -113.09531  

Fitting full model:

rho =  0.0     log pseudolikelihood = -113.09531
rho =  0.1     log pseudolikelihood = -109.50028
rho =  0.2     log pseudolikelihood = -106.85965
rho =  0.3     log pseudolikelihood = -104.95446
rho =  0.4     log pseudolikelihood = -103.67659
rho =  0.5     log pseudolikelihood = -102.99775
rho =  0.6     log pseudolikelihood = -102.97063
rho =  0.7     log pseudolikelihood = -103.77414

Iteration 0:   log pseudolikelihood = -102.97557  
Iteration 1:   log pseudolikelihood = -101.54769  
Iteration 2:   log pseudolikelihood = -101.40994  
Iteration 3:   log pseudolikelihood = -101.40943  
Iteration 4:   log pseudolikelihood = -101.40943  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       3.97
Log pseudolikelihood  = -101.40943              Prob > chi2       =     0.2652

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .4614349   .3139349     1.47   0.142    -.1538663    1.076736
     bonus_3 |   .5327473   .3187649     1.67   0.095    -.0920204    1.157515
 bonus_order |   .3387109   .4152962     0.82   0.415    -.4752546    1.152676
       _cons |  -1.431821   .3832913    -3.74   0.000    -2.183058   -.6805835
-------------+----------------------------------------------------------------
    /lnsig2u |   .4616659   .4812244                     -.4815165    1.404848
-------------+----------------------------------------------------------------
     sigma_u |   1.259649   .3030868                      .7860316     2.01864
         rho |   .6134093   .1141167                      .3818941    .8029521
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(fake=1), predict(pr)
dy/dx w.r.t. : bonus_2 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .0961699    .063935     1.50   0.133    -.0291404    .2214802
     bonus_3 |   .1110324   .0645646     1.72   0.085    -.0155119    .2375767
 bonus_order |   .0705924   .0860772     0.82   0.412    -.0981159    .2393007
------------------------------------------------------------------------------

. est store pr2

. eststo reg_dic1: xtprobit dic bonus_2 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -50.134837  
Iteration 1:   log pseudolikelihood = -46.751419  
Iteration 2:   log pseudolikelihood = -46.668355  
Iteration 3:   log pseudolikelihood = -46.668238  
Iteration 4:   log pseudolikelihood = -46.668238  

Fitting full model:

rho =  0.0     log pseudolikelihood = -46.668238
rho =  0.1     log pseudolikelihood =  -46.34144
rho =  0.2     log pseudolikelihood = -46.487345

Iteration 0:   log pseudolikelihood =  -46.34144  
Iteration 1:   log pseudolikelihood = -46.224904  
Iteration 2:   log pseudolikelihood = -45.725694  
Iteration 3:   log pseudolikelihood = -45.716321  
Iteration 4:   log pseudolikelihood = -45.716168  
Iteration 5:   log pseudolikelihood = -45.716168  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       5.89
Log pseudolikelihood  = -45.716168              Prob > chi2       =     0.1171

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |  -.7685142   .3654187    -2.10   0.035    -1.484722   -.0523066
     bonus_3 |  -.9802238   .4762269    -2.06   0.040    -1.913611   -.0468363
 bonus_order |  -.3149328   .3841314    -0.82   0.412    -1.067817    .4379509
       _cons |  -1.164717   .3813613    -3.05   0.002    -1.912172   -.4172627
-------------+----------------------------------------------------------------
    /lnsig2u |   -.664432   .8165016                     -2.264746    .9358817
-------------+----------------------------------------------------------------
     sigma_u |   .7173324   .2928515                      .3222677    1.596703
         rho |   .3397447   .1831562                      .0940851     .718267
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dic=1), predict(pr)
dy/dx w.r.t. : bonus_2 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |  -.0804475   .0394257    -2.04   0.041    -.1577204   -.0031745
     bonus_3 |  -.1026091   .0485981    -2.11   0.035    -.1978595   -.0073586
 bonus_order |  -.0329669   .0402543    -0.82   0.413    -.1118639    .0459301
------------------------------------------------------------------------------

. est store pr3

. 
. *test small versus large bonus 
. xtprobit dem bonus_1 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -125.38709  
Iteration 1:   log pseudolikelihood = -125.13711  
Iteration 2:   log pseudolikelihood =  -125.1371  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -125.1371
rho =  0.1     log pseudolikelihood = -120.75301
rho =  0.2     log pseudolikelihood = -117.40806
rho =  0.3     log pseudolikelihood = -114.86156
rho =  0.4     log pseudolikelihood = -112.98925
rho =  0.5     log pseudolikelihood = -111.75008
rho =  0.6     log pseudolikelihood = -111.18782
rho =  0.7     log pseudolikelihood = -111.49319

Iteration 0:   log pseudolikelihood = -111.19027  
Iteration 1:   log pseudolikelihood =  -110.5521  
Iteration 2:   log pseudolikelihood = -110.53321  
Iteration 3:   log pseudolikelihood = -110.53321  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       0.20
Log pseudolikelihood  = -110.53321              Prob > chi2       =     0.9783

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.0040703   .2964191    -0.01   0.989    -.5850411    .5769005
     bonus_3 |  -.0004308   .2642776    -0.00   0.999    -.5184054    .5175438
 bonus_order |  -.1862215   .4213684    -0.44   0.659    -1.012088    .6396453
       _cons |   .6984892   .3495222     2.00   0.046     .0134383     1.38354
-------------+----------------------------------------------------------------
    /lnsig2u |   .5654265   .4499982                     -.3165538    1.447407
-------------+----------------------------------------------------------------
     sigma_u |   1.326725   .2985119                      .8536134    2.062056
         rho |   .6377072   .1039661                      .4215158     .809599
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dem=1), predict(pr)
dy/dx w.r.t. : bonus_1 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.0009149    .066629    -0.01   0.989    -.1315053    .1296755
     bonus_3 |  -.0000968   .0594032    -0.00   0.999     -.116525    .1163313
 bonus_order |  -.0418581   .0944824    -0.44   0.658    -.2270401     .143324
------------------------------------------------------------------------------

. xtprobit fake bonus_1 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =  -114.9984  
Iteration 1:   log pseudolikelihood = -113.09846  
Iteration 2:   log pseudolikelihood = -113.09531  
Iteration 3:   log pseudolikelihood = -113.09531  

Fitting full model:

rho =  0.0     log pseudolikelihood = -113.09531
rho =  0.1     log pseudolikelihood = -109.50028
rho =  0.2     log pseudolikelihood = -106.85965
rho =  0.3     log pseudolikelihood = -104.95446
rho =  0.4     log pseudolikelihood = -103.67659
rho =  0.5     log pseudolikelihood = -102.99775
rho =  0.6     log pseudolikelihood = -102.97063
rho =  0.7     log pseudolikelihood = -103.77414

Iteration 0:   log pseudolikelihood = -102.97557  
Iteration 1:   log pseudolikelihood = -101.54769  
Iteration 2:   log pseudolikelihood = -101.40994  
Iteration 3:   log pseudolikelihood = -101.40943  
Iteration 4:   log pseudolikelihood = -101.40943  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       3.97
Log pseudolikelihood  = -101.40943              Prob > chi2       =     0.2652

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.4614349   .3139349    -1.47   0.142    -1.076736    .1538663
     bonus_3 |   .0713124   .2771217     0.26   0.797    -.4718362     .614461
 bonus_order |   .3387109   .4152962     0.82   0.415    -.4752546    1.152676
       _cons |  -.9703856   .3528396    -2.75   0.006    -1.661939   -.2788326
-------------+----------------------------------------------------------------
    /lnsig2u |   .4616659   .4812244                     -.4815165    1.404848
-------------+----------------------------------------------------------------
     sigma_u |   1.259649   .3030868                      .7860316     2.01864
         rho |   .6134093   .1141167                      .3818941    .8029521
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(fake=1), predict(pr)
dy/dx w.r.t. : bonus_1 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.0961699    .063935    -1.50   0.133    -.2214802    .0291404
     bonus_3 |   .0148626   .0577308     0.26   0.797    -.0982878    .1280129
 bonus_order |   .0705924   .0860772     0.82   0.412    -.0981159    .2393007
------------------------------------------------------------------------------

. xtprobit dic bonus_1 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -50.134837  
Iteration 1:   log pseudolikelihood = -46.751419  
Iteration 2:   log pseudolikelihood = -46.668355  
Iteration 3:   log pseudolikelihood = -46.668238  
Iteration 4:   log pseudolikelihood = -46.668238  

Fitting full model:

rho =  0.0     log pseudolikelihood = -46.668238
rho =  0.1     log pseudolikelihood =  -46.34144
rho =  0.2     log pseudolikelihood = -46.487345

Iteration 0:   log pseudolikelihood =  -46.34144  
Iteration 1:   log pseudolikelihood = -46.224904  
Iteration 2:   log pseudolikelihood = -45.725694  
Iteration 3:   log pseudolikelihood = -45.716321  
Iteration 4:   log pseudolikelihood = -45.716168  
Iteration 5:   log pseudolikelihood = -45.716168  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       5.89
Log pseudolikelihood  = -45.716168              Prob > chi2       =     0.1171

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |   .7685142   .3654187     2.10   0.035     .0523066    1.484722
     bonus_3 |  -.2117097   .4085308    -0.52   0.604    -1.012415    .5889961
 bonus_order |  -.3149328   .3841314    -0.82   0.412    -1.067817    .4379509
       _cons |  -1.933231   .4224659    -4.58   0.000    -2.761249   -1.105213
-------------+----------------------------------------------------------------
    /lnsig2u |   -.664432   .8165016                     -2.264746    .9358817
-------------+----------------------------------------------------------------
     sigma_u |   .7173324   .2928515                      .3222677    1.596703
         rho |   .3397447   .1831562                      .0940851     .718267
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dic=1), predict(pr)
dy/dx w.r.t. : bonus_1 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |   .0804475   .0394257     2.04   0.041     .0031745    .1577204
     bonus_3 |  -.0221616   .0421551    -0.53   0.599    -.1047841    .0604609
 bonus_order |  -.0329669   .0402543    -0.82   0.413    -.1118639    .0459301
------------------------------------------------------------------------------

. 
. *pooled bonus
. eststo reg_dem2: xtprobit dem bonus bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -125.38709  
Iteration 1:   log pseudolikelihood = -125.13711  
Iteration 2:   log pseudolikelihood =  -125.1371  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -125.1371
rho =  0.1     log pseudolikelihood = -120.75302
rho =  0.2     log pseudolikelihood = -117.40806
rho =  0.3     log pseudolikelihood = -114.86156
rho =  0.4     log pseudolikelihood = -112.98925
rho =  0.5     log pseudolikelihood = -111.75008
rho =  0.6     log pseudolikelihood = -111.18782
rho =  0.7     log pseudolikelihood =  -111.4932

Iteration 0:   log pseudolikelihood = -111.19027  
Iteration 1:   log pseudolikelihood =  -110.5521  
Iteration 2:   log pseudolikelihood = -110.53321  
Iteration 3:   log pseudolikelihood = -110.53321  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       0.20
Log pseudolikelihood  = -110.53321              Prob > chi2       =     0.9069

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .0038548   .2653135     0.01   0.988      -.51615    .5238597
 bonus_order |  -.1862194   .4213702    -0.44   0.659     -1.01209    .6396511
       _cons |   .6944178   .3408885     2.04   0.042     .0262886    1.362547
-------------+----------------------------------------------------------------
    /lnsig2u |   .5654267   .4499981                     -.3165533    1.447407
-------------+----------------------------------------------------------------
     sigma_u |   1.326725   .2985118                      .8536136    2.062056
         rho |   .6377072   .1039661                       .421516     .809599
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dem=1), predict(pr)
dy/dx w.r.t. : bonus bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .0008665   .0596371     0.01   0.988    -.1160201    .1177531
 bonus_order |  -.0418576   .0944827    -0.44   0.658    -.2270403    .1433252
------------------------------------------------------------------------------

. est store pr4

. eststo reg_fake2: xtprobit fake bonus bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =  -114.9984  
Iteration 1:   log pseudolikelihood = -113.11824  
Iteration 2:   log pseudolikelihood = -113.11513  
Iteration 3:   log pseudolikelihood = -113.11513  

Fitting full model:

rho =  0.0     log pseudolikelihood = -113.11513
rho =  0.1     log pseudolikelihood = -109.52127
rho =  0.2     log pseudolikelihood = -106.88185
rho =  0.3     log pseudolikelihood = -104.97786
rho =  0.4     log pseudolikelihood =  -103.7012
rho =  0.5     log pseudolikelihood = -103.02356
rho =  0.6     log pseudolikelihood = -102.99767
rho =  0.7     log pseudolikelihood = -103.80249

Iteration 0:   log pseudolikelihood = -103.00256  
Iteration 1:   log pseudolikelihood = -101.57872  
Iteration 2:   log pseudolikelihood = -101.44091  
Iteration 3:   log pseudolikelihood = -101.44039  
Iteration 4:   log pseudolikelihood = -101.44039  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       3.88
Log pseudolikelihood  = -101.44039              Prob > chi2       =     0.1435

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .4971642   .2842203     1.75   0.080    -.0598972    1.054226
 bonus_order |   .3385349   .4151405     0.82   0.415    -.4751255    1.152195
       _cons |  -1.431149   .3832357    -3.73   0.000    -2.182278   -.6800211
-------------+----------------------------------------------------------------
    /lnsig2u |   .4601208    .481087                     -.4827923    1.403034
-------------+----------------------------------------------------------------
     sigma_u |   1.258676   .3027663                      .7855304     2.01681
         rho |   .6130428   .1141241                       .381593    .8026649
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(fake=1), predict(pr)
dy/dx w.r.t. : bonus bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .1036855   .0574167     1.81   0.071    -.0088492    .2162201
 bonus_order |   .0706027   .0860697     0.82   0.412    -.0980907    .2392962
------------------------------------------------------------------------------

. est store pr5

. eststo reg_dic2: xtprobit dic bonus bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -50.134837  
Iteration 1:   log pseudolikelihood = -46.837592  
Iteration 2:   log pseudolikelihood = -46.766968  
Iteration 3:   log pseudolikelihood =  -46.76692  
Iteration 4:   log pseudolikelihood =  -46.76692  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -46.76692
rho =  0.1     log pseudolikelihood = -46.438292
rho =  0.2     log pseudolikelihood = -46.586174

Iteration 0:   log pseudolikelihood = -46.438292  
Iteration 1:   log pseudolikelihood = -46.303056  
Iteration 2:   log pseudolikelihood = -45.823896  
Iteration 3:   log pseudolikelihood = -45.814007  
Iteration 4:   log pseudolikelihood = -45.813838  
Iteration 5:   log pseudolikelihood = -45.813838  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       6.02
Log pseudolikelihood  = -45.813838              Prob > chi2       =     0.0493

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.8653539   .3619556    -2.39   0.017    -1.574774   -.1559341
 bonus_order |  -.3153426   .3830241    -0.82   0.410    -1.066056    .4353707
       _cons |  -1.162901   .3801173    -3.06   0.002    -1.907917   -.4178845
-------------+----------------------------------------------------------------
    /lnsig2u |  -.6719679   .8021689                      -2.24419    .9002543
-------------+----------------------------------------------------------------
     sigma_u |   .7146346   .2866288                      .3255969    1.568512
         rho |   .3380563   .1795048                      .0958518    .7110018
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dic=1), predict(pr)
dy/dx w.r.t. : bonus bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.0908287   .0383611    -2.37   0.018     -.166015   -.0156423
 bonus_order |  -.0330988   .0403304    -0.82   0.412    -.1121449    .0459473
------------------------------------------------------------------------------

. est store pr6

. 
. 
. 
. *plot marginal effects for bonus treatment
. coefplot (pr1, offset(0.2) msymbol(D)) (pr2, offset(0) msymbol(S)) (pr3, offset(-0.2) msymbol(O)) (pr4, offset(0.2) msymbol(D) mcolor("100 143 255") ci
> opts(lwidth(0.3 1) lcolor("100 143 255*.8" "100 143 255*.2")  recast(rcap))) (pr5, offset(0) msymbol(S) mcolor("120 94 240") ciopts(lwidth(0.3 1) color
> ("120 94 240*.8" "120 94 240*.2")  recast(rcap)))  (pr6, offset(-0.2) msymbol(O) mcolor("220 38 127") ciopts(lwidth(0.3 1) color("220 38 127*.8" "220 3
> 8 127*.2")  recast(rcap))), keep(bonus_2 bonus_3 bonus) coeflabels(bonus = "Pooled Bonus" bonus_2 = "Small bonus" bonus_3="Large bonus") xline(0, lpatt
> ern(dash) lcolor(gs3)) xtitle("Regression estimated impact relative to baseline in pp") msize(3pt) xla(-0.3(0.1)0.3, nogrid) grid(none) levels(95 90) c
> iopts(lwidth(0.3 1) lcolor(*.8 *.2) recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", "") )))  mlabsize(7pt)  mlabp
> osition(12) mlabgap(-0.1)  legend(order(3 "Democratic" 6 "Pseudo-democratic" 9 "Autocratic") pos(6) ring(1) rows(1) bmargin(small)) graphregion(margin(
> tiny))  xsize(3.465) ysize(2) scale(1.2)
(note:  named style medthin not found in class linestyle, default attributes used)

. gr save "$working_ANALYSIS/results/intermediate/figure2.gph", replace 
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure2.gph saved)

. gr export "$working_ANALYSIS/results/figures/figure2.tif", replace width(4000)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure2.tif written in TIFF format)

. 
. 
. *Table 2.       Observed crowding effects of conditional monetary incentives in the experiment.
. *created in word, descriptives are calculated here
. gen type=0

. replace type=1 if rule_base!=1 & extrinsic==0
(36 real changes made)

. replace type=2 if rule_base!=1 & extrinsic==1
(33 real changes made)

. replace type=3 if rule_base==1 & extrinsic==0
(69 real changes made)

. replace type=4 if rule_base==1 & extrinsic==1
(54 real changes made)

. lab def typo 1 "Box I" 2 "Box III" 3 "Box II" 4 "Box IV", replace

. lab val type typo

. 
. tab rule type if round==2, column
round not found
r(111);

end of do-file
r(111);

end of do-file

r(111);

. do "C:\Users\istei\AppData\Local\Temp\STD3f80_000000.tmp"

. do "$working_ANALYSIS/scripts/02_generate.do"

. *--------------------------------------------------------------------------------------
. * SCRIPT: 02_generate.do
. * PURPOSE: generates additional variables used in the analysis
. *--------------------------------------------------------------------------------------
. 
. 
. 
. clear

. use "$working_ANALYSIS\processed\data_clean.dta"

. 
. // GAME 1: PROCEDURAL FAIRNESS
. 
. rename rule_1 rule1

. rename rule_2 rule2

. rename rule_3 rule3

. rename rule_4 rule4

. rename rule_bonus_1 rule5

. rename rule_bonus_2 rule6

. 
. rename vote_1 vote1

. rename vote_2 vote2

. rename vote_3 vote3

. rename vote_4 vote4

. rename vote_bonus_1 vote5

. rename vote_bonus2 vote6

. 
. rename majority_1 majority1

. rename majority_2 majority2

. rename majority_3 majority3

. rename majority_4 majority4

. rename majority_bonus1 majority5

. rename majority_bonus2 majority6

. 
. 
. // Create dummies for democratic and autocratic choices
. *democratic
. gen dem1=0

. replace dem1=1 if rule1==1
(41 real changes made)

. gen dem2=0

. replace dem2=1 if rule2==1
(39 real changes made)

. gen dem3=0

. replace dem3=1 if rule3==1
(44 real changes made)

. gen dem4=0

. replace dem4=1 if rule4==1
(37 real changes made)

. gen dem5=0

. replace dem4=1 if rule5==1
(10 real changes made)

. gen dem6=0

. replace dem4=1 if rule6==1
(5 real changes made)

. egen dem7 = rowmean(dem1 dem2 dem3 dem4)

. 
. *dictator
. gen dic1=0

. replace dic1=1 if rule1==2
(9 real changes made)

. gen dic2=0

. replace dic2=1 if rule2==2
(12 real changes made)

. gen dic3=0

. replace dic3=1 if rule3==2
(7 real changes made)

. gen dic4=0

. replace dic4=1 if rule4==2
(7 real changes made)

. gen dic5=0

. replace dic5=1 if rule5==2
(3 real changes made)

. gen dic6=0

. replace dic6=1 if rule6==2
(2 real changes made)

. 
. *pseudo-democratic
. gen fake1=0

. replace fake1=1 if rule1==3
(14 real changes made)

. gen fake2=0

. replace fake2=1 if rule2==3
(13 real changes made)

. gen fake3=0

. replace fake3=1 if rule3==3
(13 real changes made)

. gen fake4=0

. replace fake4=1 if rule4==3
(20 real changes made)

. gen fake5=0

. replace fake5=1 if rule5==3
(20 real changes made)

. gen fake6=0

. replace fake6=1 if rule6==3
(21 real changes made)

. 
. replace rule1=1 if dem1==1
(0 real changes made)

. replace rule1=2 if fake1==1
(14 real changes made)

. replace rule1=3 if dic1==1
(9 real changes made)

. replace rule2=1 if dem2==1
(0 real changes made)

. replace rule2=2 if fake2==1
(13 real changes made)

. replace rule2=3 if dic2==1
(12 real changes made)

. replace rule3=1 if dem3==1
(0 real changes made)

. replace rule3=2 if fake4==1
(17 real changes made)

. replace rule3=3 if dic4==1
(4 real changes made)

. replace rule4=1 if dem4==1
(15 real changes made)

. replace rule4=2 if fake4==1
(20 real changes made)

. replace rule4=3 if dic4==1
(7 real changes made)

. replace rule5=1 if dem5==1
(0 real changes made)

. replace rule5=2 if fake5==1
(20 real changes made)

. replace rule5=3 if dic5==1
(3 real changes made)

. replace rule6=1 if dem6==1
(0 real changes made)

. replace rule6=2 if fake6==1
(21 real changes made)

. replace rule6=3 if dic6==1
(2 real changes made)

. 
. *subsample autocratic rule choices
. gen pseudo1=0

. replace pseudo1=1 if rule1==3
(9 real changes made)

. replace pseudo1=. if rule1==1
(41 real changes made, 41 to missing)

. gen pseudo2=0

. replace pseudo2=1 if rule2==3
(12 real changes made)

. replace pseudo2=. if rule2==1
(39 real changes made, 39 to missing)

. gen pseudo3=0

. replace pseudo3=1 if rule3==3
(11 real changes made)

. replace pseudo3=. if rule3==1
(31 real changes made, 31 to missing)

. gen pseudo4=0

. replace pseudo4=1 if rule4==3
(7 real changes made)

. replace pseudo4=. if rule4==1
(37 real changes made, 37 to missing)

. egen pseudo_all = rowmean(pseudo1 pseudo2 pseudo3 pseudo4)
(25 missing values generated)

. 
. *same rule across all three rounds
. gen stable_rule=0

. replace stable_rule=1 if rule1==rule5==rule6
(30 real changes made)

. 
. *game1_group
. *devide each village into two groups of game 1: TL or DEL (13=TL, 14=DEL)?
. gen game1_group = 13

. replace game1_group =14 if session_id==1 | session_id==2 | session_id==5 | session_id==6 | session_id==9 | session_id==10 | session_id==14
(224 real changes made)

. order game1_group, before(vote1)

. 
. *villager_preference1
. *now the villager preferences, i.e. majority without leader (6 villager per group, a draw is therefore possible)
. * villager_preference1 ("A", "B" or "draw") gives the preferences of the six villager (without leader) in the first decision of game 1
. egen count_A = total(vote1==1) if id>64, by(village game1_group)
(64 missing values generated)

. order count_A, after(vote1)

. 
. replace count_A = count_A[_n-1] if session_id==13
(0 real changes made)

. replace count_A = count_A[_n-4] if session_id==14
(0 real changes made)

. 
. gen villager_preference1="A"

. replace villager_preference1 = "B" if count_A<3
(276 real changes made)

. replace villager_preference1 = "draw" if count_A==3
variable villager_preference1 was str1 now str4
(72 real changes made)

. order villager_preference1, after(vote1)

. label variable villager_preference "majority vote of 6 villagers over distribution A and B"

. 
. 
. drop count_A

. 
. *Bonus order
. gen bonus_order=. if id >64
(448 missing values generated)

. replace bonus_order=1 if  randomization<7
(38 real changes made)

. replace bonus_order=0 if  randomization>6 
(410 real changes made)

. label def bonus_order 1 "Small first" 0 "Large first", replace

. lab val bonus_order bonus_order

. 
. *Identifier for first bonus that was offered to leaders
. gen rule_bonus_first = rule5 if bonus_order==1
(414 missing values generated)

. replace rule_bonus_first = rule6 if bonus_order==0
(30 real changes made)

. gen rule_bonus_second = rule5 if bonus_order==0
(418 missing values generated)

. replace rule_bonus_second = rule6 if bonus_order==1
(34 real changes made)

. 
. *New variable to identify baseline rule choices
. gen rule_base=rule1
(384 missing values generated)

. lab def rulebasic 1 "Base: Democratic" 2 "Base: Pseudo" 3 "Base: Autocratic", replace

. lab val rule_base rulebasic

. bysort village game1_group: egen group_rule_base = mean(rule_base)

. lab val group_rule_base rulebasic

. tab group_rule_base, gen(rule_base)

 group_rule_base |      Freq.     Percent        Cum.
-----------------+-----------------------------------
Base: Democratic |        287       64.06       64.06
    Base: Pseudo |         98       21.88       85.94
Base: Autocratic |         63       14.06      100.00
-----------------+-----------------------------------
           Total |        448      100.00

. 
. * label rule choices consistently
. lab def rule 1 "Democratic" 2 "Pseudo-democratic" 3 "Autocratic" , replace

. foreach x of varlist rule1 rule5 rule6 rule_bonus_first rule_bonus_second {
  2.         lab val `x' rule
  3.         }

. 
. *payoff1, payoff5, payoff6
. *what do these villagers get?
. *Basic
. gen payoff1 = 0 if id<65
(384 missing values generated)

. replace payoff1 = 1 if (id<65) & ((rule1==1 & majority1=="B") | (rule1!=1 & vote1==2))
(41 real changes made)

. label variable payoff1 "distribution A or B that is paid to the group in decision 1"

. 
. *Small Bonus
. gen payoff5 = 0 if id<65
(384 missing values generated)

. replace payoff5 = 1 if (id<65) & ((rule5==1 & majority5=="B") | (rule5!=1 & vote5==2))
(40 real changes made)

. label variable payoff5 "distribution A or B that is paid to the group in small bonus"

. 
. *Large Bonus
. gen payoff6 = 0 if id<65
(384 missing values generated)

. replace payoff6 = 1 if (id<65) & ((rule6==1 & majority6=="B") | (rule6!=1 & vote6==2))
(42 real changes made)

. label variable payoff6 "distribution A or B that is paid to the group in large bonus"

. 
. lab def payoff_lab 0 "A" 1 "B"

. foreach var of varlist payoff1 payoff5 payoff6 {
  2.         lab val `var' payoff_lab
  3.         }

.         
. order payoff1 payoff5 payoff6, after(villager_preference1)

. gsort village game1_group -session_id

. 
. by village game1_group: replace payoff1 = payoff1[_n-1] if missing(payoff1)
(384 real changes made)

. by village game1_group: replace payoff5 = payoff5[_n-1] if missing(payoff5)
(384 real changes made)

. by village game1_group: replace payoff6 = payoff6[_n-1] if missing(payoff6)
(384 real changes made)

. 
. sort village session_id

. 
. 
. 
. // Leadertypes based on baseline stage 1 & stage 2 decisions
. gen true_democrat=0

. replace true_democrat=1 if rule1==1 
(41 real changes made)

. gen pseudo_democrat=0

. replace pseudo_democrat=1 if rule1==2 & vote1==1
(9 real changes made)

. gen paternalistic=0

. replace paternalistic=1 if rule1==2 & vote1==2
(5 real changes made)

. gen dictator=0

. replace dictator=1 if rule1==3 & vote1==1
(6 real changes made)

. gen benevolent_dictator=0

. replace benevolent_dictator=1 if rule1==3 & vote1==2
(3 real changes made)

. 
. gen leader_type=1 if true_democrat==1
(407 missing values generated)

. replace leader_type=2 if pseudo_democrat==1
(9 real changes made)

. replace leader_type=3 if paternalistic==1
(5 real changes made)

. replace leader_type=4 if dictator==1
(6 real changes made)

. replace leader_type=5 if benevolent_dictator==1
(3 real changes made)

. lab def lab_types 1 "True-democrat" 2 "Pseudo-democrat" 3 "Paternalist" 4 "Autocrat" 5 "Benevolent-Autocrat"

. lab val leader_type lab_types

. 
. 
. bysort village game1_group: egen group_leader_type = mean(leader_type)

. lab val group_leader_type lab_types

. 
. lab def vote_lab 1 "Distribution A" 2 "Distribution B"

. lab val vote1 vote_lab

. tab group_leader_type, gen(leader_type)

  group_leader_type |      Freq.     Percent        Cum.
--------------------+-----------------------------------
      True-democrat |        287       64.06       64.06
    Pseudo-democrat |         63       14.06       78.13
        Paternalist |         35        7.81       85.94
           Autocrat |         42        9.38       95.31
Benevolent-Autocrat |         21        4.69      100.00
--------------------+-----------------------------------
              Total |        448      100.00

. 
. 
. 
. ************************************
. *** 1C: Preference game (Game 2)
. 
. gen social_type=6 

. replace social_type = 1 if decision1==1 & decision2==1 & decision3==1
(228 real changes made)

. replace social_type = 2 if decision1==1 & decision2==1 & decision3==2
(51 real changes made)

. replace social_type = 3 if decision1==1 & decision2==2 & decision3==1
(61 real changes made)

. replace social_type = 4 if decision1==1 & decision2==2 & decision3==2
(32 real changes made)

. replace social_type = 5 if decision1==2 & decision2==1 & decision3==2
(24 real changes made)

. 
. gen social_type2 =.
(448 missing values generated)

. replace social_type2=1 if (social_type==1 | social_type==2)
(279 real changes made)

. replace social_type2=2 if (social_type==3 | social_type==4)
(93 real changes made)

. replace social_type2=3 if social_type==5
(24 real changes made)

. replace social_type2=4 if social_type2==. & social_type==6
(52 real changes made)

. 
. # delimit;
delimiter now ;
. label define social
> 1       "Strongly egalitarian"
> 2       "Weakly egalitarian"
> 3   "Strongly generous"
> 4       "Weakly generous"
> 5       "Spiteful"
> 6       "Ambiguous";

. label define social2
> 1       "Egalitarian"
> 2       "Generous"
> 3   "Spiteful"
> 4       "Ambiguous";

. # delimit cr
delimiter now cr
. label values  social_type social

. label values  social_type2 social2

. 
. 
. 
. // Gen dummy for no education
. gen no_educ = 0 if education>0 & education!=.
(44 missing values generated)

. replace no_educ =1 if education==0
(41 real changes made)

. 
. // age-squared
. gen age_sq = age*age
(1 missing value generated)

. 
. // intrinsic motivation - binary variable:
. * Based on the definition of Frey & Oberholzer (1997) ->
. * intrinsic(=1): one likes to do them or because the individual derives some satisfaction from doing  his or her duty
. *extrinsic(=0): activated from the outside
. * if there are both intrinsic and extrinsic motives mentioned, the variable takes the value 1 - there can be some intrinsic motives crowded out by the 
> bonus paymen 
. 
. gen motivation=.
(448 missing values generated)

. replace motivation=0 if f6=="accepted because people but trust in her"
(1 real change made)

. replace motivation=0 if f6=="just accepted what the villagers voted."
(1 real change made)

. replace motivation=1 if f6=="to help the community mantain water"
(1 real change made)

. replace motivation=1 if f6=="because I believe that I was born with characteristic of a leader."
(1 real change made)

. replace motivation=0 if f6=="i just accepted because the villagers appointed me"
(1 real change made)

. replace motivation=1 if f6=="to lead the community. A calling from god. Care for the community"
(1 real change made)

. replace motivation=1 if f6=="to train the committee members to be in goood communication / relationship with tap users"
(1 real change made)

. replace motivation=1 if f6=="accepted the task attributed to him and help his community"
(1 real change made)

. replace motivation=0 if f6=="just accepted the vote"
(2 real changes made)

. replace motivation=1 if f6=="Assist and meet the needs of the villagers"
(1 real change made)

. replace motivation=1 if f6=="to care and protect the use of water"
(1 real change made)

. replace motivation=0 if f6=="he was chosen and just accepted"
(1 real change made)

. replace motivation=0 if f6=="accepted responsibility"
(1 real change made)

. replace motivation=1 if f6=="to lead the community"
(2 real changes made)

. replace motivation=1 if f6=="volunteer to help bring water to the village, help the community"
(1 real change made)

. replace motivation=1 if f6=="to lead the community"
(0 real changes made)

. replace motivation=1 if f6=="help his community"
(1 real change made)

. replace motivation=0 if f6=="was obliged, to lead the village, to bring development to the village"
(1 real change made)

. replace motivation=1 if f6=="guarantee availability of water"
(1 real change made)

. replace motivation=0 if f6=="Accepted because it is a calling by God. Did not want to disappoint the father and villagers."
(1 real change made)

. replace motivation=1 if f6=="to help the community, to keep or take care of the water pipes"
(1 real change made)

. replace motivation=1 if f6=="to fight for the good of the community. To bring it up to standard."
(1 real change made)

. replace motivation=0 if f6=="because there was a lack of people to be in the committee"
(1 real change made)

. replace motivation=0 if f6=="accepted because there was no on else to care and protect the community and it's members"
(1 real change made)

. replace motivation=1 if f6=="arrange meetings, have better / good communication with village, report to senior headman"
(1 real change made)

. replace motivation=0 if f6=="I just accepted the position, because the villagers wanted me to lead them."
(1 real change made)

. replace motivation=1 if f6=="to take care of the water tap"
(1 real change made)

. replace motivation=1 if f6=="lead the community. Care for the community"
(1 real change made)

. replace motivation=1 if f6=="keep water in the community"
(1 real change made)

. replace motivation=0 if f6=="There was no election. Just accepted to be the headman as my father appointed me."
(1 real change made)

. replace motivation=1 if f6=="to lead the community, to take of the water tap"
(1 real change made)

. replace motivation=0 if f6=="just accepted a responsibility given by elders and villagers."
(1 real change made)

. replace motivation=1 if f6=="serving the community, take care of water related needs"
(1 real change made)

. replace motivation=1 if f6=="to lead the community as given by god."
(1 real change made)

. replace motivation=1 if f6=="care and protect the tap, sustain water"
(1 real change made)

. replace motivation=0 if f6=="Just accepted because my late father appointed me and also the villagers trusted/trust me to lead them"
(1 real change made)

. replace motivation=0 if f6=="was appointed to be one of the candidates, just accepted the result of the vote"
(1 real change made)

. replace motivation=0 if f6=="just accepted because people trusted me."
(1 real change made)

. replace motivation=1 if f6=="was given a responsibility and accepted, wanted to help bring private taps to village"
(1 real change made)

. replace motivation=0 if f6=="took over family duties. Was not willing to give the village away to a stranger or another family."
(1 real change made)

. replace motivation=1 if f6=="to keep taps in good condition, to arrange meetings, wotk with community members"
(1 real change made)

. replace motivation=0 if f6=="just accepted the responsibility, because the villagers accepted me as their headman."
(1 real change made)

. replace motivation=0 if f6=="just accepted, because the community voted him"
(1 real change made)

. replace motivation=1 if f6=="to lead the nation. To care for community members. Help provide for community members."
(1 real change made)

. replace motivation=0 if f6=="Accepted villagers decision"
(1 real change made)

. replace motivation=0 if f6=="I just accepted as a calling from God."
(1 real change made)

. replace motivation=1 if f6=="to help develop the village"
(1 real change made)

. replace motivation=0 if f6=="just accepted to lead the villagers, because they appointed/elected me."
(1 real change made)

. replace motivation=1 if f6=="to assist the community, accepted a responsibility given to him by the villagers, help develop the community"
(1 real change made)

. replace motivation=0 if f6=="i just accepted"
(1 real change made)

. replace motivation=1 if f6=="to help develop the village, improve water supply"
(1 real change made)

. replace motivation=0 if f6=="There was no motive, just accepted."
(1 real change made)

. replace motivation=0 if f6=="just accepted the vote"
(0 real changes made)

. replace motivation=1 if f6=="to lead the community. To help develop the community. To help improve people's/community member's lives."
(1 real change made)

. replace motivation=1 if f6=="help out the villagers without expectations"
(1 real change made)

. replace motivation=0 if f6=="" /*leader gave no answer - we set his intrinsic-motivation to 0*/
(385 real changes made)

. replace motivation=0 if f6=="just accepted votes & didnt volunteer to be a candidate"
(1 real change made)

. replace motivation=1 if f6=="A God given gift/role. Did not want to disappoint community members. Lead the community."
(1 real change made)

. replace motivation=0 if f6=="just accepted, because the people voted me"
(1 real change made)

. replace motivation=1 if f6=="God given responsibility as well as responsibility from family and community members. Lead and care for the community."
(1 real change made)

. replace motivation=1 if f6=="to care for taps and the community"
(1 real change made)

. replace motivation=0 if f6=="I just accepted the responsibility"
(1 real change made)

. replace motivation=1 if f6=="wanted to bring taps to the village, especially for drinking water purposes, used to drink from wells"
(1 real change made)

. replace motivation=1 if f6=="assist every community member"
(1 real change made)

. replace motivation=. if id>64
(384 real changes made, 384 to missing)

. lab def motivation 0 "extrinsic" 1 "intrinsic", replace

. lab val motivation motivation

. gen extrinsic_leader = 1 if motivation==0
(419 missing values generated)

. replace extrinsic_leader = 0 if motivation==1
(35 real changes made)

. lab def extrensic 0 "Intrinsic" 1 "Extrinsic", replace

. lab val extrinsic_leader extrensic

. bysort village game1_group: egen group_extrinsic_leader = mean(extrinsic_leader)

. 
. 
. // PERCEPTION OF LEADERS PERFORMANCE BY VILLAGERS
. lab def agree1 1 "strongly disagree" 2 "disagree a little" 3 "neutral" 4 "agree a little" 5 "strongly agree"

. 
. * synchronize scales
. foreach v of varlist b12satisfactionTL b10b {
  2.         replace `v'=5 if `v'==.
  3.         local i = `i' + 1
  4.         gen e_`i'=1 if `v'==4
  5.         replace e_`i'=2 if `v'==3
  6.         replace e_`i'=3 if `v'==5
  7.         replace e_`i'=4 if `v'==2
  8.         replace e_`i'=5 if `v'==1
  9.         replace e_`i'=. if villager==0
 10.         lab val e_`i' agree1
 11.         }
(69 real changes made)
(446 missing values generated)
(1 real change made)
(73 real changes made)
(35 real changes made)
(337 real changes made)
(64 real changes made, 64 to missing)
(69 real changes made)
(444 missing values generated)
(5 real changes made)
(99 real changes made)
(41 real changes made)
(299 real changes made)
(64 real changes made, 64 to missing)

. 
. foreach v of varlist b11g b8b b11f b8c b11h b8d {
  2.         replace `v'=5 if `v'==.
  3.         local i = `i' + 1
  4.         gen e_`i'=1 if `v'==1
  5.         replace e_`i'=2 if `v'==2
  6.         replace e_`i'=3 if `v'==5
  7.         replace e_`i'=4 if `v'==3
  8.         replace e_`i'=5 if `v'==4
  9.         replace e_`i'=. if villager==0
 10.         lab val e_`i' agree1
 11.         }
(91 real changes made)
(424 missing values generated)
(8 real changes made)
(91 real changes made)
(19 real changes made)
(306 real changes made)
(64 real changes made, 64 to missing)
(131 real changes made)
(426 missing values generated)
(13 real changes made)
(131 real changes made)
(30 real changes made)
(252 real changes made)
(64 real changes made, 64 to missing)
(98 real changes made)
(431 missing values generated)
(6 real changes made)
(98 real changes made)
(25 real changes made)
(302 real changes made)
(64 real changes made, 64 to missing)
(208 real changes made)
(391 missing values generated)
(11 real changes made)
(208 real changes made)
(24 real changes made)
(148 real changes made)
(64 real changes made, 64 to missing)
(152 real changes made)
(193 missing values generated)
(10 real changes made)
(152 real changes made)
(6 real changes made)
(25 real changes made)
(64 real changes made, 64 to missing)
(185 real changes made)
(232 missing values generated)
(8 real changes made)
(185 real changes made)
(8 real changes made)
(31 real changes made)
(64 real changes made, 64 to missing)

. 
. *TL specific satisfaction items
. foreach v of varlist b11b b11c b11d b11e b11f b11g b11h {
  2.         replace `v'=5 if `v'==.
  3.         local j = `j' + 1
  4.         gen opinionTL_`j'=1 if `v'==1
  5.         replace opinionTL_`j'=2 if `v'==2
  6.         replace opinionTL_`j'=3 if `v'==5
  7.         replace opinionTL_`j'=4 if `v'==3
  8.         replace opinionTL_`j'=5 if `v'==4
  9.         replace opinionTL_`j'=. if villager==0
 10.         lab val opinionTL_`j' agree1
 11.         }
(207 real changes made)
(245 missing values generated)
(5 real changes made)
(207 real changes made)
(9 real changes made)
(24 real changes made)
(64 real changes made, 64 to missing)
(116 real changes made)
(418 missing values generated)
(8 real changes made)
(116 real changes made)
(25 real changes made)
(269 real changes made)
(64 real changes made, 64 to missing)
(84 real changes made)
(433 missing values generated)
(6 real changes made)
(84 real changes made)
(23 real changes made)
(320 real changes made)
(64 real changes made, 64 to missing)
(126 real changes made)
(421 missing values generated)
(7 real changes made)
(126 real changes made)
(19 real changes made)
(269 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(431 missing values generated)
(6 real changes made)
(98 real changes made)
(25 real changes made)
(302 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(424 missing values generated)
(8 real changes made)
(91 real changes made)
(19 real changes made)
(306 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(193 missing values generated)
(10 real changes made)
(152 real changes made)
(6 real changes made)
(25 real changes made)
(64 real changes made, 64 to missing)

. *scale all items so that higher agreement indicates higher satisfaction
. gen opinionTL_1reverse = 6-opinionTL_1
(64 missing values generated)

. gen opinionTL_7reverse = 6-opinionTL_7
(64 missing values generated)

. 
. alpha e_1 opinionTL_1reverse opinionTL_2 opinionTL_3 opinionTL_4 opinionTL_5 opinionTL_6 opinionTL_7reverse 

Test scale = mean(unstandardized items)

Average interitem covariance:     .3230128
Number of items in the scale:            8
Scale reliability coefficient:      0.7473

. * alpha=0.75 pretty reliable scale, can reduce dimensionality
. *start with simple additative index, 
. egen mean_satisfactionTL = rowmean (e_1 opinionTL_1reverse opinionTL_2 opinionTL_3 opinionTL_4 opinionTL_5 opinionTL_6 opinionTL_7)
(64 missing values generated)

. 
. *DEL specific satisfaction  items
. foreach v of varlist b8a b8b b8c b8d {
  2.         replace `v'=5 if `v'==.
  3.         local k = `k' + 1
  4.         gen opinionDEL_`k'=1 if `v'==1
  5.         replace opinionDEL_`k'=2 if `v'==2
  6.         replace opinionDEL_`k'=3 if `v'==5
  7.         replace opinionDEL_`k'=4 if `v'==3
  8.         replace opinionDEL_`k'=5 if `v'==4
  9.         replace opinionDEL_`k'=. if villager==0
 10.         lab val opinionDEL_`k' agree1
 11.         }
(208 real changes made)
(401 missing values generated)
(16 real changes made)
(208 real changes made)
(36 real changes made)
(141 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(426 missing values generated)
(13 real changes made)
(131 real changes made)
(30 real changes made)
(252 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(391 missing values generated)
(11 real changes made)
(208 real changes made)
(24 real changes made)
(148 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(232 missing values generated)
(8 real changes made)
(185 real changes made)
(8 real changes made)
(31 real changes made)
(64 real changes made, 64 to missing)

. *scale all items so that higher agreement indicates higher satisfaction
. gen opinionTL_4reverse = 6-opinionTL_4
(64 missing values generated)

. 
. alpha e_2 opinionDEL_1 opinionDEL_2 opinionDEL_3 opinionTL_4reverse

Test scale = mean(unstandardized items)
Reversed item:  opinionTL_4reverse

Average interitem covariance:     .2561201
Number of items in the scale:            5
Scale reliability coefficient:      0.5149

. * alpha=0.52 less reliable
. *start with simple additative index, 
. egen mean_satisfactionDEL = rowmean (e_2 opinionDEL_1 opinionDEL_2 opinionDEL_3 opinionTL_4reverse)
(64 missing values generated)

. 
. 
. *generate satisfaction dependent on which leaders villagers were matched with in game 1
. gen satisfaction_TL = mean_satisfactionTL
(64 missing values generated)

. replace satisfaction_TL = . if game1_group!=13
(192 real changes made, 192 to missing)

. gen satisfaction_DEL = mean_satisfactionDEL
(64 missing values generated)

. replace satisfaction_DEL = . if game1_group!=14
(192 real changes made, 192 to missing)

. egen satisfaction_leader = rowmean (satisfaction_TL satisfaction_DEL)
(64 missing values generated)

. lab val satisfaction_leader agree1

. lab var satisfaction_leader "Leader satisfaction index (decision-making, exploitation, etc.)"

. egen z_satisfaction = std(satisfaction_leader)
(64 missing values generated)

. 
. *Satisfaction with performance of DEL / TL
. gen performance_TL = e_1
(64 missing values generated)

. replace performance_TL = . if game1_group!=13
(192 real changes made, 192 to missing)

. gen performance_DEL = e_2
(64 missing values generated)

. replace performance_DEL = . if game1_group!=14
(192 real changes made, 192 to missing)

. egen performance_leader = rowmean (performance_TL performance_DEL)
(64 missing values generated)

. lab val performance_leader agree1

. lab var performance_leader "How satisfied are you with the peformance of the TL/DEL?"

. 
. *label variables
. label var e_1 "Satisfied with the chief in general?"

. label var e_2 "Satisfied with the DEL in general?"

. label var e_3 "The Chief makes decisions in an understandable manner?"

. label var e_4 "The DEL makes decisions in an understandable manner?"

. label var e_5 "The Chief takes appropriate actions against people who disobey the rules?"

. label var e_6 "The DEL takes appropriate actions against people who disobey the rules?"

. label var e_7 "Does the chief exploit his or her position?"

. label var e_8 "Does the DEL exploit his or her position?"

. 
. *Combined Index of leader quality
. gen reverse_e7 = 6-e_7
(64 missing values generated)

. alpha e_1 e_3 e_5 reverse_e7

Test scale = mean(unstandardized items)

Average interitem covariance:     .2492895
Number of items in the scale:            4
Scale reliability coefficient:      0.5633

. 
. 
. ***************************
. **** BIG FIVE
. /*
> Rammstedt, B. & John, O. P. (2007). Measuring personality in one minute or less: A 10-item short version of the Big Five Inventory in English and Germa
> n. 
> Journal of Research in Personality, 41, 203-212. 
> 
> De Young et al. 2010 Psych. Science: Neuroticism covaried with volume of brain regions associated with threat, punishment, and negative affect. 
> http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3049165/
> 
> 
> Positively formualed items: c29, c25, c28, c32, c34
> Negatively formulated items: c26, c27, c30, c31, c33
> */
. 
. *** 1. Step, gen new variables
. foreach var of varlist c25-c34{
  2. replace `var'=. if `var'==5
  3. gen `var'new = `var'
  4. }
(0 real changes made)
(389 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)

. 
. *** 2. Step, recode negatively formulated items ***
. foreach var of varlist c26new c27new c30new c31new c33new{
  2. recode `var' (1=4) (2=3) (3=2) (4=1)
  3. }
(c26new: 64 changes made)
(c27new: 64 changes made)
(c30new: 64 changes made)
(c31new: 64 changes made)
(c33new: 64 changes made)

. quietly tab c26 c26new

. quietly tab c27 c27new

. sum c25-c34     /* we have missings for c25, otherwise complete info*/

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         c25 |         59    2.559322     1.47708          1          4
         c26 |         64    2.328125     1.43709          1          4
         c27 |         64    2.421875    1.499256          1          4
         c28 |         64     2.59375     1.46622          1          4
         c29 |         64     2.65625     1.48237          1          4
-------------+---------------------------------------------------------
         c30 |         64     2.90625    1.317992          1          4
         c31 |         64    2.671875    1.369216          1          4
         c32 |         64      2.6875    1.467911          1          4
         c33 |         64     2.90625    1.399759          1          4
         c34 |         64    2.640625    1.505199          1          4

. 
. *** 3. Step: Build variables ***
. /* Higher values mean more agreeable, extraverted etc. */  
. gen extraversion=(c29new+c26new)/2 if leader!=. 
(384 missing values generated)

. gen agreeableness=(c25new+c31new)/2 if leader!=. & c25!=.
(389 missing values generated)

. replace agreeableness=c31new if leader!=. & c25==.
(5 real changes made)

. gen conscientiousness=(c32new+c27new)/2 if leader!=.
(384 missing values generated)

. gen neuroticism=(c33new+c28new)/2 if leader!=.
(384 missing values generated)

. gen openness=(c34new+c30new)/2 if leader!=.
(384 missing values generated)

. 
. *** 4. Step: test for scale reliability (Cronbach's alpha)
. alpha c29new c26new             /*extraversion: 0.86*/

Test scale = mean(unstandardized items)

Average interitem covariance:     1.615575
Number of items in the scale:            2
Scale reliability coefficient:      0.8624

. alpha c25new c31new, item       /*agreeableness: 0.81*/

Test scale = mean(unstandardized items)

Average interitem covariance:     1.384278
Number of items in the scale:            2
Scale reliability coefficient:      0.8128

. alpha c32new c27new     /*Conscientiousness: 0.92 */

Test scale = mean(unstandardized items)

Average interitem covariance:     1.866071
Number of items in the scale:            2
Scale reliability coefficient:      0.9176

. alpha c33new c28new     /*neuroticism: 0.76 */

Test scale = mean(unstandardized items)

Average interitem covariance:      1.24504
Number of items in the scale:            2
Scale reliability coefficient:      0.7547

. alpha c34new c30new     /*openness: 0.49*/

Test scale = mean(unstandardized items)

Average interitem covariance:     .6532738
Number of items in the scale:            2
Scale reliability coefficient:      0.4922

. 
. *** 5. Step: Standardize BIG5 measures
. foreach var of varlist extraversion-openness{
  2. sum `var'
  3. gen `var'_normal = (`var'-r(min))/(r(max)-r(min))
  4. }

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
extraversion |         64    2.664063     1.36874          1          4
(384 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
agreeablen~s |         64    2.492188    1.310798          1          4
(384 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
conscienti~s |         64    2.632813    1.426067          1          4
(384 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 neuroticism |         64     2.34375    1.284446          1          4
(384 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    openness |         64    2.367188    1.152093          1          4
(384 missing values generated)

. sum *_normal 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
extraversi~l |         64    .5546875    .4562468          0          1
agreeablen~l |         64    .4973958    .4369327          0          1
conscienti~l |         64    .5442708    .4753558          0          1
neuroticis~l |         64    .4479167    .4281487          0          1
openness_n~l |         64    .4557292    .3840311          0          1

. 
. foreach var of varlist *_normal{
  2. ttest `var', by(leader)
  3. }

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32    .5729167    .0816145    .4616813    .4064628    .7393705
  Chiefs |      32    .5364583    .0808551    .4573854    .3715533    .7013633
---------+--------------------------------------------------------------------
combined |      64    .5546875    .0570308    .4562468    .4407205    .6686545
---------+--------------------------------------------------------------------
    diff |            .0364583    .1148846               -.1931927    .2661094
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   0.3173
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.6240         Pr(|T| > |t|) = 0.7520          Pr(T > t) = 0.3760

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32     .546875    .0774952    .4383792    .3888225    .7049275
  Chiefs |      32    .4479167    .0772067    .4367473    .2904525    .6053809
---------+--------------------------------------------------------------------
combined |      64    .4973958    .0546166    .4369327    .3882533    .6065384
---------+--------------------------------------------------------------------
    diff |            .0989583     .109391               -.1197112    .3176278
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   0.9046
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.8154         Pr(|T| > |t|) = 0.3692          Pr(T > t) = 0.1846

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32     .578125    .0843302    .4770436    .4061325    .7501175
  Chiefs |      32    .5104167    .0846461    .4788305    .3377799    .6830535
---------+--------------------------------------------------------------------
combined |      64    .5442708    .0594195    .4753558    .4255305    .6630112
---------+--------------------------------------------------------------------
    diff |            .0677083    .1194845               -.1711377    .3065544
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   0.5667
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.7135         Pr(|T| > |t|) = 0.5730          Pr(T > t) = 0.2865

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32     .484375    .0757132    .4282987    .3299569    .6387931
  Chiefs |      32    .4114583    .0763118     .431685    .2558193    .5670974
---------+--------------------------------------------------------------------
combined |      64    .4479167    .0535186    .4281487    .3409683     .554865
---------+--------------------------------------------------------------------
    diff |            .0729167    .1074988               -.1419703    .2878037
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   0.6783
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.7499         Pr(|T| > |t|) = 0.5001          Pr(T > t) = 0.2501

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32     .515625    .0687345    .3888209    .3754401    .6558099
  Chiefs |      32    .3958333      .06641    .3756714    .2603893    .5312773
---------+--------------------------------------------------------------------
combined |      64    .4557292    .0480039    .3840311    .3598011    .5516573
---------+--------------------------------------------------------------------
    diff |            .1197917    .0955757               -.0712614    .3108447
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   1.2534
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.8926         Pr(|T| > |t|) = 0.2148          Pr(T > t) = 0.1074

. /* No sig differences between leader type*/
. 
. label variable extraversion "B5 extraversion, based on c29 and recoded c26new"

. label variable agreeableness "B5 agreeableness, based on c25 and recoded c31new"

. label variable neuroticism "B5 neuroticism, based on c28 and recoded c33new"

. label variable conscientiousness "B5 conscientiousness, based on c32 and recoded c27new"

. label variable openness "B5 openess, based on c34 and recoded c30new"

. 
. drop c25new-c34new

. 
. 
. // Pairwise correlations
. global big5 *_normal

. foreach var of varlist $big5{
  2. pwcorr extra*_normal `var', sig
  3. }

             | extrav~l extrav~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
extraversi~l |   1.0000   1.0000 
             |   0.0000
             |

             | extrav~l agreea~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
agreeablen~l |   0.8877   1.0000 
             |   0.0000
             |

             | extrav~l consci~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
conscienti~l |   0.8933   1.0000 
             |   0.0000
             |

             | extrav~l neurot~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
neuroticis~l |   0.7980   1.0000 
             |   0.0000
             |

             | extrav~l openne~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
openness_n~l |   0.7514   1.0000 
             |   0.0000
             |

. /* THAT is Puzzling: Big 5s are strongly correlated among each other. Including them jointly in regressions will be problematic due to multicollinearit
> y */
. ******************************************
. 
. 
. 
. 
. *********C13-C24***************************
. /*we used authentic leadership self-assessment questionnaire (pdf).
> Literature uses 5-point scale, and than simply takes the sum of all 4 items. Values above 15 mean high AL, values of 15 and below mean low AL.
> In our case this would mean value of >12 is high AL, value of 12 and below is low AL.
> However, we have one missing for c13. This person would hence automatically get a low AL score. 
> We could circumvent this problem by taking the average score. (NOT NOW)
> */
. alpha c13 c16 c19 c22           /*moral perspective: 0.72*/

Test scale = mean(unstandardized items)

Average interitem covariance:     .7498122
Number of items in the scale:            4
Scale reliability coefficient:      0.7168

. alpha c14 c17 c20 c23           /*balanced processing: 0.94*/

Test scale = mean(unstandardized items)

Average interitem covariance:     1.769841
Number of items in the scale:            4
Scale reliability coefficient:      0.9400

. alpha c15 c18 c21 c24           /*relation transparency: 0.89*/

Test scale = mean(unstandardized items)
Reversed item:  c18

Average interitem covariance:     1.439153
Number of items in the scale:            4
Scale reliability coefficient:      0.8881

. global AL c13 c14 c15 c16 c17 c18 c19 c20 c21 c22 c23 c24

. pca $AL

Principal components/correlation                 Number of obs    =         63
                                                 Number of comp.  =          8
                                                 Trace            =         12
    Rotation: (unrotated = principal)            Rho              =     1.0000

    --------------------------------------------------------------------------
       Component |   Eigenvalue   Difference         Proportion   Cumulative
    -------------+------------------------------------------------------------
           Comp1 |       8.5811      7.32232             0.7151       0.7151
           Comp2 |      1.25878      .460893             0.1049       0.8200
           Comp3 |      .797884      .163611             0.0665       0.8865
           Comp4 |      .634273      .265805             0.0529       0.9393
           Comp5 |      .368468      .159598             0.0307       0.9700
           Comp6 |      .208871      .101596             0.0174       0.9874
           Comp7 |      .107275     .0639178             0.0089       0.9964
           Comp8 |     .0433571     .0433571             0.0036       1.0000
           Comp9 |            0            0             0.0000       1.0000
          Comp10 |            0            0             0.0000       1.0000
          Comp11 |            0            0             0.0000       1.0000
          Comp12 |            0            .             0.0000       1.0000
    --------------------------------------------------------------------------

Principal components (eigenvectors) 

    ------------------------------------------------------------------------------------------------------------
        Variable |    Comp1     Comp2     Comp3     Comp4     Comp5     Comp6     Comp7     Comp8 | Unexplained 
    -------------+--------------------------------------------------------------------------------+-------------
             c13 |   0.3208    0.0298   -0.0208   -0.1035    0.0913    0.3360    0.8725   -0.0500 |           0 
             c14 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
             c15 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
             c16 |   0.2263    0.5218    0.3625   -0.0501   -0.0987   -0.7058    0.1851    0.0213 |           0 
             c17 |   0.3314    0.0409    0.1100    0.0062    0.0989    0.0943   -0.2182   -0.9000 |           0 
             c18 |  -0.2049    0.2666    0.4631    0.7441    0.1512    0.3054    0.0343    0.0387 |           0 
             c19 |  -0.0103    0.7180   -0.6419    0.0961   -0.1419    0.1882   -0.0837   -0.0246 |           0 
             c20 |   0.2379   -0.3204   -0.1916    0.5104   -0.7051   -0.1688    0.1142   -0.0697 |           0 
             c21 |   0.2496   -0.1812   -0.4078    0.4026    0.6572   -0.3738    0.0312    0.0621 |           0 
             c22 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
             c23 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
             c24 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
    ------------------------------------------------------------------------------------------------------------

. estat loadings

Principal component loadings (unrotated)
    component normalization: sum of squares(column) = 1

    ----------------------------------------------------------------------------------------------
                 |    Comp1     Comp2     Comp3     Comp4     Comp5     Comp6     Comp7     Comp8 
    -------------+--------------------------------------------------------------------------------
             c13 |    .3208     .0298   -.02084    -.1035    .09128      .336     .8725   -.05001 
             c14 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
             c15 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
             c16 |    .2263     .5218     .3625   -.05012   -.09875    -.7058     .1851    .02134 
             c17 |    .3314    .04087       .11   .006219    .09893     .0943    -.2182       -.9 
             c18 |   -.2049     .2666     .4631     .7441     .1512     .3054    .03432    .03871 
             c19 |  -.01034      .718    -.6419    .09615    -.1419     .1882   -.08369    -.0246 
             c20 |    .2379    -.3204    -.1916     .5104    -.7051    -.1688     .1142   -.06972 
             c21 |    .2496    -.1812    -.4078     .4026     .6572    -.3738     .0312    .06212 
             c22 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
             c23 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
             c24 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
    ----------------------------------------------------------------------------------------------

. predict AL1, score 
(7 components skipped)

Scoring coefficients 
    sum of squares(column-loading) = 1

    ----------------------------------------------------------------------------------------------
        Variable |    Comp1     Comp2     Comp3     Comp4     Comp5     Comp6     Comp7     Comp8 
    -------------+--------------------------------------------------------------------------------
             c13 |   0.3208    0.0298   -0.0208   -0.1035    0.0913    0.3360    0.8725   -0.0500 
             c14 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
             c15 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
             c16 |   0.2263    0.5218    0.3625   -0.0501   -0.0987   -0.7058    0.1851    0.0213 
             c17 |   0.3314    0.0409    0.1100    0.0062    0.0989    0.0943   -0.2182   -0.9000 
             c18 |  -0.2049    0.2666    0.4631    0.7441    0.1512    0.3054    0.0343    0.0387 
             c19 |  -0.0103    0.7180   -0.6419    0.0961   -0.1419    0.1882   -0.0837   -0.0246 
             c20 |   0.2379   -0.3204   -0.1916    0.5104   -0.7051   -0.1688    0.1142   -0.0697 
             c21 |   0.2496   -0.1812   -0.4078    0.4026    0.6572   -0.3738    0.0312    0.0621 
             c22 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
             c23 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
             c24 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
    ----------------------------------------------------------------------------------------------

. sum AL1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         AL1 |         63   -3.78e-09    2.929351  -3.588274   3.158526

. 
. gen moral_perspective=c13+c16+c19+c22
(385 missing values generated)

. gen balance_processing=c14+c17+c20+c23
(384 missing values generated)

. gen relational_transparency=c15+c18+c21+c24
(384 missing values generated)

. label variable moral_perspective "AL moral perspective, total score on c13 c16 c19 and c22"

. label variable balance_processing "AL balance processing, total score on c14 c17 c20 and c23"

. label variable relational_transparency "AL relational transparency, total score on c15 c18 c21 and c24"

. 
. pwcorr moral balance

             | moral_~e balanc~g
-------------+------------------
moral_pers~e |   1.0000 
balance_pr~g |   0.8252   1.0000 

. pwcorr moral relational

             | moral_~e relati~y
-------------+------------------
moral_pers~e |   1.0000 
relational~y |   0.7987   1.0000 

. pwcorr balance relationa

             | balanc~g relati~y
-------------+------------------
balance_pr~g |   1.0000 
relational~y |   0.9073   1.0000 

. egen helpauthentic = rowmean(moral_pers balance_pro relational_trans)
(384 missing values generated)

. gen authentic_leader1=0 if helpauthe!=.
(384 missing values generated)

. replace authentic_leader1=1 if helpauthe>12 & helpauthe!=.
(34 real changes made)

. label variable authentic_leader1 "1=high authentic leadership, 0 otherwise"

. lab def authentic 0 "Low" 1 "High", replace

. lab val authentic_leader1 authentic

. 
. /* AGAIN, very strong correlation among AL variables. Including them jointly in regressions may be no good idea*/
. gen strong_moral=0 if leader!=.
(384 missing values generated)

. replace strong_moral=1 if moral_perspective>=13 & leader!=.
(23 real changes made)

. gen strong_balance=0 if leader!=.
(384 missing values generated)

. replace strong_balance=1 if balance_processing>=13 & leader!=.
(36 real changes made)

. gen strong_relational=0 if leader!=.
(384 missing values generated)

. replace strong_relational=1 if relational_transparency>=13 & leader!=.
(28 real changes made)

. 
. foreach var of varlist  strong_moral strong_balance strong_relational{
  2. tab2 `var' leader, chi2
  3. }

-> tabulation of strong_moral by leader  

strong_mor |        leader
        al |       DEL     Chiefs |     Total
-----------+----------------------+----------
         0 |        21         20 |        41 
         1 |        11         12 |        23 
-----------+----------------------+----------
     Total |        32         32 |        64 

          Pearson chi2(1) =   0.0679   Pr = 0.794

-> tabulation of strong_balance by leader  

strong_bal |        leader
      ance |       DEL     Chiefs |     Total
-----------+----------------------+----------
         0 |        13         15 |        28 
         1 |        19         17 |        36 
-----------+----------------------+----------
     Total |        32         32 |        64 

          Pearson chi2(1) =   0.2540   Pr = 0.614

-> tabulation of strong_relational by leader  

strong_rel |        leader
   ational |       DEL     Chiefs |     Total
-----------+----------------------+----------
         0 |        17         19 |        36 
         1 |        15         13 |        28 
-----------+----------------------+----------
     Total |        32         32 |        64 

          Pearson chi2(1) =   0.2540   Pr = 0.614

. /* No differences, will not change if we use Fisher exact test for values being very similar*/
. label variable strong_moral"AL dummy for moral perspective"

. label variable strong_balance "AL dummy for balance processing"

. label variable strong_relational "AL dummy for relational transparency"

. 
. gen authentic_leader2=0 if leader!=.
(384 missing values generated)

. replace authentic_leader2=1 if strong_moral==1 & strong_balance==1 & strong_relational==1
(17 real changes made)

. label variable authentic_leader2 "Measure of authentic leadership based on dummies"

. 
. * standardize authentic leadership scale (z-scores)
. egen AL_score=rowmean(moral_perspective balance_processing relational_transparency)
(384 missing values generated)

. egen z_AL_score=std(AL_score)
(384 missing values generated)

. 
. * Village level leader motivation
. bysort village: egen aux_motivation=total(motivation)

. gen intrinsic_DEL=0 if motivation==0 & TL==0
(437 missing values generated)

. replace intrinsic_DEL=1 if motivation==1 & TL==0
(21 real changes made)

. gen intrinsic_TL=0 if motivation==0 & TL==1
(430 missing values generated)

. replace intrinsic_TL=1 if motivation==1 & TL==1
(14 real changes made)

. gen sum_motivation=.
(448 missing values generated)

. replace sum_motivation=0 if aux_motivation==0
(56 real changes made)

. replace sum_motivation=1 if aux_motivation==1 & intrinsic_DEL==0
(7 real changes made)

. replace sum_motivation=1 if aux_motivation==1 & intrinsic_TL==1
(7 real changes made)

. replace sum_motivation=2 if aux_motivation==1 & intrinsic_TL==0
(14 real changes made)

. replace sum_motivation=2 if aux_motivation==1 & intrinsic_DEL==1
(14 real changes made)

. replace sum_motivation=3 if aux_motivation==2
(98 real changes made)

. lab def motivation2 0 "both extrinsic" 1 "DEL extrinsic/ TL intrinsic" 2 "TL extrinsic/ DEL intrinsic"  3 "both intrinsic", replace

. lab val sum_motivation motivation2

. 
. gen bonus_AL=bonus*authentic_leader1
(384 missing values generated)

. 
. 
. 
. /* NOTE:
> - FWe drop d5j (Motorrad), cell phone and freezer as this has too little variation. Drop sewing machine as no obs for leader
> - Include dummies for d6 and d7a, in case of d6 a dummy if main source is private tap (d6==1) und in case of d7 if d7a=02 (concrete)
> */
. 
. * Dummies for main income sources
. gen i_sf=0

. replace i_sf=1 if d1==3 | d1==4
(138 real changes made)

. lab var i_sf "Farming"

. 
. gen i_ob=0 

. replace i_ob=1 if d1==5
(67 real changes made)

. label var i_ob "Own business"

. 
. gen i_em=0

. replace i_em=1 if d1==1 | d1==2
(45 real changes made)

. label var i_em "Employment"

. 
. gen i_p=0

. replace i_p=1 if d1==6
(93 real changes made)

. label var i_p "Pension"

. 
. 
. 
. gen privatetap = (d6==1) if d6!=.
(5 missing values generated)

. gen robustfloor = (d7a==2 | d7a==4) if d7a!=.
(6 missing values generated)

. label variable robustfloor "Dummy taking 1 if concrete or wooden housefloor, based on d7a"

. label variable privatetap "Dummy if privat tap, based on d6"

. 
. // Normalize livestock assets to [0,1] range
. sum d3a 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         d3a |        442    8.873303    19.44391          0        300

. gen z_cattle = (d3a - r(min))/(r(max)-r(min))
(6 missing values generated)

. sum d3b

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         d3b |        442    .3733032    2.747666          0         30

. gen z_sheeps = (d3b - r(min))/(r(max)-r(min))
(6 missing values generated)

. sum d3c

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         d3c |        442    13.35068    16.80289          0        200

. gen z_goats = (d3c - r(min))/(r(max)-r(min))
(6 missing values generated)

. 
. bysort villager: sum z_cattle z_sheeps z_goats

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> villager = 0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         64    .0488021    .0654421          0         .4
    z_sheeps |         64      .00625         .05          0         .4
     z_goats |         64    .1092188    .1390792          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> villager = 1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |        378    .0263228    .0642247          0          1
    z_sheeps |        378    .0134921    .0968875          0          1
     z_goats |        378    .0595635    .0683105          0         .5


. 
. global asset z_cattle z_sheeps z_goats d5a d5b d5c d5d d5e d5f d5g d5i d5j d5k d5l d5m d5n robustfloor privatetap

. global asset2 d5a d5b d5d d5f d5g d5i d5k-d5n privatetap

. 
. pca $asset2, comp(1)

Principal components/correlation                 Number of obs    =        431
                                                 Number of comp.  =          1
                                                 Trace            =         11
    Rotation: (unrotated = principal)            Rho              =     0.2645

    --------------------------------------------------------------------------
       Component |   Eigenvalue   Difference         Proportion   Cumulative
    -------------+------------------------------------------------------------
           Comp1 |      2.90923      1.66106             0.2645       0.2645
           Comp2 |      1.24818      .104836             0.1135       0.3779
           Comp3 |      1.14334      .186404             0.1039       0.4819
           Comp4 |      .956937      .136826             0.0870       0.5689
           Comp5 |      .820111     .0212259             0.0746       0.6434
           Comp6 |      .798885     .0776617             0.0726       0.7161
           Comp7 |      .721223     .0385552             0.0656       0.7816
           Comp8 |      .682668     .0664126             0.0621       0.8437
           Comp9 |      .616255     .0419399             0.0560       0.8997
          Comp10 |      .574316     .0454601             0.0522       0.9519
          Comp11 |      .528855            .             0.0481       1.0000
    --------------------------------------------------------------------------

Principal components (eigenvectors) 

    --------------------------------------
        Variable |    Comp1 | Unexplained 
    -------------+----------+-------------
             d5a |   0.1841 |       .9014 
             d5b |   0.3884 |       .5612 
             d5d |   0.3551 |       .6332 
             d5f |   0.2575 |       .8071 
             d5g |   0.3441 |       .6556 
             d5i |   0.3654 |       .6117 
             d5k |   0.2157 |       .8646 
             d5l |   0.2627 |       .7992 
             d5m |   0.3276 |       .6878 
             d5n |   0.2742 |       .7813 
      privatetap |   0.2702 |       .7877 
    --------------------------------------

. estat loadings

Principal component loadings (unrotated)
    component normalization: sum of squares(column) = 1

    ------------------------
                 |    Comp1 
    -------------+----------
             d5a |    .1841 
             d5b |    .3884 
             d5d |    .3551 
             d5f |    .2575 
             d5g |    .3441 
             d5i |    .3654 
             d5k |    .2157 
             d5l |    .2627 
             d5m |    .3276 
             d5n |    .2742 
      privatetap |    .2702 
    ------------------------

. predict pc1, score

Scoring coefficients 
    sum of squares(column-loading) = 1

    ------------------------
        Variable |    Comp1 
    -------------+----------
             d5a |   0.1841 
             d5b |   0.3884 
             d5d |   0.3551 
             d5f |   0.2575 
             d5g |   0.3441 
             d5i |   0.3654 
             d5k |   0.2157 
             d5l |   0.2627 
             d5m |   0.3276 
             d5n |   0.2742 
      privatetap |   0.2702 
    ------------------------

. estat kmo // legitimate pca, kmo=0.79 > 0.7

Kaiser-Meyer-Olkin measure of sampling adequacy

    -----------------------
        Variable |     kmo 
    -------------+---------
             d5a |  0.7485 
             d5b |  0.8123 
             d5d |  0.7777 
             d5f |  0.7751 
             d5g |  0.8669 
             d5i |  0.8242 
             d5k |  0.7672 
             d5l |  0.7011 
             d5m |  0.7625 
             d5n |  0.7944 
      privatetap |  0.8454 
    -------------+---------
         Overall |  0.7924 
    -----------------------

. sum pc1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         pc1 |        431   -7.56e-09    1.705647  -2.108749   6.471886

. gen pca_wealth=pc1
(17 missing values generated)

. label var pca_wealth "Socio-economic status proxy based on first component of pca"

. 
. xtile quintile=pca_wealth, nq(5)

. bysort leader: sum pca_wealth

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> leader = DEL

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  pca_wealth |         32     .451963    1.621559  -2.108749   3.726418

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> leader = Chiefs

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  pca_wealth |         32    1.702505    1.805242  -1.535614   6.471886

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> leader = .

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  pca_wealth |        367   -.1878555    1.616336  -2.108749    5.90319


. label define quints 1 "Poorest" 2 "Poor" 3 "Medium" 4 "Wealthy" 5 "Wealthiest"

. label values quintile quints

. 
. bysort quintile: sum $asset

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Poorest

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         90    .0064074    .0161085          0         .1
    z_sheeps |         90    .0018519    .0175682          0   .1666667
     z_goats |         90    .0268889    .0432498          0         .2
         d5a |         91    .4395604    .4990834          0          1
         d5b |         91           0           0          0          0
-------------+---------------------------------------------------------
         d5c |         91    .9230769    .2679457          0          1
         d5d |         91           0           0          0          0
         d5e |         91           0           0          0          0
         d5f |         91           0           0          0          0
         d5g |         91           0           0          0          0
-------------+---------------------------------------------------------
         d5i |         91           0           0          0          0
         d5j |         91           0           0          0          0
         d5k |         91     .010989    .1048285          0          1
         d5l |         91           0           0          0          0
         d5m |         91           0           0          0          0
-------------+---------------------------------------------------------
         d5n |         91    .1648352    .3730873          0          1
 robustfloor |         91     .032967    .1795395          0          1
  privatetap |         91    .0659341    .2495417          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Poor

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         82    .0156911    .0245088          0   .1066667
    z_sheeps |         82    .0146341    .1068437          0   .9333333
     z_goats |         82    .0370122    .0440318          0         .2
         d5a |         83    .9036145    .2969133          0          1
         d5b |         83           0           0          0          0
-------------+---------------------------------------------------------
         d5c |         83    .9638554    .1877845          0          1
         d5d |         83    .0120482    .1097643          0          1
         d5e |         83    .0120482    .1097643          0          1
         d5f |         83           0           0          0          0
         d5g |         83           0           0          0          0
-------------+---------------------------------------------------------
         d5i |         83     .060241    .2393792          0          1
         d5j |         83           0           0          0          0
         d5k |         83    .1325301    .3411274          0          1
         d5l |         83           0           0          0          0
         d5m |         83           0           0          0          0
-------------+---------------------------------------------------------
         d5n |         83    .5421687    .5012473          0          1
 robustfloor |         83    .0481928    .2154753          0          1
  privatetap |         83     .313253    .4666359          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Medium

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |        100       .0332    .1024579          0          1
    z_sheeps |        100    .0036667    .0176606          0         .1
     z_goats |        100      .06995    .0820953          0         .5
         d5a |        101    .9108911    .2863218          0          1
         d5b |        101     .039604    .1959996          0          1
-------------+---------------------------------------------------------
         d5c |        101     .950495    .2180017          0          1
         d5d |        101     .049505    .2180017          0          1
         d5e |        101     .019802    .1400141          0          1
         d5f |        101     .009901    .0995037          0          1
         d5g |        101    .0792079      .27141          0          1
-------------+---------------------------------------------------------
         d5i |        101    .2475248    .4337267          0          1
         d5j |        101     .029703    .1706133          0          1
         d5k |        101    .3762376     .486857          0          1
         d5l |        101     .009901    .0995037          0          1
         d5m |        101           0           0          0          0
-------------+---------------------------------------------------------
         d5n |        101    .7821782    .4148243          0          1
 robustfloor |        100         .07    .2564324          0          1
  privatetap |        101    .5544554    .4995047          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Wealthy

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         70    .0448571    .0639738          0   .3333333
    z_sheeps |         70    .0171429    .1215497          0          1
     z_goats |         70    .0861429    .0781033          0        .35
         d5a |         70    .9285714    .2593989          0          1
         d5b |         70    .2142857    .4132886          0          1
-------------+---------------------------------------------------------
         d5c |         70    .9714286    .1678015          0          1
         d5d |         70    .1571429    .3665631          0          1
         d5e |         70    .0714286    .2593989          0          1
         d5f |         70    .0142857    .1195229          0          1
         d5g |         70    .2142857    .4132886          0          1
-------------+---------------------------------------------------------
         d5i |         70    .6714286    .4730851          0          1
         d5j |         70    .0857143     .281963          0          1
         d5k |         70    .2857143    .4550158          0          1
         d5l |         70    .0714286    .2593989          0          1
         d5m |         70    .1142857    .3204552          0          1
-------------+---------------------------------------------------------
         d5n |         70    .8857143    .3204552          0          1
 robustfloor |         70    .0714286    .2593989          0          1
  privatetap |         70    .6428571    .4826171          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Wealthiest

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         86    .0513953    .0617892          0         .4
    z_sheeps |         86     .029845    .1392819          0   .8666667
     z_goats |         86    .1172093    .1187424          0          1
         d5a |         86    .9186047    .2750451          0          1
         d5b |         86    .6162791    .4891434          0          1
-------------+---------------------------------------------------------
         d5c |         86    .9534884    .2118255          0          1
         d5d |         86    .5348837    .5017071          0          1
         d5e |         86     .244186    .4321233          0          1
         d5f |         86    .2906977    .4567476          0          1
         d5g |         86    .5813953    .4962238          0          1
-------------+---------------------------------------------------------
         d5i |         86    .7790698    .4173068          0          1
         d5j |         86    .0581395    .2353796          0          1
         d5k |         86    .4767442    .5023883          0          1
         d5l |         86     .244186    .4321233          0          1
         d5m |         86    .3837209    .4891434          0          1
-------------+---------------------------------------------------------
         d5n |         86    .9069767    .2921686          0          1
 robustfloor |         86    .1046512    .3078988          0          1
  privatetap |         86    .7790698    .4173068          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = .

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         14    .0235714    .0295685          0   .0833333
    z_sheeps |         14           0           0          0          0
     z_goats |         14       .0675    .0560134          0       .175
         d5a |         11    .8181818    .4045199          0          1
         d5b |         11    .2727273    .4670994          0          1
-------------+---------------------------------------------------------
         d5c |         12    .9166667    .2886751          0          1
         d5d |         11    .1818182    .4045199          0          1
         d5e |         12    .1666667    .3892495          0          1
         d5f |         11    .0909091    .3015113          0          1
         d5g |         11    .0909091    .3015113          0          1
-------------+---------------------------------------------------------
         d5i |         12    .0833333    .2886751          0          1
         d5j |         11    .0909091    .3015113          0          1
         d5k |         11    .1818182    .4045199          0          1
         d5l |         10          .1    .3162278          0          1
         d5m |         10          .2     .421637          0          1
-------------+---------------------------------------------------------
         d5n |         10          .2     .421637          0          1
 robustfloor |         12    .0833333    .2886751          0          1
  privatetap |         12         .25     .452267          0          1


. 
. 
. 
. 
. *** Create Variable that informs about years living in village ***
. /* Problem: for 50% of sample, a6 takes the value of "1". What does this mean? */
. 
. ** lifetime spent in village
. replace a6=2000 if id==380
(1 real change made)

. *Assistant for got a zero in the year
. gen years_in_village = .
(448 missing values generated)

. gen a6_new = 2015-a6 if a6 > 1
(226 missing values generated)

. label variable a6_new "Transformation of a6 in years"

. replace years_in_village = age if a6==1
(222 real changes made)

. replace  years_in_village = a6_new if a6 > 1
(222 real changes made)

. gen rootedness=years_in_village/age
(5 missing values generated)

. replace rootedness=1 if rootedness > 1
(58 real changes made)

. label variable rootedness "Fraction of lifetime spent in village"

. *some are younger than the time spent in the village (they probably have been living there all their life)
. 
. 
. *** experience in years
. gen experience = 2015-f1
(384 missing values generated)

. label variable experience "Years in office"

. 
. 
. // Competition
. gen f5new=f5
(390 missing values generated)

. replace f5new=0 if f5new==. & leader!=.
(6 real changes made)

. rename f5new competitor

. 
. gen dcompetitor = (competitor>0 & competitor!=.)

. label variable competitor "Number of competitors in previous election"

. label variable dcompetitor "Dummy=1 if there were some other candidates in previous election"

. 
. /*
> gen competitor2=competitor
> replace competitor2=20 if competitor2>=20 & competitor2!=.
> */
. 
. // Term office
. gen term=f2a
(384 missing values generated)

. label variable term "Dummy=1 if person faces term office"

. 
. // Elected
. gen elected =1 if f3b==1 | (f3==1 | f3==2)
(412 missing values generated)

. replace elected=0 if elected ==. & leader!=.
(28 real changes made)

. label variable elected "Dummy=1 if person was elected rather than appointed"

. 
. // Secret elections
. gen secretelec = 1 if f4c==1
(432 missing values generated)

. replace secretelec = 0 if f4c>1 & f4c!=.
(47 real changes made)

. label var secretelec "Dummy =1 if elections were secretly held"

. 
. 
. save "$working_ANALYSIS\processed\analysis_wide.dta", replace
file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\processed\analysis_wide.dta saved

. 
. 
. /*
> Reshape dataset into long-format for analysis of bonus payment rounds.
> Generate additional variables for analysis in long-format.
> */
. reshape long rule vote majority payoff, i(id) j(decision)
(note: j = 1 2 3 4 5 6)
(note: payoff2 not found)
(note: payoff3 not found)
(note: payoff4 not found)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                      448   ->    2688
Number of variables                 442   ->     426
j variable (6 values)                     ->   decision
xij variables:
                  rule1 rule2 ... rule6   ->   rule
                  vote1 vote2 ... vote6   ->   vote
      majority1 majority2 ... majority6   ->   majority
            payoff1 payoff2 ... payoff6   ->   payoff
-----------------------------------------------------------------------------

. 
. *Drop all decisions except 1, 5 and 6 (basic, bonus1, bonus2)
. drop if decision>1 & decision<5
(1,344 observations deleted)

. drop if id>64
(1,152 observations deleted)

. order decision rule vote majority payoff, after(session_id)

. order session_id, after(id)

. 
. *---------------------------------------------------------
. * Generating additional variables for long-format analysis
. *---------------------------------------------------------
. * Binary rule choice
. gen dem=0

. replace dem=1 if rule==1
(123 real changes made)

. 
. gen dic=0

. replace dic=1 if rule==3
(14 real changes made)

. 
. gen fake=0

. replace fake=1 if rule==2
(55 real changes made)

. *bonus: 0=no bonus, 1=any bonus
. gen bonus=0

. replace bonus=1 if decision>4
(128 real changes made)

. 
. 
. *bonus_size: 0=no, 1=small, 2=large
. gen bonus_size=0

. replace bonus_size=1 if decision==5
(64 real changes made)

. replace bonus_size=2 if decision==6
(64 real changes made)

. lab def bonus_size1 0 "Baseline" 1 "Small Bonus" 2 "Large Bonus", replace

. lab val bonus_size bonus_size1

. 
. 
. *Generate identifier for the first bonus that was offered
. gen bonus_first=0 if (decision==6 & randomization<7) | (decision==5 & randomization>6)
(128 missing values generated)

. replace bonus_first=1 if (decision==5 & randomization<7) | (decision==6 & randomization>6)
(64 real changes made)

. label def first_lab 0 "3rd round" 1 "2nd round", replace

. lab val bonus_first first_lab

. 
. replace rule=1 if dem==1
(0 real changes made)

. replace rule=2 if fake==1
(0 real changes made)

. replace rule=3 if dic==1
(0 real changes made)

. 
. label def bonus 0 "Baseline (n=64)" 1 "Pooled Bonus (n=128)", replace

. label def rule 1 "Democratic" 2 "Pseudo-democratic" 3 "Autocratic" , replace

. label val bonus bonus

. label val rule rule

. 
. order bonus bonus_size bonus_order randomization dem dic fake, after(majority)

. 
. *rule choice variable for basic round
. gen rule_basic = rule if decision==1
(128 missing values generated)

. replace rule_basic = rule_basic[_n-1] if missing(rule_basic)
(128 real changes made)

. order rule_basic, after(rule)

. label def rule_basic 1 "Base: Democratic (n=41)" 2 "Base: Pseudo (n=14)" 3 "Base: Autocrat (n=9)", replace

. label val rule_basic rule_basic

. 
. 
. qui tab bonus_size, gen(bonus_)

. qui tab bonus_order, gen(order_)

. qui tab rule_basic, gen(baseline_)

. 
. *interactions 
. gen bonus_democrat=bonus*baseline_1

. gen bonus_pseudo=bonus*baseline_2

. gen bonus_dictator=bonus*baseline_3

. 
. *gen round= 1 if bonus_first==.
. replace round = 2 if bonus_first==1
variable round not found
r(111);

end of do-file
r(111);

end of do-file

r(111);

. do "C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\scripts\02_generate.do"

. *--------------------------------------------------------------------------------------
. * SCRIPT: 02_generate.do
. * PURPOSE: generates additional variables used in the analysis
. *--------------------------------------------------------------------------------------
. 
. 
. 
. clear

. use "$working_ANALYSIS\processed\data_clean.dta"

. 
. // GAME 1: PROCEDURAL FAIRNESS
. 
. rename rule_1 rule1

. rename rule_2 rule2

. rename rule_3 rule3

. rename rule_4 rule4

. rename rule_bonus_1 rule5

. rename rule_bonus_2 rule6

. 
. rename vote_1 vote1

. rename vote_2 vote2

. rename vote_3 vote3

. rename vote_4 vote4

. rename vote_bonus_1 vote5

. rename vote_bonus2 vote6

. 
. rename majority_1 majority1

. rename majority_2 majority2

. rename majority_3 majority3

. rename majority_4 majority4

. rename majority_bonus1 majority5

. rename majority_bonus2 majority6

. 
. 
. // Create dummies for democratic and autocratic choices
. *democratic
. gen dem1=0

. replace dem1=1 if rule1==1
(41 real changes made)

. gen dem2=0

. replace dem2=1 if rule2==1
(39 real changes made)

. gen dem3=0

. replace dem3=1 if rule3==1
(44 real changes made)

. gen dem4=0

. replace dem4=1 if rule4==1
(37 real changes made)

. gen dem5=0

. replace dem4=1 if rule5==1
(10 real changes made)

. gen dem6=0

. replace dem4=1 if rule6==1
(5 real changes made)

. egen dem7 = rowmean(dem1 dem2 dem3 dem4)

. 
. *dictator
. gen dic1=0

. replace dic1=1 if rule1==2
(9 real changes made)

. gen dic2=0

. replace dic2=1 if rule2==2
(12 real changes made)

. gen dic3=0

. replace dic3=1 if rule3==2
(7 real changes made)

. gen dic4=0

. replace dic4=1 if rule4==2
(7 real changes made)

. gen dic5=0

. replace dic5=1 if rule5==2
(3 real changes made)

. gen dic6=0

. replace dic6=1 if rule6==2
(2 real changes made)

. 
. *pseudo-democratic
. gen fake1=0

. replace fake1=1 if rule1==3
(14 real changes made)

. gen fake2=0

. replace fake2=1 if rule2==3
(13 real changes made)

. gen fake3=0

. replace fake3=1 if rule3==3
(13 real changes made)

. gen fake4=0

. replace fake4=1 if rule4==3
(20 real changes made)

. gen fake5=0

. replace fake5=1 if rule5==3
(20 real changes made)

. gen fake6=0

. replace fake6=1 if rule6==3
(21 real changes made)

. 
. replace rule1=1 if dem1==1
(0 real changes made)

. replace rule1=2 if fake1==1
(14 real changes made)

. replace rule1=3 if dic1==1
(9 real changes made)

. replace rule2=1 if dem2==1
(0 real changes made)

. replace rule2=2 if fake2==1
(13 real changes made)

. replace rule2=3 if dic2==1
(12 real changes made)

. replace rule3=1 if dem3==1
(0 real changes made)

. replace rule3=2 if fake4==1
(17 real changes made)

. replace rule3=3 if dic4==1
(4 real changes made)

. replace rule4=1 if dem4==1
(15 real changes made)

. replace rule4=2 if fake4==1
(20 real changes made)

. replace rule4=3 if dic4==1
(7 real changes made)

. replace rule5=1 if dem5==1
(0 real changes made)

. replace rule5=2 if fake5==1
(20 real changes made)

. replace rule5=3 if dic5==1
(3 real changes made)

. replace rule6=1 if dem6==1
(0 real changes made)

. replace rule6=2 if fake6==1
(21 real changes made)

. replace rule6=3 if dic6==1
(2 real changes made)

. 
. *subsample autocratic rule choices
. gen pseudo1=0

. replace pseudo1=1 if rule1==3
(9 real changes made)

. replace pseudo1=. if rule1==1
(41 real changes made, 41 to missing)

. gen pseudo2=0

. replace pseudo2=1 if rule2==3
(12 real changes made)

. replace pseudo2=. if rule2==1
(39 real changes made, 39 to missing)

. gen pseudo3=0

. replace pseudo3=1 if rule3==3
(11 real changes made)

. replace pseudo3=. if rule3==1
(31 real changes made, 31 to missing)

. gen pseudo4=0

. replace pseudo4=1 if rule4==3
(7 real changes made)

. replace pseudo4=. if rule4==1
(37 real changes made, 37 to missing)

. egen pseudo_all = rowmean(pseudo1 pseudo2 pseudo3 pseudo4)
(25 missing values generated)

. 
. *same rule across all three rounds
. gen stable_rule=0

. replace stable_rule=1 if rule1==rule5==rule6
(30 real changes made)

. 
. *game1_group
. *devide each village into two groups of game 1: TL or DEL (13=TL, 14=DEL)?
. gen game1_group = 13

. replace game1_group =14 if session_id==1 | session_id==2 | session_id==5 | session_id==6 | session_id==9 | session_id==10 | session_id==14
(224 real changes made)

. order game1_group, before(vote1)

. 
. *villager_preference1
. *now the villager preferences, i.e. majority without leader (6 villager per group, a draw is therefore possible)
. * villager_preference1 ("A", "B" or "draw") gives the preferences of the six villager (without leader) in the first decision of game 1
. egen count_A = total(vote1==1) if id>64, by(village game1_group)
(64 missing values generated)

. order count_A, after(vote1)

. 
. replace count_A = count_A[_n-1] if session_id==13
(0 real changes made)

. replace count_A = count_A[_n-4] if session_id==14
(0 real changes made)

. 
. gen villager_preference1="A"

. replace villager_preference1 = "B" if count_A<3
(276 real changes made)

. replace villager_preference1 = "draw" if count_A==3
variable villager_preference1 was str1 now str4
(72 real changes made)

. order villager_preference1, after(vote1)

. label variable villager_preference "majority vote of 6 villagers over distribution A and B"

. 
. 
. drop count_A

. 
. *Bonus order
. gen bonus_order=. if id >64
(448 missing values generated)

. replace bonus_order=1 if  randomization<7
(38 real changes made)

. replace bonus_order=0 if  randomization>6 
(410 real changes made)

. label def bonus_order 1 "Small first" 0 "Large first", replace

. lab val bonus_order bonus_order

. 
. *Identifier for first bonus that was offered to leaders
. gen rule_bonus_first = rule5 if bonus_order==1
(414 missing values generated)

. replace rule_bonus_first = rule6 if bonus_order==0
(30 real changes made)

. gen rule_bonus_second = rule5 if bonus_order==0
(418 missing values generated)

. replace rule_bonus_second = rule6 if bonus_order==1
(34 real changes made)

. 
. *New variable to identify baseline rule choices
. gen rule_base=rule1
(384 missing values generated)

. lab def rulebasic 1 "Base: Democratic" 2 "Base: Pseudo" 3 "Base: Autocratic", replace

. lab val rule_base rulebasic

. bysort village game1_group: egen group_rule_base = mean(rule_base)

. lab val group_rule_base rulebasic

. tab group_rule_base, gen(rule_base)

 group_rule_base |      Freq.     Percent        Cum.
-----------------+-----------------------------------
Base: Democratic |        287       64.06       64.06
    Base: Pseudo |         98       21.88       85.94
Base: Autocratic |         63       14.06      100.00
-----------------+-----------------------------------
           Total |        448      100.00

. 
. * label rule choices consistently
. lab def rule 1 "Democratic" 2 "Pseudo-democratic" 3 "Autocratic" , replace

. foreach x of varlist rule1 rule5 rule6 rule_bonus_first rule_bonus_second {
  2.         lab val `x' rule
  3.         }

. 
. *payoff1, payoff5, payoff6
. *what do these villagers get?
. *Basic
. gen payoff1 = 0 if id<65
(384 missing values generated)

. replace payoff1 = 1 if (id<65) & ((rule1==1 & majority1=="B") | (rule1!=1 & vote1==2))
(41 real changes made)

. label variable payoff1 "distribution A or B that is paid to the group in decision 1"

. 
. *Small Bonus
. gen payoff5 = 0 if id<65
(384 missing values generated)

. replace payoff5 = 1 if (id<65) & ((rule5==1 & majority5=="B") | (rule5!=1 & vote5==2))
(40 real changes made)

. label variable payoff5 "distribution A or B that is paid to the group in small bonus"

. 
. *Large Bonus
. gen payoff6 = 0 if id<65
(384 missing values generated)

. replace payoff6 = 1 if (id<65) & ((rule6==1 & majority6=="B") | (rule6!=1 & vote6==2))
(42 real changes made)

. label variable payoff6 "distribution A or B that is paid to the group in large bonus"

. 
. lab def payoff_lab 0 "A" 1 "B"

. foreach var of varlist payoff1 payoff5 payoff6 {
  2.         lab val `var' payoff_lab
  3.         }

.         
. order payoff1 payoff5 payoff6, after(villager_preference1)

. gsort village game1_group -session_id

. 
. by village game1_group: replace payoff1 = payoff1[_n-1] if missing(payoff1)
(384 real changes made)

. by village game1_group: replace payoff5 = payoff5[_n-1] if missing(payoff5)
(384 real changes made)

. by village game1_group: replace payoff6 = payoff6[_n-1] if missing(payoff6)
(384 real changes made)

. 
. sort village session_id

. 
. 
. 
. // Leadertypes based on baseline stage 1 & stage 2 decisions
. gen true_democrat=0

. replace true_democrat=1 if rule1==1 
(41 real changes made)

. gen pseudo_democrat=0

. replace pseudo_democrat=1 if rule1==2 & vote1==1
(9 real changes made)

. gen paternalistic=0

. replace paternalistic=1 if rule1==2 & vote1==2
(5 real changes made)

. gen dictator=0

. replace dictator=1 if rule1==3 & vote1==1
(6 real changes made)

. gen benevolent_dictator=0

. replace benevolent_dictator=1 if rule1==3 & vote1==2
(3 real changes made)

. 
. gen leader_type=1 if true_democrat==1
(407 missing values generated)

. replace leader_type=2 if pseudo_democrat==1
(9 real changes made)

. replace leader_type=3 if paternalistic==1
(5 real changes made)

. replace leader_type=4 if dictator==1
(6 real changes made)

. replace leader_type=5 if benevolent_dictator==1
(3 real changes made)

. lab def lab_types 1 "True-democrat" 2 "Pseudo-democrat" 3 "Paternalist" 4 "Autocrat" 5 "Benevolent-Autocrat"

. lab val leader_type lab_types

. 
. 
. bysort village game1_group: egen group_leader_type = mean(leader_type)

. lab val group_leader_type lab_types

. 
. lab def vote_lab 1 "Distribution A" 2 "Distribution B"

. lab val vote1 vote_lab

. tab group_leader_type, gen(leader_type)

  group_leader_type |      Freq.     Percent        Cum.
--------------------+-----------------------------------
      True-democrat |        287       64.06       64.06
    Pseudo-democrat |         63       14.06       78.13
        Paternalist |         35        7.81       85.94
           Autocrat |         42        9.38       95.31
Benevolent-Autocrat |         21        4.69      100.00
--------------------+-----------------------------------
              Total |        448      100.00

. 
. 
. 
. ************************************
. *** 1C: Preference game (Game 2)
. 
. gen social_type=6 

. replace social_type = 1 if decision1==1 & decision2==1 & decision3==1
(228 real changes made)

. replace social_type = 2 if decision1==1 & decision2==1 & decision3==2
(51 real changes made)

. replace social_type = 3 if decision1==1 & decision2==2 & decision3==1
(61 real changes made)

. replace social_type = 4 if decision1==1 & decision2==2 & decision3==2
(32 real changes made)

. replace social_type = 5 if decision1==2 & decision2==1 & decision3==2
(24 real changes made)

. 
. gen social_type2 =.
(448 missing values generated)

. replace social_type2=1 if (social_type==1 | social_type==2)
(279 real changes made)

. replace social_type2=2 if (social_type==3 | social_type==4)
(93 real changes made)

. replace social_type2=3 if social_type==5
(24 real changes made)

. replace social_type2=4 if social_type2==. & social_type==6
(52 real changes made)

. 
. # delimit;
delimiter now ;
. label define social
> 1       "Strongly egalitarian"
> 2       "Weakly egalitarian"
> 3   "Strongly generous"
> 4       "Weakly generous"
> 5       "Spiteful"
> 6       "Ambiguous";

. label define social2
> 1       "Egalitarian"
> 2       "Generous"
> 3   "Spiteful"
> 4       "Ambiguous";

. # delimit cr
delimiter now cr
. label values  social_type social

. label values  social_type2 social2

. 
. 
. 
. // Gen dummy for no education
. gen no_educ = 0 if education>0 & education!=.
(44 missing values generated)

. replace no_educ =1 if education==0
(41 real changes made)

. 
. // age-squared
. gen age_sq = age*age
(1 missing value generated)

. 
. // intrinsic motivation - binary variable:
. * Based on the definition of Frey & Oberholzer (1997) ->
. * intrinsic(=1): one likes to do them or because the individual derives some satisfaction from doing  his or her duty
. *extrinsic(=0): activated from the outside
. * if there are both intrinsic and extrinsic motives mentioned, the variable takes the value 1 - there can be some intrinsic motives crowded out by the 
> bonus paymen 
. 
. gen motivation=.
(448 missing values generated)

. replace motivation=0 if f6=="accepted because people but trust in her"
(1 real change made)

. replace motivation=0 if f6=="just accepted what the villagers voted."
(1 real change made)

. replace motivation=1 if f6=="to help the community mantain water"
(1 real change made)

. replace motivation=1 if f6=="because I believe that I was born with characteristic of a leader."
(1 real change made)

. replace motivation=0 if f6=="i just accepted because the villagers appointed me"
(1 real change made)

. replace motivation=1 if f6=="to lead the community. A calling from god. Care for the community"
(1 real change made)

. replace motivation=1 if f6=="to train the committee members to be in goood communication / relationship with tap users"
(1 real change made)

. replace motivation=1 if f6=="accepted the task attributed to him and help his community"
(1 real change made)

. replace motivation=0 if f6=="just accepted the vote"
(2 real changes made)

. replace motivation=1 if f6=="Assist and meet the needs of the villagers"
(1 real change made)

. replace motivation=1 if f6=="to care and protect the use of water"
(1 real change made)

. replace motivation=0 if f6=="he was chosen and just accepted"
(1 real change made)

. replace motivation=0 if f6=="accepted responsibility"
(1 real change made)

. replace motivation=1 if f6=="to lead the community"
(2 real changes made)

. replace motivation=1 if f6=="volunteer to help bring water to the village, help the community"
(1 real change made)

. replace motivation=1 if f6=="to lead the community"
(0 real changes made)

. replace motivation=1 if f6=="help his community"
(1 real change made)

. replace motivation=0 if f6=="was obliged, to lead the village, to bring development to the village"
(1 real change made)

. replace motivation=1 if f6=="guarantee availability of water"
(1 real change made)

. replace motivation=0 if f6=="Accepted because it is a calling by God. Did not want to disappoint the father and villagers."
(1 real change made)

. replace motivation=1 if f6=="to help the community, to keep or take care of the water pipes"
(1 real change made)

. replace motivation=1 if f6=="to fight for the good of the community. To bring it up to standard."
(1 real change made)

. replace motivation=0 if f6=="because there was a lack of people to be in the committee"
(1 real change made)

. replace motivation=0 if f6=="accepted because there was no on else to care and protect the community and it's members"
(1 real change made)

. replace motivation=1 if f6=="arrange meetings, have better / good communication with village, report to senior headman"
(1 real change made)

. replace motivation=0 if f6=="I just accepted the position, because the villagers wanted me to lead them."
(1 real change made)

. replace motivation=1 if f6=="to take care of the water tap"
(1 real change made)

. replace motivation=1 if f6=="lead the community. Care for the community"
(1 real change made)

. replace motivation=1 if f6=="keep water in the community"
(1 real change made)

. replace motivation=0 if f6=="There was no election. Just accepted to be the headman as my father appointed me."
(1 real change made)

. replace motivation=1 if f6=="to lead the community, to take of the water tap"
(1 real change made)

. replace motivation=0 if f6=="just accepted a responsibility given by elders and villagers."
(1 real change made)

. replace motivation=1 if f6=="serving the community, take care of water related needs"
(1 real change made)

. replace motivation=1 if f6=="to lead the community as given by god."
(1 real change made)

. replace motivation=1 if f6=="care and protect the tap, sustain water"
(1 real change made)

. replace motivation=0 if f6=="Just accepted because my late father appointed me and also the villagers trusted/trust me to lead them"
(1 real change made)

. replace motivation=0 if f6=="was appointed to be one of the candidates, just accepted the result of the vote"
(1 real change made)

. replace motivation=0 if f6=="just accepted because people trusted me."
(1 real change made)

. replace motivation=1 if f6=="was given a responsibility and accepted, wanted to help bring private taps to village"
(1 real change made)

. replace motivation=0 if f6=="took over family duties. Was not willing to give the village away to a stranger or another family."
(1 real change made)

. replace motivation=1 if f6=="to keep taps in good condition, to arrange meetings, wotk with community members"
(1 real change made)

. replace motivation=0 if f6=="just accepted the responsibility, because the villagers accepted me as their headman."
(1 real change made)

. replace motivation=0 if f6=="just accepted, because the community voted him"
(1 real change made)

. replace motivation=1 if f6=="to lead the nation. To care for community members. Help provide for community members."
(1 real change made)

. replace motivation=0 if f6=="Accepted villagers decision"
(1 real change made)

. replace motivation=0 if f6=="I just accepted as a calling from God."
(1 real change made)

. replace motivation=1 if f6=="to help develop the village"
(1 real change made)

. replace motivation=0 if f6=="just accepted to lead the villagers, because they appointed/elected me."
(1 real change made)

. replace motivation=1 if f6=="to assist the community, accepted a responsibility given to him by the villagers, help develop the community"
(1 real change made)

. replace motivation=0 if f6=="i just accepted"
(1 real change made)

. replace motivation=1 if f6=="to help develop the village, improve water supply"
(1 real change made)

. replace motivation=0 if f6=="There was no motive, just accepted."
(1 real change made)

. replace motivation=0 if f6=="just accepted the vote"
(0 real changes made)

. replace motivation=1 if f6=="to lead the community. To help develop the community. To help improve people's/community member's lives."
(1 real change made)

. replace motivation=1 if f6=="help out the villagers without expectations"
(1 real change made)

. replace motivation=0 if f6=="" /*leader gave no answer - we set his intrinsic-motivation to 0*/
(385 real changes made)

. replace motivation=0 if f6=="just accepted votes & didnt volunteer to be a candidate"
(1 real change made)

. replace motivation=1 if f6=="A God given gift/role. Did not want to disappoint community members. Lead the community."
(1 real change made)

. replace motivation=0 if f6=="just accepted, because the people voted me"
(1 real change made)

. replace motivation=1 if f6=="God given responsibility as well as responsibility from family and community members. Lead and care for the community."
(1 real change made)

. replace motivation=1 if f6=="to care for taps and the community"
(1 real change made)

. replace motivation=0 if f6=="I just accepted the responsibility"
(1 real change made)

. replace motivation=1 if f6=="wanted to bring taps to the village, especially for drinking water purposes, used to drink from wells"
(1 real change made)

. replace motivation=1 if f6=="assist every community member"
(1 real change made)

. replace motivation=. if id>64
(384 real changes made, 384 to missing)

. lab def motivation 0 "extrinsic" 1 "intrinsic", replace

. lab val motivation motivation

. gen extrinsic_leader = 1 if motivation==0
(419 missing values generated)

. replace extrinsic_leader = 0 if motivation==1
(35 real changes made)

. lab def extrensic 0 "Intrinsic" 1 "Extrinsic", replace

. lab val extrinsic_leader extrensic

. bysort village game1_group: egen group_extrinsic_leader = mean(extrinsic_leader)

. 
. 
. // PERCEPTION OF LEADERS PERFORMANCE BY VILLAGERS
. lab def agree1 1 "strongly disagree" 2 "disagree a little" 3 "neutral" 4 "agree a little" 5 "strongly agree"

. 
. * synchronize scales
. foreach v of varlist b12satisfactionTL b10b {
  2.         replace `v'=5 if `v'==.
  3.         local i = `i' + 1
  4.         gen e_`i'=1 if `v'==4
  5.         replace e_`i'=2 if `v'==3
  6.         replace e_`i'=3 if `v'==5
  7.         replace e_`i'=4 if `v'==2
  8.         replace e_`i'=5 if `v'==1
  9.         replace e_`i'=. if villager==0
 10.         lab val e_`i' agree1
 11.         }
(69 real changes made)
(446 missing values generated)
(1 real change made)
(73 real changes made)
(35 real changes made)
(337 real changes made)
(64 real changes made, 64 to missing)
(69 real changes made)
(444 missing values generated)
(5 real changes made)
(99 real changes made)
(41 real changes made)
(299 real changes made)
(64 real changes made, 64 to missing)

. 
. foreach v of varlist b11g b8b b11f b8c b11h b8d {
  2.         replace `v'=5 if `v'==.
  3.         local i = `i' + 1
  4.         gen e_`i'=1 if `v'==1
  5.         replace e_`i'=2 if `v'==2
  6.         replace e_`i'=3 if `v'==5
  7.         replace e_`i'=4 if `v'==3
  8.         replace e_`i'=5 if `v'==4
  9.         replace e_`i'=. if villager==0
 10.         lab val e_`i' agree1
 11.         }
(91 real changes made)
(424 missing values generated)
(8 real changes made)
(91 real changes made)
(19 real changes made)
(306 real changes made)
(64 real changes made, 64 to missing)
(131 real changes made)
(426 missing values generated)
(13 real changes made)
(131 real changes made)
(30 real changes made)
(252 real changes made)
(64 real changes made, 64 to missing)
(98 real changes made)
(431 missing values generated)
(6 real changes made)
(98 real changes made)
(25 real changes made)
(302 real changes made)
(64 real changes made, 64 to missing)
(208 real changes made)
(391 missing values generated)
(11 real changes made)
(208 real changes made)
(24 real changes made)
(148 real changes made)
(64 real changes made, 64 to missing)
(152 real changes made)
(193 missing values generated)
(10 real changes made)
(152 real changes made)
(6 real changes made)
(25 real changes made)
(64 real changes made, 64 to missing)
(185 real changes made)
(232 missing values generated)
(8 real changes made)
(185 real changes made)
(8 real changes made)
(31 real changes made)
(64 real changes made, 64 to missing)

. 
. *TL specific satisfaction items
. foreach v of varlist b11b b11c b11d b11e b11f b11g b11h {
  2.         replace `v'=5 if `v'==.
  3.         local j = `j' + 1
  4.         gen opinionTL_`j'=1 if `v'==1
  5.         replace opinionTL_`j'=2 if `v'==2
  6.         replace opinionTL_`j'=3 if `v'==5
  7.         replace opinionTL_`j'=4 if `v'==3
  8.         replace opinionTL_`j'=5 if `v'==4
  9.         replace opinionTL_`j'=. if villager==0
 10.         lab val opinionTL_`j' agree1
 11.         }
(207 real changes made)
(245 missing values generated)
(5 real changes made)
(207 real changes made)
(9 real changes made)
(24 real changes made)
(64 real changes made, 64 to missing)
(116 real changes made)
(418 missing values generated)
(8 real changes made)
(116 real changes made)
(25 real changes made)
(269 real changes made)
(64 real changes made, 64 to missing)
(84 real changes made)
(433 missing values generated)
(6 real changes made)
(84 real changes made)
(23 real changes made)
(320 real changes made)
(64 real changes made, 64 to missing)
(126 real changes made)
(421 missing values generated)
(7 real changes made)
(126 real changes made)
(19 real changes made)
(269 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(431 missing values generated)
(6 real changes made)
(98 real changes made)
(25 real changes made)
(302 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(424 missing values generated)
(8 real changes made)
(91 real changes made)
(19 real changes made)
(306 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(193 missing values generated)
(10 real changes made)
(152 real changes made)
(6 real changes made)
(25 real changes made)
(64 real changes made, 64 to missing)

. *scale all items so that higher agreement indicates higher satisfaction
. gen opinionTL_1reverse = 6-opinionTL_1
(64 missing values generated)

. gen opinionTL_7reverse = 6-opinionTL_7
(64 missing values generated)

. 
. alpha e_1 opinionTL_1reverse opinionTL_2 opinionTL_3 opinionTL_4 opinionTL_5 opinionTL_6 opinionTL_7reverse 

Test scale = mean(unstandardized items)

Average interitem covariance:     .3230128
Number of items in the scale:            8
Scale reliability coefficient:      0.7473

. * alpha=0.75 pretty reliable scale, can reduce dimensionality
. *start with simple additative index, 
. egen mean_satisfactionTL = rowmean (e_1 opinionTL_1reverse opinionTL_2 opinionTL_3 opinionTL_4 opinionTL_5 opinionTL_6 opinionTL_7)
(64 missing values generated)

. 
. *DEL specific satisfaction  items
. foreach v of varlist b8a b8b b8c b8d {
  2.         replace `v'=5 if `v'==.
  3.         local k = `k' + 1
  4.         gen opinionDEL_`k'=1 if `v'==1
  5.         replace opinionDEL_`k'=2 if `v'==2
  6.         replace opinionDEL_`k'=3 if `v'==5
  7.         replace opinionDEL_`k'=4 if `v'==3
  8.         replace opinionDEL_`k'=5 if `v'==4
  9.         replace opinionDEL_`k'=. if villager==0
 10.         lab val opinionDEL_`k' agree1
 11.         }
(208 real changes made)
(401 missing values generated)
(16 real changes made)
(208 real changes made)
(36 real changes made)
(141 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(426 missing values generated)
(13 real changes made)
(131 real changes made)
(30 real changes made)
(252 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(391 missing values generated)
(11 real changes made)
(208 real changes made)
(24 real changes made)
(148 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(232 missing values generated)
(8 real changes made)
(185 real changes made)
(8 real changes made)
(31 real changes made)
(64 real changes made, 64 to missing)

. *scale all items so that higher agreement indicates higher satisfaction
. gen opinionTL_4reverse = 6-opinionTL_4
(64 missing values generated)

. 
. alpha e_2 opinionDEL_1 opinionDEL_2 opinionDEL_3 opinionTL_4reverse

Test scale = mean(unstandardized items)
Reversed item:  opinionTL_4reverse

Average interitem covariance:     .2561201
Number of items in the scale:            5
Scale reliability coefficient:      0.5149

. * alpha=0.52 less reliable
. *start with simple additative index, 
. egen mean_satisfactionDEL = rowmean (e_2 opinionDEL_1 opinionDEL_2 opinionDEL_3 opinionTL_4reverse)
(64 missing values generated)

. 
. 
. *generate satisfaction dependent on which leaders villagers were matched with in game 1
. gen satisfaction_TL = mean_satisfactionTL
(64 missing values generated)

. replace satisfaction_TL = . if game1_group!=13
(192 real changes made, 192 to missing)

. gen satisfaction_DEL = mean_satisfactionDEL
(64 missing values generated)

. replace satisfaction_DEL = . if game1_group!=14
(192 real changes made, 192 to missing)

. egen satisfaction_leader = rowmean (satisfaction_TL satisfaction_DEL)
(64 missing values generated)

. lab val satisfaction_leader agree1

. lab var satisfaction_leader "Leader satisfaction index (decision-making, exploitation, etc.)"

. egen z_satisfaction = std(satisfaction_leader)
(64 missing values generated)

. 
. *Satisfaction with performance of DEL / TL
. gen performance_TL = e_1
(64 missing values generated)

. replace performance_TL = . if game1_group!=13
(192 real changes made, 192 to missing)

. gen performance_DEL = e_2
(64 missing values generated)

. replace performance_DEL = . if game1_group!=14
(192 real changes made, 192 to missing)

. egen performance_leader = rowmean (performance_TL performance_DEL)
(64 missing values generated)

. lab val performance_leader agree1

. lab var performance_leader "How satisfied are you with the peformance of the TL/DEL?"

. 
. *label variables
. label var e_1 "Satisfied with the chief in general?"

. label var e_2 "Satisfied with the DEL in general?"

. label var e_3 "The Chief makes decisions in an understandable manner?"

. label var e_4 "The DEL makes decisions in an understandable manner?"

. label var e_5 "The Chief takes appropriate actions against people who disobey the rules?"

. label var e_6 "The DEL takes appropriate actions against people who disobey the rules?"

. label var e_7 "Does the chief exploit his or her position?"

. label var e_8 "Does the DEL exploit his or her position?"

. 
. *Combined Index of leader quality
. gen reverse_e7 = 6-e_7
(64 missing values generated)

. alpha e_1 e_3 e_5 reverse_e7

Test scale = mean(unstandardized items)

Average interitem covariance:     .2492895
Number of items in the scale:            4
Scale reliability coefficient:      0.5633

. 
. 
. ***************************
. **** BIG FIVE
. /*
> Rammstedt, B. & John, O. P. (2007). Measuring personality in one minute or less: A 10-item short version of the Big Five Inventory in English and Germa
> n. 
> Journal of Research in Personality, 41, 203-212. 
> 
> De Young et al. 2010 Psych. Science: Neuroticism covaried with volume of brain regions associated with threat, punishment, and negative affect. 
> http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3049165/
> 
> 
> Positively formualed items: c29, c25, c28, c32, c34
> Negatively formulated items: c26, c27, c30, c31, c33
> */
. 
. *** 1. Step, gen new variables
. foreach var of varlist c25-c34{
  2. replace `var'=. if `var'==5
  3. gen `var'new = `var'
  4. }
(0 real changes made)
(389 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)

. 
. *** 2. Step, recode negatively formulated items ***
. foreach var of varlist c26new c27new c30new c31new c33new{
  2. recode `var' (1=4) (2=3) (3=2) (4=1)
  3. }
(c26new: 64 changes made)
(c27new: 64 changes made)
(c30new: 64 changes made)
(c31new: 64 changes made)
(c33new: 64 changes made)

. quietly tab c26 c26new

. quietly tab c27 c27new

. sum c25-c34     /* we have missings for c25, otherwise complete info*/

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         c25 |         59    2.559322     1.47708          1          4
         c26 |         64    2.328125     1.43709          1          4
         c27 |         64    2.421875    1.499256          1          4
         c28 |         64     2.59375     1.46622          1          4
         c29 |         64     2.65625     1.48237          1          4
-------------+---------------------------------------------------------
         c30 |         64     2.90625    1.317992          1          4
         c31 |         64    2.671875    1.369216          1          4
         c32 |         64      2.6875    1.467911          1          4
         c33 |         64     2.90625    1.399759          1          4
         c34 |         64    2.640625    1.505199          1          4

. 
. *** 3. Step: Build variables ***
. /* Higher values mean more agreeable, extraverted etc. */  
. gen extraversion=(c29new+c26new)/2 if leader!=. 
(384 missing values generated)

. gen agreeableness=(c25new+c31new)/2 if leader!=. & c25!=.
(389 missing values generated)

. replace agreeableness=c31new if leader!=. & c25==.
(5 real changes made)

. gen conscientiousness=(c32new+c27new)/2 if leader!=.
(384 missing values generated)

. gen neuroticism=(c33new+c28new)/2 if leader!=.
(384 missing values generated)

. gen openness=(c34new+c30new)/2 if leader!=.
(384 missing values generated)

. 
. *** 4. Step: test for scale reliability (Cronbach's alpha)
. alpha c29new c26new             /*extraversion: 0.86*/

Test scale = mean(unstandardized items)

Average interitem covariance:     1.615575
Number of items in the scale:            2
Scale reliability coefficient:      0.8624

. alpha c25new c31new, item       /*agreeableness: 0.81*/

Test scale = mean(unstandardized items)

Average interitem covariance:     1.384278
Number of items in the scale:            2
Scale reliability coefficient:      0.8128

. alpha c32new c27new     /*Conscientiousness: 0.92 */

Test scale = mean(unstandardized items)

Average interitem covariance:     1.866071
Number of items in the scale:            2
Scale reliability coefficient:      0.9176

. alpha c33new c28new     /*neuroticism: 0.76 */

Test scale = mean(unstandardized items)

Average interitem covariance:      1.24504
Number of items in the scale:            2
Scale reliability coefficient:      0.7547

. alpha c34new c30new     /*openness: 0.49*/

Test scale = mean(unstandardized items)

Average interitem covariance:     .6532738
Number of items in the scale:            2
Scale reliability coefficient:      0.4922

. 
. *** 5. Step: Standardize BIG5 measures
. foreach var of varlist extraversion-openness{
  2. sum `var'
  3. gen `var'_normal = (`var'-r(min))/(r(max)-r(min))
  4. }

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
extraversion |         64    2.664063     1.36874          1          4
(384 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
agreeablen~s |         64    2.492188    1.310798          1          4
(384 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
conscienti~s |         64    2.632813    1.426067          1          4
(384 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 neuroticism |         64     2.34375    1.284446          1          4
(384 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    openness |         64    2.367188    1.152093          1          4
(384 missing values generated)

. sum *_normal 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
extraversi~l |         64    .5546875    .4562468          0          1
agreeablen~l |         64    .4973958    .4369327          0          1
conscienti~l |         64    .5442708    .4753558          0          1
neuroticis~l |         64    .4479167    .4281487          0          1
openness_n~l |         64    .4557292    .3840311          0          1

. 
. foreach var of varlist *_normal{
  2. ttest `var', by(leader)
  3. }

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32    .5729167    .0816145    .4616813    .4064628    .7393705
  Chiefs |      32    .5364583    .0808551    .4573854    .3715533    .7013633
---------+--------------------------------------------------------------------
combined |      64    .5546875    .0570308    .4562468    .4407205    .6686545
---------+--------------------------------------------------------------------
    diff |            .0364583    .1148846               -.1931927    .2661094
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   0.3173
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.6240         Pr(|T| > |t|) = 0.7520          Pr(T > t) = 0.3760

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32     .546875    .0774952    .4383792    .3888225    .7049275
  Chiefs |      32    .4479167    .0772067    .4367473    .2904525    .6053809
---------+--------------------------------------------------------------------
combined |      64    .4973958    .0546166    .4369327    .3882533    .6065384
---------+--------------------------------------------------------------------
    diff |            .0989583     .109391               -.1197112    .3176278
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   0.9046
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.8154         Pr(|T| > |t|) = 0.3692          Pr(T > t) = 0.1846

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32     .578125    .0843302    .4770436    .4061325    .7501175
  Chiefs |      32    .5104167    .0846461    .4788305    .3377799    .6830535
---------+--------------------------------------------------------------------
combined |      64    .5442708    .0594195    .4753558    .4255305    .6630112
---------+--------------------------------------------------------------------
    diff |            .0677083    .1194845               -.1711377    .3065544
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   0.5667
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.7135         Pr(|T| > |t|) = 0.5730          Pr(T > t) = 0.2865

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32     .484375    .0757132    .4282987    .3299569    .6387931
  Chiefs |      32    .4114583    .0763118     .431685    .2558193    .5670974
---------+--------------------------------------------------------------------
combined |      64    .4479167    .0535186    .4281487    .3409683     .554865
---------+--------------------------------------------------------------------
    diff |            .0729167    .1074988               -.1419703    .2878037
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   0.6783
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.7499         Pr(|T| > |t|) = 0.5001          Pr(T > t) = 0.2501

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32     .515625    .0687345    .3888209    .3754401    .6558099
  Chiefs |      32    .3958333      .06641    .3756714    .2603893    .5312773
---------+--------------------------------------------------------------------
combined |      64    .4557292    .0480039    .3840311    .3598011    .5516573
---------+--------------------------------------------------------------------
    diff |            .1197917    .0955757               -.0712614    .3108447
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   1.2534
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.8926         Pr(|T| > |t|) = 0.2148          Pr(T > t) = 0.1074

. /* No sig differences between leader type*/
. 
. label variable extraversion "B5 extraversion, based on c29 and recoded c26new"

. label variable agreeableness "B5 agreeableness, based on c25 and recoded c31new"

. label variable neuroticism "B5 neuroticism, based on c28 and recoded c33new"

. label variable conscientiousness "B5 conscientiousness, based on c32 and recoded c27new"

. label variable openness "B5 openess, based on c34 and recoded c30new"

. 
. drop c25new-c34new

. 
. 
. // Pairwise correlations
. global big5 *_normal

. foreach var of varlist $big5{
  2. pwcorr extra*_normal `var', sig
  3. }

             | extrav~l extrav~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
extraversi~l |   1.0000   1.0000 
             |   0.0000
             |

             | extrav~l agreea~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
agreeablen~l |   0.8877   1.0000 
             |   0.0000
             |

             | extrav~l consci~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
conscienti~l |   0.8933   1.0000 
             |   0.0000
             |

             | extrav~l neurot~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
neuroticis~l |   0.7980   1.0000 
             |   0.0000
             |

             | extrav~l openne~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
openness_n~l |   0.7514   1.0000 
             |   0.0000
             |

. /* THAT is Puzzling: Big 5s are strongly correlated among each other. Including them jointly in regressions will be problematic due to multicollinearit
> y */
. ******************************************
. 
. 
. 
. 
. *********C13-C24***************************
. /*we used authentic leadership self-assessment questionnaire (pdf).
> Literature uses 5-point scale, and than simply takes the sum of all 4 items. Values above 15 mean high AL, values of 15 and below mean low AL.
> In our case this would mean value of >12 is high AL, value of 12 and below is low AL.
> However, we have one missing for c13. This person would hence automatically get a low AL score. 
> We could circumvent this problem by taking the average score. (NOT NOW)
> */
. alpha c13 c16 c19 c22           /*moral perspective: 0.72*/

Test scale = mean(unstandardized items)

Average interitem covariance:     .7498122
Number of items in the scale:            4
Scale reliability coefficient:      0.7168

. alpha c14 c17 c20 c23           /*balanced processing: 0.94*/

Test scale = mean(unstandardized items)

Average interitem covariance:     1.769841
Number of items in the scale:            4
Scale reliability coefficient:      0.9400

. alpha c15 c18 c21 c24           /*relation transparency: 0.89*/

Test scale = mean(unstandardized items)
Reversed item:  c18

Average interitem covariance:     1.439153
Number of items in the scale:            4
Scale reliability coefficient:      0.8881

. global AL c13 c14 c15 c16 c17 c18 c19 c20 c21 c22 c23 c24

. pca $AL

Principal components/correlation                 Number of obs    =         63
                                                 Number of comp.  =          8
                                                 Trace            =         12
    Rotation: (unrotated = principal)            Rho              =     1.0000

    --------------------------------------------------------------------------
       Component |   Eigenvalue   Difference         Proportion   Cumulative
    -------------+------------------------------------------------------------
           Comp1 |       8.5811      7.32232             0.7151       0.7151
           Comp2 |      1.25878      .460893             0.1049       0.8200
           Comp3 |      .797884      .163611             0.0665       0.8865
           Comp4 |      .634273      .265805             0.0529       0.9393
           Comp5 |      .368468      .159598             0.0307       0.9700
           Comp6 |      .208871      .101596             0.0174       0.9874
           Comp7 |      .107275     .0639178             0.0089       0.9964
           Comp8 |     .0433571     .0433571             0.0036       1.0000
           Comp9 |            0            0             0.0000       1.0000
          Comp10 |            0            0             0.0000       1.0000
          Comp11 |            0            0             0.0000       1.0000
          Comp12 |            0            .             0.0000       1.0000
    --------------------------------------------------------------------------

Principal components (eigenvectors) 

    ------------------------------------------------------------------------------------------------------------
        Variable |    Comp1     Comp2     Comp3     Comp4     Comp5     Comp6     Comp7     Comp8 | Unexplained 
    -------------+--------------------------------------------------------------------------------+-------------
             c13 |   0.3208    0.0298   -0.0208   -0.1035    0.0913    0.3360    0.8725   -0.0500 |           0 
             c14 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
             c15 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
             c16 |   0.2263    0.5218    0.3625   -0.0501   -0.0987   -0.7058    0.1851    0.0213 |           0 
             c17 |   0.3314    0.0409    0.1100    0.0062    0.0989    0.0943   -0.2182   -0.9000 |           0 
             c18 |  -0.2049    0.2666    0.4631    0.7441    0.1512    0.3054    0.0343    0.0387 |           0 
             c19 |  -0.0103    0.7180   -0.6419    0.0961   -0.1419    0.1882   -0.0837   -0.0246 |           0 
             c20 |   0.2379   -0.3204   -0.1916    0.5104   -0.7051   -0.1688    0.1142   -0.0697 |           0 
             c21 |   0.2496   -0.1812   -0.4078    0.4026    0.6572   -0.3738    0.0312    0.0621 |           0 
             c22 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
             c23 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
             c24 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
    ------------------------------------------------------------------------------------------------------------

. estat loadings

Principal component loadings (unrotated)
    component normalization: sum of squares(column) = 1

    ----------------------------------------------------------------------------------------------
                 |    Comp1     Comp2     Comp3     Comp4     Comp5     Comp6     Comp7     Comp8 
    -------------+--------------------------------------------------------------------------------
             c13 |    .3208     .0298   -.02084    -.1035    .09128      .336     .8725   -.05001 
             c14 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
             c15 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
             c16 |    .2263     .5218     .3625   -.05012   -.09875    -.7058     .1851    .02134 
             c17 |    .3314    .04087       .11   .006219    .09893     .0943    -.2182       -.9 
             c18 |   -.2049     .2666     .4631     .7441     .1512     .3054    .03432    .03871 
             c19 |  -.01034      .718    -.6419    .09615    -.1419     .1882   -.08369    -.0246 
             c20 |    .2379    -.3204    -.1916     .5104    -.7051    -.1688     .1142   -.06972 
             c21 |    .2496    -.1812    -.4078     .4026     .6572    -.3738     .0312    .06212 
             c22 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
             c23 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
             c24 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
    ----------------------------------------------------------------------------------------------

. predict AL1, score 
(7 components skipped)

Scoring coefficients 
    sum of squares(column-loading) = 1

    ----------------------------------------------------------------------------------------------
        Variable |    Comp1     Comp2     Comp3     Comp4     Comp5     Comp6     Comp7     Comp8 
    -------------+--------------------------------------------------------------------------------
             c13 |   0.3208    0.0298   -0.0208   -0.1035    0.0913    0.3360    0.8725   -0.0500 
             c14 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
             c15 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
             c16 |   0.2263    0.5218    0.3625   -0.0501   -0.0987   -0.7058    0.1851    0.0213 
             c17 |   0.3314    0.0409    0.1100    0.0062    0.0989    0.0943   -0.2182   -0.9000 
             c18 |  -0.2049    0.2666    0.4631    0.7441    0.1512    0.3054    0.0343    0.0387 
             c19 |  -0.0103    0.7180   -0.6419    0.0961   -0.1419    0.1882   -0.0837   -0.0246 
             c20 |   0.2379   -0.3204   -0.1916    0.5104   -0.7051   -0.1688    0.1142   -0.0697 
             c21 |   0.2496   -0.1812   -0.4078    0.4026    0.6572   -0.3738    0.0312    0.0621 
             c22 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
             c23 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
             c24 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
    ----------------------------------------------------------------------------------------------

. sum AL1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         AL1 |         63   -3.78e-09    2.929351  -3.588274   3.158526

. 
. gen moral_perspective=c13+c16+c19+c22
(385 missing values generated)

. gen balance_processing=c14+c17+c20+c23
(384 missing values generated)

. gen relational_transparency=c15+c18+c21+c24
(384 missing values generated)

. label variable moral_perspective "AL moral perspective, total score on c13 c16 c19 and c22"

. label variable balance_processing "AL balance processing, total score on c14 c17 c20 and c23"

. label variable relational_transparency "AL relational transparency, total score on c15 c18 c21 and c24"

. 
. pwcorr moral balance

             | moral_~e balanc~g
-------------+------------------
moral_pers~e |   1.0000 
balance_pr~g |   0.8252   1.0000 

. pwcorr moral relational

             | moral_~e relati~y
-------------+------------------
moral_pers~e |   1.0000 
relational~y |   0.7987   1.0000 

. pwcorr balance relationa

             | balanc~g relati~y
-------------+------------------
balance_pr~g |   1.0000 
relational~y |   0.9073   1.0000 

. egen helpauthentic = rowmean(moral_pers balance_pro relational_trans)
(384 missing values generated)

. gen authentic_leader1=0 if helpauthe!=.
(384 missing values generated)

. replace authentic_leader1=1 if helpauthe>12 & helpauthe!=.
(34 real changes made)

. label variable authentic_leader1 "1=high authentic leadership, 0 otherwise"

. lab def authentic 0 "Low" 1 "High", replace

. lab val authentic_leader1 authentic

. 
. /* AGAIN, very strong correlation among AL variables. Including them jointly in regressions may be no good idea*/
. gen strong_moral=0 if leader!=.
(384 missing values generated)

. replace strong_moral=1 if moral_perspective>=13 & leader!=.
(23 real changes made)

. gen strong_balance=0 if leader!=.
(384 missing values generated)

. replace strong_balance=1 if balance_processing>=13 & leader!=.
(36 real changes made)

. gen strong_relational=0 if leader!=.
(384 missing values generated)

. replace strong_relational=1 if relational_transparency>=13 & leader!=.
(28 real changes made)

. 
. foreach var of varlist  strong_moral strong_balance strong_relational{
  2. tab2 `var' leader, chi2
  3. }

-> tabulation of strong_moral by leader  

strong_mor |        leader
        al |       DEL     Chiefs |     Total
-----------+----------------------+----------
         0 |        21         20 |        41 
         1 |        11         12 |        23 
-----------+----------------------+----------
     Total |        32         32 |        64 

          Pearson chi2(1) =   0.0679   Pr = 0.794

-> tabulation of strong_balance by leader  

strong_bal |        leader
      ance |       DEL     Chiefs |     Total
-----------+----------------------+----------
         0 |        13         15 |        28 
         1 |        19         17 |        36 
-----------+----------------------+----------
     Total |        32         32 |        64 

          Pearson chi2(1) =   0.2540   Pr = 0.614

-> tabulation of strong_relational by leader  

strong_rel |        leader
   ational |       DEL     Chiefs |     Total
-----------+----------------------+----------
         0 |        17         19 |        36 
         1 |        15         13 |        28 
-----------+----------------------+----------
     Total |        32         32 |        64 

          Pearson chi2(1) =   0.2540   Pr = 0.614

. /* No differences, will not change if we use Fisher exact test for values being very similar*/
. label variable strong_moral"AL dummy for moral perspective"

. label variable strong_balance "AL dummy for balance processing"

. label variable strong_relational "AL dummy for relational transparency"

. 
. gen authentic_leader2=0 if leader!=.
(384 missing values generated)

. replace authentic_leader2=1 if strong_moral==1 & strong_balance==1 & strong_relational==1
(17 real changes made)

. label variable authentic_leader2 "Measure of authentic leadership based on dummies"

. 
. * standardize authentic leadership scale (z-scores)
. egen AL_score=rowmean(moral_perspective balance_processing relational_transparency)
(384 missing values generated)

. egen z_AL_score=std(AL_score)
(384 missing values generated)

. 
. * Village level leader motivation
. bysort village: egen aux_motivation=total(motivation)

. gen intrinsic_DEL=0 if motivation==0 & TL==0
(437 missing values generated)

. replace intrinsic_DEL=1 if motivation==1 & TL==0
(21 real changes made)

. gen intrinsic_TL=0 if motivation==0 & TL==1
(430 missing values generated)

. replace intrinsic_TL=1 if motivation==1 & TL==1
(14 real changes made)

. gen sum_motivation=.
(448 missing values generated)

. replace sum_motivation=0 if aux_motivation==0
(56 real changes made)

. replace sum_motivation=1 if aux_motivation==1 & intrinsic_DEL==0
(7 real changes made)

. replace sum_motivation=1 if aux_motivation==1 & intrinsic_TL==1
(7 real changes made)

. replace sum_motivation=2 if aux_motivation==1 & intrinsic_TL==0
(14 real changes made)

. replace sum_motivation=2 if aux_motivation==1 & intrinsic_DEL==1
(14 real changes made)

. replace sum_motivation=3 if aux_motivation==2
(98 real changes made)

. lab def motivation2 0 "both extrinsic" 1 "DEL extrinsic/ TL intrinsic" 2 "TL extrinsic/ DEL intrinsic"  3 "both intrinsic", replace

. lab val sum_motivation motivation2

. 
. gen bonus_AL=bonus*authentic_leader1
(384 missing values generated)

. 
. 
. 
. /* NOTE:
> - FWe drop d5j (Motorrad), cell phone and freezer as this has too little variation. Drop sewing machine as no obs for leader
> - Include dummies for d6 and d7a, in case of d6 a dummy if main source is private tap (d6==1) und in case of d7 if d7a=02 (concrete)
> */
. 
. * Dummies for main income sources
. gen i_sf=0

. replace i_sf=1 if d1==3 | d1==4
(138 real changes made)

. lab var i_sf "Farming"

. 
. gen i_ob=0 

. replace i_ob=1 if d1==5
(67 real changes made)

. label var i_ob "Own business"

. 
. gen i_em=0

. replace i_em=1 if d1==1 | d1==2
(45 real changes made)

. label var i_em "Employment"

. 
. gen i_p=0

. replace i_p=1 if d1==6
(93 real changes made)

. label var i_p "Pension"

. 
. 
. 
. gen privatetap = (d6==1) if d6!=.
(5 missing values generated)

. gen robustfloor = (d7a==2 | d7a==4) if d7a!=.
(6 missing values generated)

. label variable robustfloor "Dummy taking 1 if concrete or wooden housefloor, based on d7a"

. label variable privatetap "Dummy if privat tap, based on d6"

. 
. // Normalize livestock assets to [0,1] range
. sum d3a 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         d3a |        442    8.873303    19.44391          0        300

. gen z_cattle = (d3a - r(min))/(r(max)-r(min))
(6 missing values generated)

. sum d3b

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         d3b |        442    .3733032    2.747666          0         30

. gen z_sheeps = (d3b - r(min))/(r(max)-r(min))
(6 missing values generated)

. sum d3c

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         d3c |        442    13.35068    16.80289          0        200

. gen z_goats = (d3c - r(min))/(r(max)-r(min))
(6 missing values generated)

. 
. bysort villager: sum z_cattle z_sheeps z_goats

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> villager = 0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         64    .0488021    .0654421          0         .4
    z_sheeps |         64      .00625         .05          0         .4
     z_goats |         64    .1092188    .1390792          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> villager = 1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |        378    .0263228    .0642247          0          1
    z_sheeps |        378    .0134921    .0968875          0          1
     z_goats |        378    .0595635    .0683105          0         .5


. 
. global asset z_cattle z_sheeps z_goats d5a d5b d5c d5d d5e d5f d5g d5i d5j d5k d5l d5m d5n robustfloor privatetap

. global asset2 d5a d5b d5d d5f d5g d5i d5k-d5n privatetap

. 
. pca $asset2, comp(1)

Principal components/correlation                 Number of obs    =        431
                                                 Number of comp.  =          1
                                                 Trace            =         11
    Rotation: (unrotated = principal)            Rho              =     0.2645

    --------------------------------------------------------------------------
       Component |   Eigenvalue   Difference         Proportion   Cumulative
    -------------+------------------------------------------------------------
           Comp1 |      2.90923      1.66106             0.2645       0.2645
           Comp2 |      1.24818      .104836             0.1135       0.3779
           Comp3 |      1.14334      .186404             0.1039       0.4819
           Comp4 |      .956937      .136826             0.0870       0.5689
           Comp5 |      .820111     .0212259             0.0746       0.6434
           Comp6 |      .798885     .0776617             0.0726       0.7161
           Comp7 |      .721223     .0385552             0.0656       0.7816
           Comp8 |      .682668     .0664126             0.0621       0.8437
           Comp9 |      .616255     .0419399             0.0560       0.8997
          Comp10 |      .574316     .0454601             0.0522       0.9519
          Comp11 |      .528855            .             0.0481       1.0000
    --------------------------------------------------------------------------

Principal components (eigenvectors) 

    --------------------------------------
        Variable |    Comp1 | Unexplained 
    -------------+----------+-------------
             d5a |   0.1841 |       .9014 
             d5b |   0.3884 |       .5612 
             d5d |   0.3551 |       .6332 
             d5f |   0.2575 |       .8071 
             d5g |   0.3441 |       .6556 
             d5i |   0.3654 |       .6117 
             d5k |   0.2157 |       .8646 
             d5l |   0.2627 |       .7992 
             d5m |   0.3276 |       .6878 
             d5n |   0.2742 |       .7813 
      privatetap |   0.2702 |       .7877 
    --------------------------------------

. estat loadings

Principal component loadings (unrotated)
    component normalization: sum of squares(column) = 1

    ------------------------
                 |    Comp1 
    -------------+----------
             d5a |    .1841 
             d5b |    .3884 
             d5d |    .3551 
             d5f |    .2575 
             d5g |    .3441 
             d5i |    .3654 
             d5k |    .2157 
             d5l |    .2627 
             d5m |    .3276 
             d5n |    .2742 
      privatetap |    .2702 
    ------------------------

. predict pc1, score

Scoring coefficients 
    sum of squares(column-loading) = 1

    ------------------------
        Variable |    Comp1 
    -------------+----------
             d5a |   0.1841 
             d5b |   0.3884 
             d5d |   0.3551 
             d5f |   0.2575 
             d5g |   0.3441 
             d5i |   0.3654 
             d5k |   0.2157 
             d5l |   0.2627 
             d5m |   0.3276 
             d5n |   0.2742 
      privatetap |   0.2702 
    ------------------------

. estat kmo // legitimate pca, kmo=0.79 > 0.7

Kaiser-Meyer-Olkin measure of sampling adequacy

    -----------------------
        Variable |     kmo 
    -------------+---------
             d5a |  0.7485 
             d5b |  0.8123 
             d5d |  0.7777 
             d5f |  0.7751 
             d5g |  0.8669 
             d5i |  0.8242 
             d5k |  0.7672 
             d5l |  0.7011 
             d5m |  0.7625 
             d5n |  0.7944 
      privatetap |  0.8454 
    -------------+---------
         Overall |  0.7924 
    -----------------------

. sum pc1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         pc1 |        431   -7.56e-09    1.705647  -2.108749   6.471886

. gen pca_wealth=pc1
(17 missing values generated)

. label var pca_wealth "Socio-economic status proxy based on first component of pca"

. 
. xtile quintile=pca_wealth, nq(5)

. bysort leader: sum pca_wealth

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> leader = DEL

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  pca_wealth |         32     .451963    1.621559  -2.108749   3.726418

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> leader = Chiefs

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  pca_wealth |         32    1.702505    1.805242  -1.535614   6.471886

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> leader = .

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  pca_wealth |        367   -.1878555    1.616336  -2.108749    5.90319


. label define quints 1 "Poorest" 2 "Poor" 3 "Medium" 4 "Wealthy" 5 "Wealthiest"

. label values quintile quints

. 
. bysort quintile: sum $asset

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Poorest

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         90    .0064074    .0161085          0         .1
    z_sheeps |         90    .0018519    .0175682          0   .1666667
     z_goats |         90    .0268889    .0432498          0         .2
         d5a |         91    .4395604    .4990834          0          1
         d5b |         91           0           0          0          0
-------------+---------------------------------------------------------
         d5c |         91    .9230769    .2679457          0          1
         d5d |         91           0           0          0          0
         d5e |         91           0           0          0          0
         d5f |         91           0           0          0          0
         d5g |         91           0           0          0          0
-------------+---------------------------------------------------------
         d5i |         91           0           0          0          0
         d5j |         91           0           0          0          0
         d5k |         91     .010989    .1048285          0          1
         d5l |         91           0           0          0          0
         d5m |         91           0           0          0          0
-------------+---------------------------------------------------------
         d5n |         91    .1648352    .3730873          0          1
 robustfloor |         91     .032967    .1795395          0          1
  privatetap |         91    .0659341    .2495417          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Poor

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         82    .0156911    .0245088          0   .1066667
    z_sheeps |         82    .0146341    .1068437          0   .9333333
     z_goats |         82    .0370122    .0440318          0         .2
         d5a |         83    .9036145    .2969133          0          1
         d5b |         83           0           0          0          0
-------------+---------------------------------------------------------
         d5c |         83    .9638554    .1877845          0          1
         d5d |         83    .0120482    .1097643          0          1
         d5e |         83    .0120482    .1097643          0          1
         d5f |         83           0           0          0          0
         d5g |         83           0           0          0          0
-------------+---------------------------------------------------------
         d5i |         83     .060241    .2393792          0          1
         d5j |         83           0           0          0          0
         d5k |         83    .1325301    .3411274          0          1
         d5l |         83           0           0          0          0
         d5m |         83           0           0          0          0
-------------+---------------------------------------------------------
         d5n |         83    .5421687    .5012473          0          1
 robustfloor |         83    .0481928    .2154753          0          1
  privatetap |         83     .313253    .4666359          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Medium

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |        100       .0332    .1024579          0          1
    z_sheeps |        100    .0036667    .0176606          0         .1
     z_goats |        100      .06995    .0820953          0         .5
         d5a |        101    .9108911    .2863218          0          1
         d5b |        101     .039604    .1959996          0          1
-------------+---------------------------------------------------------
         d5c |        101     .950495    .2180017          0          1
         d5d |        101     .049505    .2180017          0          1
         d5e |        101     .019802    .1400141          0          1
         d5f |        101     .009901    .0995037          0          1
         d5g |        101    .0792079      .27141          0          1
-------------+---------------------------------------------------------
         d5i |        101    .2475248    .4337267          0          1
         d5j |        101     .029703    .1706133          0          1
         d5k |        101    .3762376     .486857          0          1
         d5l |        101     .009901    .0995037          0          1
         d5m |        101           0           0          0          0
-------------+---------------------------------------------------------
         d5n |        101    .7821782    .4148243          0          1
 robustfloor |        100         .07    .2564324          0          1
  privatetap |        101    .5544554    .4995047          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Wealthy

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         70    .0448571    .0639738          0   .3333333
    z_sheeps |         70    .0171429    .1215497          0          1
     z_goats |         70    .0861429    .0781033          0        .35
         d5a |         70    .9285714    .2593989          0          1
         d5b |         70    .2142857    .4132886          0          1
-------------+---------------------------------------------------------
         d5c |         70    .9714286    .1678015          0          1
         d5d |         70    .1571429    .3665631          0          1
         d5e |         70    .0714286    .2593989          0          1
         d5f |         70    .0142857    .1195229          0          1
         d5g |         70    .2142857    .4132886          0          1
-------------+---------------------------------------------------------
         d5i |         70    .6714286    .4730851          0          1
         d5j |         70    .0857143     .281963          0          1
         d5k |         70    .2857143    .4550158          0          1
         d5l |         70    .0714286    .2593989          0          1
         d5m |         70    .1142857    .3204552          0          1
-------------+---------------------------------------------------------
         d5n |         70    .8857143    .3204552          0          1
 robustfloor |         70    .0714286    .2593989          0          1
  privatetap |         70    .6428571    .4826171          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Wealthiest

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         86    .0513953    .0617892          0         .4
    z_sheeps |         86     .029845    .1392819          0   .8666667
     z_goats |         86    .1172093    .1187424          0          1
         d5a |         86    .9186047    .2750451          0          1
         d5b |         86    .6162791    .4891434          0          1
-------------+---------------------------------------------------------
         d5c |         86    .9534884    .2118255          0          1
         d5d |         86    .5348837    .5017071          0          1
         d5e |         86     .244186    .4321233          0          1
         d5f |         86    .2906977    .4567476          0          1
         d5g |         86    .5813953    .4962238          0          1
-------------+---------------------------------------------------------
         d5i |         86    .7790698    .4173068          0          1
         d5j |         86    .0581395    .2353796          0          1
         d5k |         86    .4767442    .5023883          0          1
         d5l |         86     .244186    .4321233          0          1
         d5m |         86    .3837209    .4891434          0          1
-------------+---------------------------------------------------------
         d5n |         86    .9069767    .2921686          0          1
 robustfloor |         86    .1046512    .3078988          0          1
  privatetap |         86    .7790698    .4173068          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = .

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         14    .0235714    .0295685          0   .0833333
    z_sheeps |         14           0           0          0          0
     z_goats |         14       .0675    .0560134          0       .175
         d5a |         11    .8181818    .4045199          0          1
         d5b |         11    .2727273    .4670994          0          1
-------------+---------------------------------------------------------
         d5c |         12    .9166667    .2886751          0          1
         d5d |         11    .1818182    .4045199          0          1
         d5e |         12    .1666667    .3892495          0          1
         d5f |         11    .0909091    .3015113          0          1
         d5g |         11    .0909091    .3015113          0          1
-------------+---------------------------------------------------------
         d5i |         12    .0833333    .2886751          0          1
         d5j |         11    .0909091    .3015113          0          1
         d5k |         11    .1818182    .4045199          0          1
         d5l |         10          .1    .3162278          0          1
         d5m |         10          .2     .421637          0          1
-------------+---------------------------------------------------------
         d5n |         10          .2     .421637          0          1
 robustfloor |         12    .0833333    .2886751          0          1
  privatetap |         12         .25     .452267          0          1


. 
. 
. 
. 
. *** Create Variable that informs about years living in village ***
. /* Problem: for 50% of sample, a6 takes the value of "1". What does this mean? */
. 
. ** lifetime spent in village
. replace a6=2000 if id==380
(1 real change made)

. *Assistant for got a zero in the year
. gen years_in_village = .
(448 missing values generated)

. gen a6_new = 2015-a6 if a6 > 1
(226 missing values generated)

. label variable a6_new "Transformation of a6 in years"

. replace years_in_village = age if a6==1
(222 real changes made)

. replace  years_in_village = a6_new if a6 > 1
(222 real changes made)

. gen rootedness=years_in_village/age
(5 missing values generated)

. replace rootedness=1 if rootedness > 1
(58 real changes made)

. label variable rootedness "Fraction of lifetime spent in village"

. *some are younger than the time spent in the village (they probably have been living there all their life)
. 
. 
. *** experience in years
. gen experience = 2015-f1
(384 missing values generated)

. label variable experience "Years in office"

. 
. 
. // Competition
. gen f5new=f5
(390 missing values generated)

. replace f5new=0 if f5new==. & leader!=.
(6 real changes made)

. rename f5new competitor

. 
. gen dcompetitor = (competitor>0 & competitor!=.)

. label variable competitor "Number of competitors in previous election"

. label variable dcompetitor "Dummy=1 if there were some other candidates in previous election"

. 
. /*
> gen competitor2=competitor
> replace competitor2=20 if competitor2>=20 & competitor2!=.
> */
. 
. // Term office
. gen term=f2a
(384 missing values generated)

. label variable term "Dummy=1 if person faces term office"

. 
. // Elected
. gen elected =1 if f3b==1 | (f3==1 | f3==2)
(412 missing values generated)

. replace elected=0 if elected ==. & leader!=.
(28 real changes made)

. label variable elected "Dummy=1 if person was elected rather than appointed"

. 
. // Secret elections
. gen secretelec = 1 if f4c==1
(432 missing values generated)

. replace secretelec = 0 if f4c>1 & f4c!=.
(47 real changes made)

. label var secretelec "Dummy =1 if elections were secretly held"

. 
. 
. save "$working_ANALYSIS\processed\analysis_wide.dta", replace
file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\processed\analysis_wide.dta saved

. 
. 
. /*
> Reshape dataset into long-format for analysis of bonus payment rounds.
> Generate additional variables for analysis in long-format.
> */
. reshape long rule vote majority payoff, i(id) j(decision)
(note: j = 1 2 3 4 5 6)
(note: payoff2 not found)
(note: payoff3 not found)
(note: payoff4 not found)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                      448   ->    2688
Number of variables                 442   ->     426
j variable (6 values)                     ->   decision
xij variables:
                  rule1 rule2 ... rule6   ->   rule
                  vote1 vote2 ... vote6   ->   vote
      majority1 majority2 ... majority6   ->   majority
            payoff1 payoff2 ... payoff6   ->   payoff
-----------------------------------------------------------------------------

. 
. *Drop all decisions except 1, 5 and 6 (basic, bonus1, bonus2)
. drop if decision>1 & decision<5
(1,344 observations deleted)

. drop if id>64
(1,152 observations deleted)

. order decision rule vote majority payoff, after(session_id)

. order session_id, after(id)

. 
. *---------------------------------------------------------
. * Generating additional variables for long-format analysis
. *---------------------------------------------------------
. * Binary rule choice
. gen dem=0

. replace dem=1 if rule==1
(123 real changes made)

. 
. gen dic=0

. replace dic=1 if rule==3
(14 real changes made)

. 
. gen fake=0

. replace fake=1 if rule==2
(55 real changes made)

. *bonus: 0=no bonus, 1=any bonus
. gen bonus=0

. replace bonus=1 if decision>4
(128 real changes made)

. 
. 
. *bonus_size: 0=no, 1=small, 2=large
. gen bonus_size=0

. replace bonus_size=1 if decision==5
(64 real changes made)

. replace bonus_size=2 if decision==6
(64 real changes made)

. lab def bonus_size1 0 "Baseline" 1 "Small Bonus" 2 "Large Bonus", replace

. lab val bonus_size bonus_size1

. 
. 
. *Generate identifier for the first bonus that was offered
. gen bonus_first=0 if (decision==6 & randomization<7) | (decision==5 & randomization>6)
(128 missing values generated)

. replace bonus_first=1 if (decision==5 & randomization<7) | (decision==6 & randomization>6)
(64 real changes made)

. label def first_lab 0 "3rd round" 1 "2nd round", replace

. lab val bonus_first first_lab

. 
. replace rule=1 if dem==1
(0 real changes made)

. replace rule=2 if fake==1
(0 real changes made)

. replace rule=3 if dic==1
(0 real changes made)

. 
. label def bonus 0 "Baseline (n=64)" 1 "Pooled Bonus (n=128)", replace

. label def rule 1 "Democratic" 2 "Pseudo-democratic" 3 "Autocratic" , replace

. label val bonus bonus

. label val rule rule

. 
. order bonus bonus_size bonus_order randomization dem dic fake, after(majority)

. 
. *rule choice variable for basic round
. gen rule_basic = rule if decision==1
(128 missing values generated)

. replace rule_basic = rule_basic[_n-1] if missing(rule_basic)
(128 real changes made)

. order rule_basic, after(rule)

. label def rule_basic 1 "Base: Democratic (n=41)" 2 "Base: Pseudo (n=14)" 3 "Base: Autocrat (n=9)", replace

. label val rule_basic rule_basic

. 
. 
. qui tab bonus_size, gen(bonus_)

. qui tab bonus_order, gen(order_)

. qui tab rule_basic, gen(baseline_)

. 
. *interactions 
. gen bonus_democrat=bonus*baseline_1

. gen bonus_pseudo=bonus*baseline_2

. gen bonus_dictator=bonus*baseline_3

. 
. *gen round= 1 if bonus_first==.
. replace round = 2 if bonus_first==1
variable round not found
r(111);

end of do-file

r(111);

. do "C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\scripts\02_generate.do"

. *--------------------------------------------------------------------------------------
. * SCRIPT: 02_generate.do
. * PURPOSE: generates additional variables used in the analysis
. *--------------------------------------------------------------------------------------
. 
. 
. 
. clear

. use "$working_ANALYSIS\processed\data_clean.dta"

. 
. // GAME 1: PROCEDURAL FAIRNESS
. 
. rename rule_1 rule1

. rename rule_2 rule2

. rename rule_3 rule3

. rename rule_4 rule4

. rename rule_bonus_1 rule5

. rename rule_bonus_2 rule6

. 
. rename vote_1 vote1

. rename vote_2 vote2

. rename vote_3 vote3

. rename vote_4 vote4

. rename vote_bonus_1 vote5

. rename vote_bonus2 vote6

. 
. rename majority_1 majority1

. rename majority_2 majority2

. rename majority_3 majority3

. rename majority_4 majority4

. rename majority_bonus1 majority5

. rename majority_bonus2 majority6

. 
. 
. // Create dummies for democratic and autocratic choices
. *democratic
. gen dem1=0

. replace dem1=1 if rule1==1
(41 real changes made)

. gen dem2=0

. replace dem2=1 if rule2==1
(39 real changes made)

. gen dem3=0

. replace dem3=1 if rule3==1
(44 real changes made)

. gen dem4=0

. replace dem4=1 if rule4==1
(37 real changes made)

. gen dem5=0

. replace dem4=1 if rule5==1
(10 real changes made)

. gen dem6=0

. replace dem4=1 if rule6==1
(5 real changes made)

. egen dem7 = rowmean(dem1 dem2 dem3 dem4)

. 
. *dictator
. gen dic1=0

. replace dic1=1 if rule1==2
(9 real changes made)

. gen dic2=0

. replace dic2=1 if rule2==2
(12 real changes made)

. gen dic3=0

. replace dic3=1 if rule3==2
(7 real changes made)

. gen dic4=0

. replace dic4=1 if rule4==2
(7 real changes made)

. gen dic5=0

. replace dic5=1 if rule5==2
(3 real changes made)

. gen dic6=0

. replace dic6=1 if rule6==2
(2 real changes made)

. 
. *pseudo-democratic
. gen fake1=0

. replace fake1=1 if rule1==3
(14 real changes made)

. gen fake2=0

. replace fake2=1 if rule2==3
(13 real changes made)

. gen fake3=0

. replace fake3=1 if rule3==3
(13 real changes made)

. gen fake4=0

. replace fake4=1 if rule4==3
(20 real changes made)

. gen fake5=0

. replace fake5=1 if rule5==3
(20 real changes made)

. gen fake6=0

. replace fake6=1 if rule6==3
(21 real changes made)

. 
. replace rule1=1 if dem1==1
(0 real changes made)

. replace rule1=2 if fake1==1
(14 real changes made)

. replace rule1=3 if dic1==1
(9 real changes made)

. replace rule2=1 if dem2==1
(0 real changes made)

. replace rule2=2 if fake2==1
(13 real changes made)

. replace rule2=3 if dic2==1
(12 real changes made)

. replace rule3=1 if dem3==1
(0 real changes made)

. replace rule3=2 if fake4==1
(17 real changes made)

. replace rule3=3 if dic4==1
(4 real changes made)

. replace rule4=1 if dem4==1
(15 real changes made)

. replace rule4=2 if fake4==1
(20 real changes made)

. replace rule4=3 if dic4==1
(7 real changes made)

. replace rule5=1 if dem5==1
(0 real changes made)

. replace rule5=2 if fake5==1
(20 real changes made)

. replace rule5=3 if dic5==1
(3 real changes made)

. replace rule6=1 if dem6==1
(0 real changes made)

. replace rule6=2 if fake6==1
(21 real changes made)

. replace rule6=3 if dic6==1
(2 real changes made)

. 
. *subsample autocratic rule choices
. gen pseudo1=0

. replace pseudo1=1 if rule1==3
(9 real changes made)

. replace pseudo1=. if rule1==1
(41 real changes made, 41 to missing)

. gen pseudo2=0

. replace pseudo2=1 if rule2==3
(12 real changes made)

. replace pseudo2=. if rule2==1
(39 real changes made, 39 to missing)

. gen pseudo3=0

. replace pseudo3=1 if rule3==3
(11 real changes made)

. replace pseudo3=. if rule3==1
(31 real changes made, 31 to missing)

. gen pseudo4=0

. replace pseudo4=1 if rule4==3
(7 real changes made)

. replace pseudo4=. if rule4==1
(37 real changes made, 37 to missing)

. egen pseudo_all = rowmean(pseudo1 pseudo2 pseudo3 pseudo4)
(25 missing values generated)

. 
. *same rule across all three rounds
. gen stable_rule=0

. replace stable_rule=1 if rule1==rule5==rule6
(30 real changes made)

. 
. *game1_group
. *devide each village into two groups of game 1: TL or DEL (13=TL, 14=DEL)?
. gen game1_group = 13

. replace game1_group =14 if session_id==1 | session_id==2 | session_id==5 | session_id==6 | session_id==9 | session_id==10 | session_id==14
(224 real changes made)

. order game1_group, before(vote1)

. 
. *villager_preference1
. *now the villager preferences, i.e. majority without leader (6 villager per group, a draw is therefore possible)
. * villager_preference1 ("A", "B" or "draw") gives the preferences of the six villager (without leader) in the first decision of game 1
. egen count_A = total(vote1==1) if id>64, by(village game1_group)
(64 missing values generated)

. order count_A, after(vote1)

. 
. replace count_A = count_A[_n-1] if session_id==13
(0 real changes made)

. replace count_A = count_A[_n-4] if session_id==14
(0 real changes made)

. 
. gen villager_preference1="A"

. replace villager_preference1 = "B" if count_A<3
(276 real changes made)

. replace villager_preference1 = "draw" if count_A==3
variable villager_preference1 was str1 now str4
(72 real changes made)

. order villager_preference1, after(vote1)

. label variable villager_preference "majority vote of 6 villagers over distribution A and B"

. 
. 
. drop count_A

. 
. *Bonus order
. gen bonus_order=. if id >64
(448 missing values generated)

. replace bonus_order=1 if  randomization<7
(38 real changes made)

. replace bonus_order=0 if  randomization>6 
(410 real changes made)

. label def bonus_order 1 "Small first" 0 "Large first", replace

. lab val bonus_order bonus_order

. 
. *Identifier for first bonus that was offered to leaders
. gen rule_bonus_first = rule5 if bonus_order==1
(414 missing values generated)

. replace rule_bonus_first = rule6 if bonus_order==0
(30 real changes made)

. gen rule_bonus_second = rule5 if bonus_order==0
(418 missing values generated)

. replace rule_bonus_second = rule6 if bonus_order==1
(34 real changes made)

. 
. *New variable to identify baseline rule choices
. gen rule_base=rule1
(384 missing values generated)

. lab def rulebasic 1 "Base: Democratic" 2 "Base: Pseudo" 3 "Base: Autocratic", replace

. lab val rule_base rulebasic

. bysort village game1_group: egen group_rule_base = mean(rule_base)

. lab val group_rule_base rulebasic

. tab group_rule_base, gen(rule_base)

 group_rule_base |      Freq.     Percent        Cum.
-----------------+-----------------------------------
Base: Democratic |        287       64.06       64.06
    Base: Pseudo |         98       21.88       85.94
Base: Autocratic |         63       14.06      100.00
-----------------+-----------------------------------
           Total |        448      100.00

. 
. * label rule choices consistently
. lab def rule 1 "Democratic" 2 "Pseudo-democratic" 3 "Autocratic" , replace

. foreach x of varlist rule1 rule5 rule6 rule_bonus_first rule_bonus_second {
  2.         lab val `x' rule
  3.         }

. 
. *payoff1, payoff5, payoff6
. *what do these villagers get?
. *Basic
. gen payoff1 = 0 if id<65
(384 missing values generated)

. replace payoff1 = 1 if (id<65) & ((rule1==1 & majority1=="B") | (rule1!=1 & vote1==2))
(41 real changes made)

. label variable payoff1 "distribution A or B that is paid to the group in decision 1"

. 
. *Small Bonus
. gen payoff5 = 0 if id<65
(384 missing values generated)

. replace payoff5 = 1 if (id<65) & ((rule5==1 & majority5=="B") | (rule5!=1 & vote5==2))
(40 real changes made)

. label variable payoff5 "distribution A or B that is paid to the group in small bonus"

. 
. *Large Bonus
. gen payoff6 = 0 if id<65
(384 missing values generated)

. replace payoff6 = 1 if (id<65) & ((rule6==1 & majority6=="B") | (rule6!=1 & vote6==2))
(42 real changes made)

. label variable payoff6 "distribution A or B that is paid to the group in large bonus"

. 
. lab def payoff_lab 0 "A" 1 "B"

. foreach var of varlist payoff1 payoff5 payoff6 {
  2.         lab val `var' payoff_lab
  3.         }

.         
. order payoff1 payoff5 payoff6, after(villager_preference1)

. gsort village game1_group -session_id

. 
. by village game1_group: replace payoff1 = payoff1[_n-1] if missing(payoff1)
(384 real changes made)

. by village game1_group: replace payoff5 = payoff5[_n-1] if missing(payoff5)
(384 real changes made)

. by village game1_group: replace payoff6 = payoff6[_n-1] if missing(payoff6)
(384 real changes made)

. 
. sort village session_id

. 
. 
. 
. // Leadertypes based on baseline stage 1 & stage 2 decisions
. gen true_democrat=0

. replace true_democrat=1 if rule1==1 
(41 real changes made)

. gen pseudo_democrat=0

. replace pseudo_democrat=1 if rule1==2 & vote1==1
(9 real changes made)

. gen paternalistic=0

. replace paternalistic=1 if rule1==2 & vote1==2
(5 real changes made)

. gen dictator=0

. replace dictator=1 if rule1==3 & vote1==1
(6 real changes made)

. gen benevolent_dictator=0

. replace benevolent_dictator=1 if rule1==3 & vote1==2
(3 real changes made)

. 
. gen leader_type=1 if true_democrat==1
(407 missing values generated)

. replace leader_type=2 if pseudo_democrat==1
(9 real changes made)

. replace leader_type=3 if paternalistic==1
(5 real changes made)

. replace leader_type=4 if dictator==1
(6 real changes made)

. replace leader_type=5 if benevolent_dictator==1
(3 real changes made)

. lab def lab_types 1 "True-democrat" 2 "Pseudo-democrat" 3 "Paternalist" 4 "Autocrat" 5 "Benevolent-Autocrat"

. lab val leader_type lab_types

. 
. 
. bysort village game1_group: egen group_leader_type = mean(leader_type)

. lab val group_leader_type lab_types

. 
. lab def vote_lab 1 "Distribution A" 2 "Distribution B"

. lab val vote1 vote_lab

. tab group_leader_type, gen(leader_type)

  group_leader_type |      Freq.     Percent        Cum.
--------------------+-----------------------------------
      True-democrat |        287       64.06       64.06
    Pseudo-democrat |         63       14.06       78.13
        Paternalist |         35        7.81       85.94
           Autocrat |         42        9.38       95.31
Benevolent-Autocrat |         21        4.69      100.00
--------------------+-----------------------------------
              Total |        448      100.00

. 
. 
. 
. ************************************
. *** 1C: Preference game (Game 2)
. 
. gen social_type=6 

. replace social_type = 1 if decision1==1 & decision2==1 & decision3==1
(228 real changes made)

. replace social_type = 2 if decision1==1 & decision2==1 & decision3==2
(51 real changes made)

. replace social_type = 3 if decision1==1 & decision2==2 & decision3==1
(61 real changes made)

. replace social_type = 4 if decision1==1 & decision2==2 & decision3==2
(32 real changes made)

. replace social_type = 5 if decision1==2 & decision2==1 & decision3==2
(24 real changes made)

. 
. gen social_type2 =.
(448 missing values generated)

. replace social_type2=1 if (social_type==1 | social_type==2)
(279 real changes made)

. replace social_type2=2 if (social_type==3 | social_type==4)
(93 real changes made)

. replace social_type2=3 if social_type==5
(24 real changes made)

. replace social_type2=4 if social_type2==. & social_type==6
(52 real changes made)

. 
. # delimit;
delimiter now ;
. label define social
> 1       "Strongly egalitarian"
> 2       "Weakly egalitarian"
> 3   "Strongly generous"
> 4       "Weakly generous"
> 5       "Spiteful"
> 6       "Ambiguous";

. label define social2
> 1       "Egalitarian"
> 2       "Generous"
> 3   "Spiteful"
> 4       "Ambiguous";

. # delimit cr
delimiter now cr
. label values  social_type social

. label values  social_type2 social2

. 
. 
. 
. // Gen dummy for no education
. gen no_educ = 0 if education>0 & education!=.
(44 missing values generated)

. replace no_educ =1 if education==0
(41 real changes made)

. 
. // age-squared
. gen age_sq = age*age
(1 missing value generated)

. 
. // intrinsic motivation - binary variable:
. * Based on the definition of Frey & Oberholzer (1997) ->
. * intrinsic(=1): one likes to do them or because the individual derives some satisfaction from doing  his or her duty
. *extrinsic(=0): activated from the outside
. * if there are both intrinsic and extrinsic motives mentioned, the variable takes the value 1 - there can be some intrinsic motives crowded out by the 
> bonus paymen 
. 
. gen motivation=.
(448 missing values generated)

. replace motivation=0 if f6=="accepted because people but trust in her"
(1 real change made)

. replace motivation=0 if f6=="just accepted what the villagers voted."
(1 real change made)

. replace motivation=1 if f6=="to help the community mantain water"
(1 real change made)

. replace motivation=1 if f6=="because I believe that I was born with characteristic of a leader."
(1 real change made)

. replace motivation=0 if f6=="i just accepted because the villagers appointed me"
(1 real change made)

. replace motivation=1 if f6=="to lead the community. A calling from god. Care for the community"
(1 real change made)

. replace motivation=1 if f6=="to train the committee members to be in goood communication / relationship with tap users"
(1 real change made)

. replace motivation=1 if f6=="accepted the task attributed to him and help his community"
(1 real change made)

. replace motivation=0 if f6=="just accepted the vote"
(2 real changes made)

. replace motivation=1 if f6=="Assist and meet the needs of the villagers"
(1 real change made)

. replace motivation=1 if f6=="to care and protect the use of water"
(1 real change made)

. replace motivation=0 if f6=="he was chosen and just accepted"
(1 real change made)

. replace motivation=0 if f6=="accepted responsibility"
(1 real change made)

. replace motivation=1 if f6=="to lead the community"
(2 real changes made)

. replace motivation=1 if f6=="volunteer to help bring water to the village, help the community"
(1 real change made)

. replace motivation=1 if f6=="to lead the community"
(0 real changes made)

. replace motivation=1 if f6=="help his community"
(1 real change made)

. replace motivation=0 if f6=="was obliged, to lead the village, to bring development to the village"
(1 real change made)

. replace motivation=1 if f6=="guarantee availability of water"
(1 real change made)

. replace motivation=0 if f6=="Accepted because it is a calling by God. Did not want to disappoint the father and villagers."
(1 real change made)

. replace motivation=1 if f6=="to help the community, to keep or take care of the water pipes"
(1 real change made)

. replace motivation=1 if f6=="to fight for the good of the community. To bring it up to standard."
(1 real change made)

. replace motivation=0 if f6=="because there was a lack of people to be in the committee"
(1 real change made)

. replace motivation=0 if f6=="accepted because there was no on else to care and protect the community and it's members"
(1 real change made)

. replace motivation=1 if f6=="arrange meetings, have better / good communication with village, report to senior headman"
(1 real change made)

. replace motivation=0 if f6=="I just accepted the position, because the villagers wanted me to lead them."
(1 real change made)

. replace motivation=1 if f6=="to take care of the water tap"
(1 real change made)

. replace motivation=1 if f6=="lead the community. Care for the community"
(1 real change made)

. replace motivation=1 if f6=="keep water in the community"
(1 real change made)

. replace motivation=0 if f6=="There was no election. Just accepted to be the headman as my father appointed me."
(1 real change made)

. replace motivation=1 if f6=="to lead the community, to take of the water tap"
(1 real change made)

. replace motivation=0 if f6=="just accepted a responsibility given by elders and villagers."
(1 real change made)

. replace motivation=1 if f6=="serving the community, take care of water related needs"
(1 real change made)

. replace motivation=1 if f6=="to lead the community as given by god."
(1 real change made)

. replace motivation=1 if f6=="care and protect the tap, sustain water"
(1 real change made)

. replace motivation=0 if f6=="Just accepted because my late father appointed me and also the villagers trusted/trust me to lead them"
(1 real change made)

. replace motivation=0 if f6=="was appointed to be one of the candidates, just accepted the result of the vote"
(1 real change made)

. replace motivation=0 if f6=="just accepted because people trusted me."
(1 real change made)

. replace motivation=1 if f6=="was given a responsibility and accepted, wanted to help bring private taps to village"
(1 real change made)

. replace motivation=0 if f6=="took over family duties. Was not willing to give the village away to a stranger or another family."
(1 real change made)

. replace motivation=1 if f6=="to keep taps in good condition, to arrange meetings, wotk with community members"
(1 real change made)

. replace motivation=0 if f6=="just accepted the responsibility, because the villagers accepted me as their headman."
(1 real change made)

. replace motivation=0 if f6=="just accepted, because the community voted him"
(1 real change made)

. replace motivation=1 if f6=="to lead the nation. To care for community members. Help provide for community members."
(1 real change made)

. replace motivation=0 if f6=="Accepted villagers decision"
(1 real change made)

. replace motivation=0 if f6=="I just accepted as a calling from God."
(1 real change made)

. replace motivation=1 if f6=="to help develop the village"
(1 real change made)

. replace motivation=0 if f6=="just accepted to lead the villagers, because they appointed/elected me."
(1 real change made)

. replace motivation=1 if f6=="to assist the community, accepted a responsibility given to him by the villagers, help develop the community"
(1 real change made)

. replace motivation=0 if f6=="i just accepted"
(1 real change made)

. replace motivation=1 if f6=="to help develop the village, improve water supply"
(1 real change made)

. replace motivation=0 if f6=="There was no motive, just accepted."
(1 real change made)

. replace motivation=0 if f6=="just accepted the vote"
(0 real changes made)

. replace motivation=1 if f6=="to lead the community. To help develop the community. To help improve people's/community member's lives."
(1 real change made)

. replace motivation=1 if f6=="help out the villagers without expectations"
(1 real change made)

. replace motivation=0 if f6=="" /*leader gave no answer - we set his intrinsic-motivation to 0*/
(385 real changes made)

. replace motivation=0 if f6=="just accepted votes & didnt volunteer to be a candidate"
(1 real change made)

. replace motivation=1 if f6=="A God given gift/role. Did not want to disappoint community members. Lead the community."
(1 real change made)

. replace motivation=0 if f6=="just accepted, because the people voted me"
(1 real change made)

. replace motivation=1 if f6=="God given responsibility as well as responsibility from family and community members. Lead and care for the community."
(1 real change made)

. replace motivation=1 if f6=="to care for taps and the community"
(1 real change made)

. replace motivation=0 if f6=="I just accepted the responsibility"
(1 real change made)

. replace motivation=1 if f6=="wanted to bring taps to the village, especially for drinking water purposes, used to drink from wells"
(1 real change made)

. replace motivation=1 if f6=="assist every community member"
(1 real change made)

. replace motivation=. if id>64
(384 real changes made, 384 to missing)

. lab def motivation 0 "extrinsic" 1 "intrinsic", replace

. lab val motivation motivation

. gen extrinsic_leader = 1 if motivation==0
(419 missing values generated)

. replace extrinsic_leader = 0 if motivation==1
(35 real changes made)

. lab def extrensic 0 "Intrinsic" 1 "Extrinsic", replace

. lab val extrinsic_leader extrensic

. bysort village game1_group: egen group_extrinsic_leader = mean(extrinsic_leader)

. 
. 
. // PERCEPTION OF LEADERS PERFORMANCE BY VILLAGERS
. lab def agree1 1 "strongly disagree" 2 "disagree a little" 3 "neutral" 4 "agree a little" 5 "strongly agree"

. 
. * synchronize scales
. foreach v of varlist b12satisfactionTL b10b {
  2.         replace `v'=5 if `v'==.
  3.         local i = `i' + 1
  4.         gen e_`i'=1 if `v'==4
  5.         replace e_`i'=2 if `v'==3
  6.         replace e_`i'=3 if `v'==5
  7.         replace e_`i'=4 if `v'==2
  8.         replace e_`i'=5 if `v'==1
  9.         replace e_`i'=. if villager==0
 10.         lab val e_`i' agree1
 11.         }
(69 real changes made)
(446 missing values generated)
(1 real change made)
(73 real changes made)
(35 real changes made)
(337 real changes made)
(64 real changes made, 64 to missing)
(69 real changes made)
(444 missing values generated)
(5 real changes made)
(99 real changes made)
(41 real changes made)
(299 real changes made)
(64 real changes made, 64 to missing)

. 
. foreach v of varlist b11g b8b b11f b8c b11h b8d {
  2.         replace `v'=5 if `v'==.
  3.         local i = `i' + 1
  4.         gen e_`i'=1 if `v'==1
  5.         replace e_`i'=2 if `v'==2
  6.         replace e_`i'=3 if `v'==5
  7.         replace e_`i'=4 if `v'==3
  8.         replace e_`i'=5 if `v'==4
  9.         replace e_`i'=. if villager==0
 10.         lab val e_`i' agree1
 11.         }
(91 real changes made)
(424 missing values generated)
(8 real changes made)
(91 real changes made)
(19 real changes made)
(306 real changes made)
(64 real changes made, 64 to missing)
(131 real changes made)
(426 missing values generated)
(13 real changes made)
(131 real changes made)
(30 real changes made)
(252 real changes made)
(64 real changes made, 64 to missing)
(98 real changes made)
(431 missing values generated)
(6 real changes made)
(98 real changes made)
(25 real changes made)
(302 real changes made)
(64 real changes made, 64 to missing)
(208 real changes made)
(391 missing values generated)
(11 real changes made)
(208 real changes made)
(24 real changes made)
(148 real changes made)
(64 real changes made, 64 to missing)
(152 real changes made)
(193 missing values generated)
(10 real changes made)
(152 real changes made)
(6 real changes made)
(25 real changes made)
(64 real changes made, 64 to missing)
(185 real changes made)
(232 missing values generated)
(8 real changes made)
(185 real changes made)
(8 real changes made)
(31 real changes made)
(64 real changes made, 64 to missing)

. 
. *TL specific satisfaction items
. foreach v of varlist b11b b11c b11d b11e b11f b11g b11h {
  2.         replace `v'=5 if `v'==.
  3.         local j = `j' + 1
  4.         gen opinionTL_`j'=1 if `v'==1
  5.         replace opinionTL_`j'=2 if `v'==2
  6.         replace opinionTL_`j'=3 if `v'==5
  7.         replace opinionTL_`j'=4 if `v'==3
  8.         replace opinionTL_`j'=5 if `v'==4
  9.         replace opinionTL_`j'=. if villager==0
 10.         lab val opinionTL_`j' agree1
 11.         }
(207 real changes made)
(245 missing values generated)
(5 real changes made)
(207 real changes made)
(9 real changes made)
(24 real changes made)
(64 real changes made, 64 to missing)
(116 real changes made)
(418 missing values generated)
(8 real changes made)
(116 real changes made)
(25 real changes made)
(269 real changes made)
(64 real changes made, 64 to missing)
(84 real changes made)
(433 missing values generated)
(6 real changes made)
(84 real changes made)
(23 real changes made)
(320 real changes made)
(64 real changes made, 64 to missing)
(126 real changes made)
(421 missing values generated)
(7 real changes made)
(126 real changes made)
(19 real changes made)
(269 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(431 missing values generated)
(6 real changes made)
(98 real changes made)
(25 real changes made)
(302 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(424 missing values generated)
(8 real changes made)
(91 real changes made)
(19 real changes made)
(306 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(193 missing values generated)
(10 real changes made)
(152 real changes made)
(6 real changes made)
(25 real changes made)
(64 real changes made, 64 to missing)

. *scale all items so that higher agreement indicates higher satisfaction
. gen opinionTL_1reverse = 6-opinionTL_1
(64 missing values generated)

. gen opinionTL_7reverse = 6-opinionTL_7
(64 missing values generated)

. 
. alpha e_1 opinionTL_1reverse opinionTL_2 opinionTL_3 opinionTL_4 opinionTL_5 opinionTL_6 opinionTL_7reverse 

Test scale = mean(unstandardized items)

Average interitem covariance:     .3230128
Number of items in the scale:            8
Scale reliability coefficient:      0.7473

. * alpha=0.75 pretty reliable scale, can reduce dimensionality
. *start with simple additative index, 
. egen mean_satisfactionTL = rowmean (e_1 opinionTL_1reverse opinionTL_2 opinionTL_3 opinionTL_4 opinionTL_5 opinionTL_6 opinionTL_7)
(64 missing values generated)

. 
. *DEL specific satisfaction  items
. foreach v of varlist b8a b8b b8c b8d {
  2.         replace `v'=5 if `v'==.
  3.         local k = `k' + 1
  4.         gen opinionDEL_`k'=1 if `v'==1
  5.         replace opinionDEL_`k'=2 if `v'==2
  6.         replace opinionDEL_`k'=3 if `v'==5
  7.         replace opinionDEL_`k'=4 if `v'==3
  8.         replace opinionDEL_`k'=5 if `v'==4
  9.         replace opinionDEL_`k'=. if villager==0
 10.         lab val opinionDEL_`k' agree1
 11.         }
(208 real changes made)
(401 missing values generated)
(16 real changes made)
(208 real changes made)
(36 real changes made)
(141 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(426 missing values generated)
(13 real changes made)
(131 real changes made)
(30 real changes made)
(252 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(391 missing values generated)
(11 real changes made)
(208 real changes made)
(24 real changes made)
(148 real changes made)
(64 real changes made, 64 to missing)
(0 real changes made)
(232 missing values generated)
(8 real changes made)
(185 real changes made)
(8 real changes made)
(31 real changes made)
(64 real changes made, 64 to missing)

. *scale all items so that higher agreement indicates higher satisfaction
. gen opinionTL_4reverse = 6-opinionTL_4
(64 missing values generated)

. 
. alpha e_2 opinionDEL_1 opinionDEL_2 opinionDEL_3 opinionTL_4reverse

Test scale = mean(unstandardized items)
Reversed item:  opinionTL_4reverse

Average interitem covariance:     .2561201
Number of items in the scale:            5
Scale reliability coefficient:      0.5149

. * alpha=0.52 less reliable
. *start with simple additative index, 
. egen mean_satisfactionDEL = rowmean (e_2 opinionDEL_1 opinionDEL_2 opinionDEL_3 opinionTL_4reverse)
(64 missing values generated)

. 
. 
. *generate satisfaction dependent on which leaders villagers were matched with in game 1
. gen satisfaction_TL = mean_satisfactionTL
(64 missing values generated)

. replace satisfaction_TL = . if game1_group!=13
(192 real changes made, 192 to missing)

. gen satisfaction_DEL = mean_satisfactionDEL
(64 missing values generated)

. replace satisfaction_DEL = . if game1_group!=14
(192 real changes made, 192 to missing)

. egen satisfaction_leader = rowmean (satisfaction_TL satisfaction_DEL)
(64 missing values generated)

. lab val satisfaction_leader agree1

. lab var satisfaction_leader "Leader satisfaction index (decision-making, exploitation, etc.)"

. egen z_satisfaction = std(satisfaction_leader)
(64 missing values generated)

. 
. *Satisfaction with performance of DEL / TL
. gen performance_TL = e_1
(64 missing values generated)

. replace performance_TL = . if game1_group!=13
(192 real changes made, 192 to missing)

. gen performance_DEL = e_2
(64 missing values generated)

. replace performance_DEL = . if game1_group!=14
(192 real changes made, 192 to missing)

. egen performance_leader = rowmean (performance_TL performance_DEL)
(64 missing values generated)

. lab val performance_leader agree1

. lab var performance_leader "How satisfied are you with the peformance of the TL/DEL?"

. 
. *label variables
. label var e_1 "Satisfied with the chief in general?"

. label var e_2 "Satisfied with the DEL in general?"

. label var e_3 "The Chief makes decisions in an understandable manner?"

. label var e_4 "The DEL makes decisions in an understandable manner?"

. label var e_5 "The Chief takes appropriate actions against people who disobey the rules?"

. label var e_6 "The DEL takes appropriate actions against people who disobey the rules?"

. label var e_7 "Does the chief exploit his or her position?"

. label var e_8 "Does the DEL exploit his or her position?"

. 
. *Combined Index of leader quality
. gen reverse_e7 = 6-e_7
(64 missing values generated)

. alpha e_1 e_3 e_5 reverse_e7

Test scale = mean(unstandardized items)

Average interitem covariance:     .2492895
Number of items in the scale:            4
Scale reliability coefficient:      0.5633

. 
. 
. ***************************
. **** BIG FIVE
. /*
> Rammstedt, B. & John, O. P. (2007). Measuring personality in one minute or less: A 10-item short version of the Big Five Inventory in English and Germa
> n. 
> Journal of Research in Personality, 41, 203-212. 
> 
> De Young et al. 2010 Psych. Science: Neuroticism covaried with volume of brain regions associated with threat, punishment, and negative affect. 
> http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3049165/
> 
> 
> Positively formualed items: c29, c25, c28, c32, c34
> Negatively formulated items: c26, c27, c30, c31, c33
> */
. 
. *** 1. Step, gen new variables
. foreach var of varlist c25-c34{
  2. replace `var'=. if `var'==5
  3. gen `var'new = `var'
  4. }
(0 real changes made)
(389 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)
(0 real changes made)
(384 missing values generated)

. 
. *** 2. Step, recode negatively formulated items ***
. foreach var of varlist c26new c27new c30new c31new c33new{
  2. recode `var' (1=4) (2=3) (3=2) (4=1)
  3. }
(c26new: 64 changes made)
(c27new: 64 changes made)
(c30new: 64 changes made)
(c31new: 64 changes made)
(c33new: 64 changes made)

. quietly tab c26 c26new

. quietly tab c27 c27new

. sum c25-c34     /* we have missings for c25, otherwise complete info*/

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         c25 |         59    2.559322     1.47708          1          4
         c26 |         64    2.328125     1.43709          1          4
         c27 |         64    2.421875    1.499256          1          4
         c28 |         64     2.59375     1.46622          1          4
         c29 |         64     2.65625     1.48237          1          4
-------------+---------------------------------------------------------
         c30 |         64     2.90625    1.317992          1          4
         c31 |         64    2.671875    1.369216          1          4
         c32 |         64      2.6875    1.467911          1          4
         c33 |         64     2.90625    1.399759          1          4
         c34 |         64    2.640625    1.505199          1          4

. 
. *** 3. Step: Build variables ***
. /* Higher values mean more agreeable, extraverted etc. */  
. gen extraversion=(c29new+c26new)/2 if leader!=. 
(384 missing values generated)

. gen agreeableness=(c25new+c31new)/2 if leader!=. & c25!=.
(389 missing values generated)

. replace agreeableness=c31new if leader!=. & c25==.
(5 real changes made)

. gen conscientiousness=(c32new+c27new)/2 if leader!=.
(384 missing values generated)

. gen neuroticism=(c33new+c28new)/2 if leader!=.
(384 missing values generated)

. gen openness=(c34new+c30new)/2 if leader!=.
(384 missing values generated)

. 
. *** 4. Step: test for scale reliability (Cronbach's alpha)
. alpha c29new c26new             /*extraversion: 0.86*/

Test scale = mean(unstandardized items)

Average interitem covariance:     1.615575
Number of items in the scale:            2
Scale reliability coefficient:      0.8624

. alpha c25new c31new, item       /*agreeableness: 0.81*/

Test scale = mean(unstandardized items)

Average interitem covariance:     1.384278
Number of items in the scale:            2
Scale reliability coefficient:      0.8128

. alpha c32new c27new     /*Conscientiousness: 0.92 */

Test scale = mean(unstandardized items)

Average interitem covariance:     1.866071
Number of items in the scale:            2
Scale reliability coefficient:      0.9176

. alpha c33new c28new     /*neuroticism: 0.76 */

Test scale = mean(unstandardized items)

Average interitem covariance:      1.24504
Number of items in the scale:            2
Scale reliability coefficient:      0.7547

. alpha c34new c30new     /*openness: 0.49*/

Test scale = mean(unstandardized items)

Average interitem covariance:     .6532738
Number of items in the scale:            2
Scale reliability coefficient:      0.4922

. 
. *** 5. Step: Standardize BIG5 measures
. foreach var of varlist extraversion-openness{
  2. sum `var'
  3. gen `var'_normal = (`var'-r(min))/(r(max)-r(min))
  4. }

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
extraversion |         64    2.664063     1.36874          1          4
(384 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
agreeablen~s |         64    2.492188    1.310798          1          4
(384 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
conscienti~s |         64    2.632813    1.426067          1          4
(384 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
 neuroticism |         64     2.34375    1.284446          1          4
(384 missing values generated)

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    openness |         64    2.367188    1.152093          1          4
(384 missing values generated)

. sum *_normal 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
extraversi~l |         64    .5546875    .4562468          0          1
agreeablen~l |         64    .4973958    .4369327          0          1
conscienti~l |         64    .5442708    .4753558          0          1
neuroticis~l |         64    .4479167    .4281487          0          1
openness_n~l |         64    .4557292    .3840311          0          1

. 
. foreach var of varlist *_normal{
  2. ttest `var', by(leader)
  3. }

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32    .5729167    .0816145    .4616813    .4064628    .7393705
  Chiefs |      32    .5364583    .0808551    .4573854    .3715533    .7013633
---------+--------------------------------------------------------------------
combined |      64    .5546875    .0570308    .4562468    .4407205    .6686545
---------+--------------------------------------------------------------------
    diff |            .0364583    .1148846               -.1931927    .2661094
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   0.3173
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.6240         Pr(|T| > |t|) = 0.7520          Pr(T > t) = 0.3760

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32     .546875    .0774952    .4383792    .3888225    .7049275
  Chiefs |      32    .4479167    .0772067    .4367473    .2904525    .6053809
---------+--------------------------------------------------------------------
combined |      64    .4973958    .0546166    .4369327    .3882533    .6065384
---------+--------------------------------------------------------------------
    diff |            .0989583     .109391               -.1197112    .3176278
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   0.9046
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.8154         Pr(|T| > |t|) = 0.3692          Pr(T > t) = 0.1846

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32     .578125    .0843302    .4770436    .4061325    .7501175
  Chiefs |      32    .5104167    .0846461    .4788305    .3377799    .6830535
---------+--------------------------------------------------------------------
combined |      64    .5442708    .0594195    .4753558    .4255305    .6630112
---------+--------------------------------------------------------------------
    diff |            .0677083    .1194845               -.1711377    .3065544
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   0.5667
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.7135         Pr(|T| > |t|) = 0.5730          Pr(T > t) = 0.2865

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32     .484375    .0757132    .4282987    .3299569    .6387931
  Chiefs |      32    .4114583    .0763118     .431685    .2558193    .5670974
---------+--------------------------------------------------------------------
combined |      64    .4479167    .0535186    .4281487    .3409683     .554865
---------+--------------------------------------------------------------------
    diff |            .0729167    .1074988               -.1419703    .2878037
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   0.6783
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.7499         Pr(|T| > |t|) = 0.5001          Pr(T > t) = 0.2501

Two-sample t test with equal variances
------------------------------------------------------------------------------
Variable |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
     DEL |      32     .515625    .0687345    .3888209    .3754401    .6558099
  Chiefs |      32    .3958333      .06641    .3756714    .2603893    .5312773
---------+--------------------------------------------------------------------
combined |      64    .4557292    .0480039    .3840311    .3598011    .5516573
---------+--------------------------------------------------------------------
    diff |            .1197917    .0955757               -.0712614    .3108447
------------------------------------------------------------------------------
    diff = mean(DEL) - mean(Chiefs)                               t =   1.2534
Ho: diff = 0                                     degrees of freedom =       62

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.8926         Pr(|T| > |t|) = 0.2148          Pr(T > t) = 0.1074

. /* No sig differences between leader type*/
. 
. label variable extraversion "B5 extraversion, based on c29 and recoded c26new"

. label variable agreeableness "B5 agreeableness, based on c25 and recoded c31new"

. label variable neuroticism "B5 neuroticism, based on c28 and recoded c33new"

. label variable conscientiousness "B5 conscientiousness, based on c32 and recoded c27new"

. label variable openness "B5 openess, based on c34 and recoded c30new"

. 
. drop c25new-c34new

. 
. 
. // Pairwise correlations
. global big5 *_normal

. foreach var of varlist $big5{
  2. pwcorr extra*_normal `var', sig
  3. }

             | extrav~l extrav~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
extraversi~l |   1.0000   1.0000 
             |   0.0000
             |

             | extrav~l agreea~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
agreeablen~l |   0.8877   1.0000 
             |   0.0000
             |

             | extrav~l consci~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
conscienti~l |   0.8933   1.0000 
             |   0.0000
             |

             | extrav~l neurot~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
neuroticis~l |   0.7980   1.0000 
             |   0.0000
             |

             | extrav~l openne~l
-------------+------------------
extraversi~l |   1.0000 
             |
             |
openness_n~l |   0.7514   1.0000 
             |   0.0000
             |

. /* THAT is Puzzling: Big 5s are strongly correlated among each other. Including them jointly in regressions will be problematic due to multicollinearit
> y */
. ******************************************
. 
. 
. 
. 
. *********C13-C24***************************
. /*we used authentic leadership self-assessment questionnaire (pdf).
> Literature uses 5-point scale, and than simply takes the sum of all 4 items. Values above 15 mean high AL, values of 15 and below mean low AL.
> In our case this would mean value of >12 is high AL, value of 12 and below is low AL.
> However, we have one missing for c13. This person would hence automatically get a low AL score. 
> We could circumvent this problem by taking the average score. (NOT NOW)
> */
. alpha c13 c16 c19 c22           /*moral perspective: 0.72*/

Test scale = mean(unstandardized items)

Average interitem covariance:     .7498122
Number of items in the scale:            4
Scale reliability coefficient:      0.7168

. alpha c14 c17 c20 c23           /*balanced processing: 0.94*/

Test scale = mean(unstandardized items)

Average interitem covariance:     1.769841
Number of items in the scale:            4
Scale reliability coefficient:      0.9400

. alpha c15 c18 c21 c24           /*relation transparency: 0.89*/

Test scale = mean(unstandardized items)
Reversed item:  c18

Average interitem covariance:     1.439153
Number of items in the scale:            4
Scale reliability coefficient:      0.8881

. global AL c13 c14 c15 c16 c17 c18 c19 c20 c21 c22 c23 c24

. pca $AL

Principal components/correlation                 Number of obs    =         63
                                                 Number of comp.  =          8
                                                 Trace            =         12
    Rotation: (unrotated = principal)            Rho              =     1.0000

    --------------------------------------------------------------------------
       Component |   Eigenvalue   Difference         Proportion   Cumulative
    -------------+------------------------------------------------------------
           Comp1 |       8.5811      7.32232             0.7151       0.7151
           Comp2 |      1.25878      .460893             0.1049       0.8200
           Comp3 |      .797884      .163611             0.0665       0.8865
           Comp4 |      .634273      .265805             0.0529       0.9393
           Comp5 |      .368468      .159598             0.0307       0.9700
           Comp6 |      .208871      .101596             0.0174       0.9874
           Comp7 |      .107275     .0639178             0.0089       0.9964
           Comp8 |     .0433571     .0433571             0.0036       1.0000
           Comp9 |            0            0             0.0000       1.0000
          Comp10 |            0            0             0.0000       1.0000
          Comp11 |            0            0             0.0000       1.0000
          Comp12 |            0            .             0.0000       1.0000
    --------------------------------------------------------------------------

Principal components (eigenvectors) 

    ------------------------------------------------------------------------------------------------------------
        Variable |    Comp1     Comp2     Comp3     Comp4     Comp5     Comp6     Comp7     Comp8 | Unexplained 
    -------------+--------------------------------------------------------------------------------+-------------
             c13 |   0.3208    0.0298   -0.0208   -0.1035    0.0913    0.3360    0.8725   -0.0500 |           0 
             c14 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
             c15 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
             c16 |   0.2263    0.5218    0.3625   -0.0501   -0.0987   -0.7058    0.1851    0.0213 |           0 
             c17 |   0.3314    0.0409    0.1100    0.0062    0.0989    0.0943   -0.2182   -0.9000 |           0 
             c18 |  -0.2049    0.2666    0.4631    0.7441    0.1512    0.3054    0.0343    0.0387 |           0 
             c19 |  -0.0103    0.7180   -0.6419    0.0961   -0.1419    0.1882   -0.0837   -0.0246 |           0 
             c20 |   0.2379   -0.3204   -0.1916    0.5104   -0.7051   -0.1688    0.1142   -0.0697 |           0 
             c21 |   0.2496   -0.1812   -0.4078    0.4026    0.6572   -0.3738    0.0312    0.0621 |           0 
             c22 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
             c23 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
             c24 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 |           0 
    ------------------------------------------------------------------------------------------------------------

. estat loadings

Principal component loadings (unrotated)
    component normalization: sum of squares(column) = 1

    ----------------------------------------------------------------------------------------------
                 |    Comp1     Comp2     Comp3     Comp4     Comp5     Comp6     Comp7     Comp8 
    -------------+--------------------------------------------------------------------------------
             c13 |    .3208     .0298   -.02084    -.1035    .09128      .336     .8725   -.05001 
             c14 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
             c15 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
             c16 |    .2263     .5218     .3625   -.05012   -.09875    -.7058     .1851    .02134 
             c17 |    .3314    .04087       .11   .006219    .09893     .0943    -.2182       -.9 
             c18 |   -.2049     .2666     .4631     .7441     .1512     .3054    .03432    .03871 
             c19 |  -.01034      .718    -.6419    .09615    -.1419     .1882   -.08369    -.0246 
             c20 |    .2379    -.3204    -.1916     .5104    -.7051    -.1688     .1142   -.06972 
             c21 |    .2496    -.1812    -.4078     .4026     .6572    -.3738     .0312    .06212 
             c22 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
             c23 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
             c24 |    .3391    .02494    .07299   -.01532  -.003855     .1289    -.1641     .1877 
    ----------------------------------------------------------------------------------------------

. predict AL1, score 
(7 components skipped)

Scoring coefficients 
    sum of squares(column-loading) = 1

    ----------------------------------------------------------------------------------------------
        Variable |    Comp1     Comp2     Comp3     Comp4     Comp5     Comp6     Comp7     Comp8 
    -------------+--------------------------------------------------------------------------------
             c13 |   0.3208    0.0298   -0.0208   -0.1035    0.0913    0.3360    0.8725   -0.0500 
             c14 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
             c15 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
             c16 |   0.2263    0.5218    0.3625   -0.0501   -0.0987   -0.7058    0.1851    0.0213 
             c17 |   0.3314    0.0409    0.1100    0.0062    0.0989    0.0943   -0.2182   -0.9000 
             c18 |  -0.2049    0.2666    0.4631    0.7441    0.1512    0.3054    0.0343    0.0387 
             c19 |  -0.0103    0.7180   -0.6419    0.0961   -0.1419    0.1882   -0.0837   -0.0246 
             c20 |   0.2379   -0.3204   -0.1916    0.5104   -0.7051   -0.1688    0.1142   -0.0697 
             c21 |   0.2496   -0.1812   -0.4078    0.4026    0.6572   -0.3738    0.0312    0.0621 
             c22 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
             c23 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
             c24 |   0.3391    0.0249    0.0730   -0.0153   -0.0039    0.1289   -0.1641    0.1877 
    ----------------------------------------------------------------------------------------------

. sum AL1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         AL1 |         63   -3.78e-09    2.929351  -3.588274   3.158526

. 
. gen moral_perspective=c13+c16+c19+c22
(385 missing values generated)

. gen balance_processing=c14+c17+c20+c23
(384 missing values generated)

. gen relational_transparency=c15+c18+c21+c24
(384 missing values generated)

. label variable moral_perspective "AL moral perspective, total score on c13 c16 c19 and c22"

. label variable balance_processing "AL balance processing, total score on c14 c17 c20 and c23"

. label variable relational_transparency "AL relational transparency, total score on c15 c18 c21 and c24"

. 
. pwcorr moral balance

             | moral_~e balanc~g
-------------+------------------
moral_pers~e |   1.0000 
balance_pr~g |   0.8252   1.0000 

. pwcorr moral relational

             | moral_~e relati~y
-------------+------------------
moral_pers~e |   1.0000 
relational~y |   0.7987   1.0000 

. pwcorr balance relationa

             | balanc~g relati~y
-------------+------------------
balance_pr~g |   1.0000 
relational~y |   0.9073   1.0000 

. egen helpauthentic = rowmean(moral_pers balance_pro relational_trans)
(384 missing values generated)

. gen authentic_leader1=0 if helpauthe!=.
(384 missing values generated)

. replace authentic_leader1=1 if helpauthe>12 & helpauthe!=.
(34 real changes made)

. label variable authentic_leader1 "1=high authentic leadership, 0 otherwise"

. lab def authentic 0 "Low" 1 "High", replace

. lab val authentic_leader1 authentic

. 
. /* AGAIN, very strong correlation among AL variables. Including them jointly in regressions may be no good idea*/
. gen strong_moral=0 if leader!=.
(384 missing values generated)

. replace strong_moral=1 if moral_perspective>=13 & leader!=.
(23 real changes made)

. gen strong_balance=0 if leader!=.
(384 missing values generated)

. replace strong_balance=1 if balance_processing>=13 & leader!=.
(36 real changes made)

. gen strong_relational=0 if leader!=.
(384 missing values generated)

. replace strong_relational=1 if relational_transparency>=13 & leader!=.
(28 real changes made)

. 
. foreach var of varlist  strong_moral strong_balance strong_relational{
  2. tab2 `var' leader, chi2
  3. }

-> tabulation of strong_moral by leader  

strong_mor |        leader
        al |       DEL     Chiefs |     Total
-----------+----------------------+----------
         0 |        21         20 |        41 
         1 |        11         12 |        23 
-----------+----------------------+----------
     Total |        32         32 |        64 

          Pearson chi2(1) =   0.0679   Pr = 0.794

-> tabulation of strong_balance by leader  

strong_bal |        leader
      ance |       DEL     Chiefs |     Total
-----------+----------------------+----------
         0 |        13         15 |        28 
         1 |        19         17 |        36 
-----------+----------------------+----------
     Total |        32         32 |        64 

          Pearson chi2(1) =   0.2540   Pr = 0.614

-> tabulation of strong_relational by leader  

strong_rel |        leader
   ational |       DEL     Chiefs |     Total
-----------+----------------------+----------
         0 |        17         19 |        36 
         1 |        15         13 |        28 
-----------+----------------------+----------
     Total |        32         32 |        64 

          Pearson chi2(1) =   0.2540   Pr = 0.614

. /* No differences, will not change if we use Fisher exact test for values being very similar*/
. label variable strong_moral"AL dummy for moral perspective"

. label variable strong_balance "AL dummy for balance processing"

. label variable strong_relational "AL dummy for relational transparency"

. 
. gen authentic_leader2=0 if leader!=.
(384 missing values generated)

. replace authentic_leader2=1 if strong_moral==1 & strong_balance==1 & strong_relational==1
(17 real changes made)

. label variable authentic_leader2 "Measure of authentic leadership based on dummies"

. 
. * standardize authentic leadership scale (z-scores)
. egen AL_score=rowmean(moral_perspective balance_processing relational_transparency)
(384 missing values generated)

. egen z_AL_score=std(AL_score)
(384 missing values generated)

. 
. * Village level leader motivation
. bysort village: egen aux_motivation=total(motivation)

. gen intrinsic_DEL=0 if motivation==0 & TL==0
(437 missing values generated)

. replace intrinsic_DEL=1 if motivation==1 & TL==0
(21 real changes made)

. gen intrinsic_TL=0 if motivation==0 & TL==1
(430 missing values generated)

. replace intrinsic_TL=1 if motivation==1 & TL==1
(14 real changes made)

. gen sum_motivation=.
(448 missing values generated)

. replace sum_motivation=0 if aux_motivation==0
(56 real changes made)

. replace sum_motivation=1 if aux_motivation==1 & intrinsic_DEL==0
(7 real changes made)

. replace sum_motivation=1 if aux_motivation==1 & intrinsic_TL==1
(7 real changes made)

. replace sum_motivation=2 if aux_motivation==1 & intrinsic_TL==0
(14 real changes made)

. replace sum_motivation=2 if aux_motivation==1 & intrinsic_DEL==1
(14 real changes made)

. replace sum_motivation=3 if aux_motivation==2
(98 real changes made)

. lab def motivation2 0 "both extrinsic" 1 "DEL extrinsic/ TL intrinsic" 2 "TL extrinsic/ DEL intrinsic"  3 "both intrinsic", replace

. lab val sum_motivation motivation2

. 
. gen bonus_AL=bonus*authentic_leader1
(384 missing values generated)

. 
. 
. 
. /* NOTE:
> - FWe drop d5j (Motorrad), cell phone and freezer as this has too little variation. Drop sewing machine as no obs for leader
> - Include dummies for d6 and d7a, in case of d6 a dummy if main source is private tap (d6==1) und in case of d7 if d7a=02 (concrete)
> */
. 
. * Dummies for main income sources
. gen i_sf=0

. replace i_sf=1 if d1==3 | d1==4
(138 real changes made)

. lab var i_sf "Farming"

. 
. gen i_ob=0 

. replace i_ob=1 if d1==5
(67 real changes made)

. label var i_ob "Own business"

. 
. gen i_em=0

. replace i_em=1 if d1==1 | d1==2
(45 real changes made)

. label var i_em "Employment"

. 
. gen i_p=0

. replace i_p=1 if d1==6
(93 real changes made)

. label var i_p "Pension"

. 
. 
. 
. gen privatetap = (d6==1) if d6!=.
(5 missing values generated)

. gen robustfloor = (d7a==2 | d7a==4) if d7a!=.
(6 missing values generated)

. label variable robustfloor "Dummy taking 1 if concrete or wooden housefloor, based on d7a"

. label variable privatetap "Dummy if privat tap, based on d6"

. 
. // Normalize livestock assets to [0,1] range
. sum d3a 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         d3a |        442    8.873303    19.44391          0        300

. gen z_cattle = (d3a - r(min))/(r(max)-r(min))
(6 missing values generated)

. sum d3b

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         d3b |        442    .3733032    2.747666          0         30

. gen z_sheeps = (d3b - r(min))/(r(max)-r(min))
(6 missing values generated)

. sum d3c

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         d3c |        442    13.35068    16.80289          0        200

. gen z_goats = (d3c - r(min))/(r(max)-r(min))
(6 missing values generated)

. 
. bysort villager: sum z_cattle z_sheeps z_goats

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> villager = 0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         64    .0488021    .0654421          0         .4
    z_sheeps |         64      .00625         .05          0         .4
     z_goats |         64    .1092188    .1390792          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> villager = 1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |        378    .0263228    .0642247          0          1
    z_sheeps |        378    .0134921    .0968875          0          1
     z_goats |        378    .0595635    .0683105          0         .5


. 
. global asset z_cattle z_sheeps z_goats d5a d5b d5c d5d d5e d5f d5g d5i d5j d5k d5l d5m d5n robustfloor privatetap

. global asset2 d5a d5b d5d d5f d5g d5i d5k-d5n privatetap

. 
. pca $asset2, comp(1)

Principal components/correlation                 Number of obs    =        431
                                                 Number of comp.  =          1
                                                 Trace            =         11
    Rotation: (unrotated = principal)            Rho              =     0.2645

    --------------------------------------------------------------------------
       Component |   Eigenvalue   Difference         Proportion   Cumulative
    -------------+------------------------------------------------------------
           Comp1 |      2.90923      1.66106             0.2645       0.2645
           Comp2 |      1.24818      .104836             0.1135       0.3779
           Comp3 |      1.14334      .186404             0.1039       0.4819
           Comp4 |      .956937      .136826             0.0870       0.5689
           Comp5 |      .820111     .0212259             0.0746       0.6434
           Comp6 |      .798885     .0776617             0.0726       0.7161
           Comp7 |      .721223     .0385552             0.0656       0.7816
           Comp8 |      .682668     .0664126             0.0621       0.8437
           Comp9 |      .616255     .0419399             0.0560       0.8997
          Comp10 |      .574316     .0454601             0.0522       0.9519
          Comp11 |      .528855            .             0.0481       1.0000
    --------------------------------------------------------------------------

Principal components (eigenvectors) 

    --------------------------------------
        Variable |    Comp1 | Unexplained 
    -------------+----------+-------------
             d5a |   0.1841 |       .9014 
             d5b |   0.3884 |       .5612 
             d5d |   0.3551 |       .6332 
             d5f |   0.2575 |       .8071 
             d5g |   0.3441 |       .6556 
             d5i |   0.3654 |       .6117 
             d5k |   0.2157 |       .8646 
             d5l |   0.2627 |       .7992 
             d5m |   0.3276 |       .6878 
             d5n |   0.2742 |       .7813 
      privatetap |   0.2702 |       .7877 
    --------------------------------------

. estat loadings

Principal component loadings (unrotated)
    component normalization: sum of squares(column) = 1

    ------------------------
                 |    Comp1 
    -------------+----------
             d5a |    .1841 
             d5b |    .3884 
             d5d |    .3551 
             d5f |    .2575 
             d5g |    .3441 
             d5i |    .3654 
             d5k |    .2157 
             d5l |    .2627 
             d5m |    .3276 
             d5n |    .2742 
      privatetap |    .2702 
    ------------------------

. predict pc1, score

Scoring coefficients 
    sum of squares(column-loading) = 1

    ------------------------
        Variable |    Comp1 
    -------------+----------
             d5a |   0.1841 
             d5b |   0.3884 
             d5d |   0.3551 
             d5f |   0.2575 
             d5g |   0.3441 
             d5i |   0.3654 
             d5k |   0.2157 
             d5l |   0.2627 
             d5m |   0.3276 
             d5n |   0.2742 
      privatetap |   0.2702 
    ------------------------

. estat kmo // legitimate pca, kmo=0.79 > 0.7

Kaiser-Meyer-Olkin measure of sampling adequacy

    -----------------------
        Variable |     kmo 
    -------------+---------
             d5a |  0.7485 
             d5b |  0.8123 
             d5d |  0.7777 
             d5f |  0.7751 
             d5g |  0.8669 
             d5i |  0.8242 
             d5k |  0.7672 
             d5l |  0.7011 
             d5m |  0.7625 
             d5n |  0.7944 
      privatetap |  0.8454 
    -------------+---------
         Overall |  0.7924 
    -----------------------

. sum pc1

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
         pc1 |        431   -7.56e-09    1.705647  -2.108749   6.471886

. gen pca_wealth=pc1
(17 missing values generated)

. label var pca_wealth "Socio-economic status proxy based on first component of pca"

. 
. xtile quintile=pca_wealth, nq(5)

. bysort leader: sum pca_wealth

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> leader = DEL

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  pca_wealth |         32     .451963    1.621559  -2.108749   3.726418

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> leader = Chiefs

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  pca_wealth |         32    1.702505    1.805242  -1.535614   6.471886

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> leader = .

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  pca_wealth |        367   -.1878555    1.616336  -2.108749    5.90319


. label define quints 1 "Poorest" 2 "Poor" 3 "Medium" 4 "Wealthy" 5 "Wealthiest"

. label values quintile quints

. 
. bysort quintile: sum $asset

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Poorest

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         90    .0064074    .0161085          0         .1
    z_sheeps |         90    .0018519    .0175682          0   .1666667
     z_goats |         90    .0268889    .0432498          0         .2
         d5a |         91    .4395604    .4990834          0          1
         d5b |         91           0           0          0          0
-------------+---------------------------------------------------------
         d5c |         91    .9230769    .2679457          0          1
         d5d |         91           0           0          0          0
         d5e |         91           0           0          0          0
         d5f |         91           0           0          0          0
         d5g |         91           0           0          0          0
-------------+---------------------------------------------------------
         d5i |         91           0           0          0          0
         d5j |         91           0           0          0          0
         d5k |         91     .010989    .1048285          0          1
         d5l |         91           0           0          0          0
         d5m |         91           0           0          0          0
-------------+---------------------------------------------------------
         d5n |         91    .1648352    .3730873          0          1
 robustfloor |         91     .032967    .1795395          0          1
  privatetap |         91    .0659341    .2495417          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Poor

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         82    .0156911    .0245088          0   .1066667
    z_sheeps |         82    .0146341    .1068437          0   .9333333
     z_goats |         82    .0370122    .0440318          0         .2
         d5a |         83    .9036145    .2969133          0          1
         d5b |         83           0           0          0          0
-------------+---------------------------------------------------------
         d5c |         83    .9638554    .1877845          0          1
         d5d |         83    .0120482    .1097643          0          1
         d5e |         83    .0120482    .1097643          0          1
         d5f |         83           0           0          0          0
         d5g |         83           0           0          0          0
-------------+---------------------------------------------------------
         d5i |         83     .060241    .2393792          0          1
         d5j |         83           0           0          0          0
         d5k |         83    .1325301    .3411274          0          1
         d5l |         83           0           0          0          0
         d5m |         83           0           0          0          0
-------------+---------------------------------------------------------
         d5n |         83    .5421687    .5012473          0          1
 robustfloor |         83    .0481928    .2154753          0          1
  privatetap |         83     .313253    .4666359          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Medium

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |        100       .0332    .1024579          0          1
    z_sheeps |        100    .0036667    .0176606          0         .1
     z_goats |        100      .06995    .0820953          0         .5
         d5a |        101    .9108911    .2863218          0          1
         d5b |        101     .039604    .1959996          0          1
-------------+---------------------------------------------------------
         d5c |        101     .950495    .2180017          0          1
         d5d |        101     .049505    .2180017          0          1
         d5e |        101     .019802    .1400141          0          1
         d5f |        101     .009901    .0995037          0          1
         d5g |        101    .0792079      .27141          0          1
-------------+---------------------------------------------------------
         d5i |        101    .2475248    .4337267          0          1
         d5j |        101     .029703    .1706133          0          1
         d5k |        101    .3762376     .486857          0          1
         d5l |        101     .009901    .0995037          0          1
         d5m |        101           0           0          0          0
-------------+---------------------------------------------------------
         d5n |        101    .7821782    .4148243          0          1
 robustfloor |        100         .07    .2564324          0          1
  privatetap |        101    .5544554    .4995047          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Wealthy

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         70    .0448571    .0639738          0   .3333333
    z_sheeps |         70    .0171429    .1215497          0          1
     z_goats |         70    .0861429    .0781033          0        .35
         d5a |         70    .9285714    .2593989          0          1
         d5b |         70    .2142857    .4132886          0          1
-------------+---------------------------------------------------------
         d5c |         70    .9714286    .1678015          0          1
         d5d |         70    .1571429    .3665631          0          1
         d5e |         70    .0714286    .2593989          0          1
         d5f |         70    .0142857    .1195229          0          1
         d5g |         70    .2142857    .4132886          0          1
-------------+---------------------------------------------------------
         d5i |         70    .6714286    .4730851          0          1
         d5j |         70    .0857143     .281963          0          1
         d5k |         70    .2857143    .4550158          0          1
         d5l |         70    .0714286    .2593989          0          1
         d5m |         70    .1142857    .3204552          0          1
-------------+---------------------------------------------------------
         d5n |         70    .8857143    .3204552          0          1
 robustfloor |         70    .0714286    .2593989          0          1
  privatetap |         70    .6428571    .4826171          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = Wealthiest

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         86    .0513953    .0617892          0         .4
    z_sheeps |         86     .029845    .1392819          0   .8666667
     z_goats |         86    .1172093    .1187424          0          1
         d5a |         86    .9186047    .2750451          0          1
         d5b |         86    .6162791    .4891434          0          1
-------------+---------------------------------------------------------
         d5c |         86    .9534884    .2118255          0          1
         d5d |         86    .5348837    .5017071          0          1
         d5e |         86     .244186    .4321233          0          1
         d5f |         86    .2906977    .4567476          0          1
         d5g |         86    .5813953    .4962238          0          1
-------------+---------------------------------------------------------
         d5i |         86    .7790698    .4173068          0          1
         d5j |         86    .0581395    .2353796          0          1
         d5k |         86    .4767442    .5023883          0          1
         d5l |         86     .244186    .4321233          0          1
         d5m |         86    .3837209    .4891434          0          1
-------------+---------------------------------------------------------
         d5n |         86    .9069767    .2921686          0          1
 robustfloor |         86    .1046512    .3078988          0          1
  privatetap |         86    .7790698    .4173068          0          1

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> quintile = .

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    z_cattle |         14    .0235714    .0295685          0   .0833333
    z_sheeps |         14           0           0          0          0
     z_goats |         14       .0675    .0560134          0       .175
         d5a |         11    .8181818    .4045199          0          1
         d5b |         11    .2727273    .4670994          0          1
-------------+---------------------------------------------------------
         d5c |         12    .9166667    .2886751          0          1
         d5d |         11    .1818182    .4045199          0          1
         d5e |         12    .1666667    .3892495          0          1
         d5f |         11    .0909091    .3015113          0          1
         d5g |         11    .0909091    .3015113          0          1
-------------+---------------------------------------------------------
         d5i |         12    .0833333    .2886751          0          1
         d5j |         11    .0909091    .3015113          0          1
         d5k |         11    .1818182    .4045199          0          1
         d5l |         10          .1    .3162278          0          1
         d5m |         10          .2     .421637          0          1
-------------+---------------------------------------------------------
         d5n |         10          .2     .421637          0          1
 robustfloor |         12    .0833333    .2886751          0          1
  privatetap |         12         .25     .452267          0          1


. 
. 
. 
. 
. *** Create Variable that informs about years living in village ***
. /* Problem: for 50% of sample, a6 takes the value of "1". What does this mean? */
. 
. ** lifetime spent in village
. replace a6=2000 if id==380
(1 real change made)

. *Assistant for got a zero in the year
. gen years_in_village = .
(448 missing values generated)

. gen a6_new = 2015-a6 if a6 > 1
(226 missing values generated)

. label variable a6_new "Transformation of a6 in years"

. replace years_in_village = age if a6==1
(222 real changes made)

. replace  years_in_village = a6_new if a6 > 1
(222 real changes made)

. gen rootedness=years_in_village/age
(5 missing values generated)

. replace rootedness=1 if rootedness > 1
(58 real changes made)

. label variable rootedness "Fraction of lifetime spent in village"

. *some are younger than the time spent in the village (they probably have been living there all their life)
. 
. 
. *** experience in years
. gen experience = 2015-f1
(384 missing values generated)

. label variable experience "Years in office"

. 
. 
. // Competition
. gen f5new=f5
(390 missing values generated)

. replace f5new=0 if f5new==. & leader!=.
(6 real changes made)

. rename f5new competitor

. 
. gen dcompetitor = (competitor>0 & competitor!=.)

. label variable competitor "Number of competitors in previous election"

. label variable dcompetitor "Dummy=1 if there were some other candidates in previous election"

. 
. /*
> gen competitor2=competitor
> replace competitor2=20 if competitor2>=20 & competitor2!=.
> */
. 
. // Term office
. gen term=f2a
(384 missing values generated)

. label variable term "Dummy=1 if person faces term office"

. 
. // Elected
. gen elected =1 if f3b==1 | (f3==1 | f3==2)
(412 missing values generated)

. replace elected=0 if elected ==. & leader!=.
(28 real changes made)

. label variable elected "Dummy=1 if person was elected rather than appointed"

. 
. // Secret elections
. gen secretelec = 1 if f4c==1
(432 missing values generated)

. replace secretelec = 0 if f4c>1 & f4c!=.
(47 real changes made)

. label var secretelec "Dummy =1 if elections were secretly held"

. 
. 
. save "$working_ANALYSIS\processed\analysis_wide.dta", replace
file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\processed\analysis_wide.dta saved

. 
. 
. /*
> Reshape dataset into long-format for analysis of bonus payment rounds.
> Generate additional variables for analysis in long-format.
> */
. reshape long rule vote majority payoff, i(id) j(decision)
(note: j = 1 2 3 4 5 6)
(note: payoff2 not found)
(note: payoff3 not found)
(note: payoff4 not found)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                      448   ->    2688
Number of variables                 442   ->     426
j variable (6 values)                     ->   decision
xij variables:
                  rule1 rule2 ... rule6   ->   rule
                  vote1 vote2 ... vote6   ->   vote
      majority1 majority2 ... majority6   ->   majority
            payoff1 payoff2 ... payoff6   ->   payoff
-----------------------------------------------------------------------------

. 
. *Drop all decisions except 1, 5 and 6 (basic, bonus1, bonus2)
. drop if decision>1 & decision<5
(1,344 observations deleted)

. drop if id>64
(1,152 observations deleted)

. order decision rule vote majority payoff, after(session_id)

. order session_id, after(id)

. 
. *---------------------------------------------------------
. * Generating additional variables for long-format analysis
. *---------------------------------------------------------
. * Binary rule choice
. gen dem=0

. replace dem=1 if rule==1
(123 real changes made)

. 
. gen dic=0

. replace dic=1 if rule==3
(14 real changes made)

. 
. gen fake=0

. replace fake=1 if rule==2
(55 real changes made)

. *bonus: 0=no bonus, 1=any bonus
. gen bonus=0

. replace bonus=1 if decision>4
(128 real changes made)

. 
. 
. *bonus_size: 0=no, 1=small, 2=large
. gen bonus_size=0

. replace bonus_size=1 if decision==5
(64 real changes made)

. replace bonus_size=2 if decision==6
(64 real changes made)

. lab def bonus_size1 0 "Baseline" 1 "Small Bonus" 2 "Large Bonus", replace

. lab val bonus_size bonus_size1

. 
. 
. *Generate identifier for the first bonus that was offered
. gen bonus_first=0 if (decision==6 & randomization<7) | (decision==5 & randomization>6)
(128 missing values generated)

. replace bonus_first=1 if (decision==5 & randomization<7) | (decision==6 & randomization>6)
(64 real changes made)

. label def first_lab 0 "3rd round" 1 "2nd round", replace

. lab val bonus_first first_lab

. 
. replace rule=1 if dem==1
(0 real changes made)

. replace rule=2 if fake==1
(0 real changes made)

. replace rule=3 if dic==1
(0 real changes made)

. 
. label def bonus 0 "Baseline (n=64)" 1 "Pooled Bonus (n=128)", replace

. label def rule 1 "Democratic" 2 "Pseudo-democratic" 3 "Autocratic" , replace

. label val bonus bonus

. label val rule rule

. 
. order bonus bonus_size bonus_order randomization dem dic fake, after(majority)

. 
. *rule choice variable for basic round
. gen rule_basic = rule if decision==1
(128 missing values generated)

. replace rule_basic = rule_basic[_n-1] if missing(rule_basic)
(128 real changes made)

. order rule_basic, after(rule)

. label def rule_basic 1 "Base: Democratic (n=41)" 2 "Base: Pseudo (n=14)" 3 "Base: Autocrat (n=9)", replace

. label val rule_basic rule_basic

. 
. 
. qui tab bonus_size, gen(bonus_)

. qui tab bonus_order, gen(order_)

. qui tab rule_basic, gen(baseline_)

. 
. *interactions 
. gen bonus_democrat=bonus*baseline_1

. gen bonus_pseudo=bonus*baseline_2

. gen bonus_dictator=bonus*baseline_3

. 
. *round identifier
. gen round= 1 if bonus_first==.
(128 missing values generated)

. replace round = 2 if bonus_first==1
(64 real changes made)

. replace round = 3 if bonus_first==0
(64 real changes made)

. 
. lab def order1 0 "Base-Large-Small" 1 "Base-Small-Large", replace

. lab val bonus_order order1

. 
. 
. 
. 
. *Types based on boxes as explained in section 2
. *based on leaders' motivations from pre-workshop survey 
. gen type=0

. replace type=1 if rule_base!=1 & extrinsic==0
(36 real changes made)

. replace type=2 if rule_base!=1 & extrinsic==1
(33 real changes made)

. replace type=3 if rule_base==1 & extrinsic==0
(69 real changes made)

. replace type=4 if rule_base==1 & extrinsic==1
(54 real changes made)

. lab def typo 1 "Box I" 2 "Box III" 3 "Box II" 4 "Box IV", replace

. lab val type typo

. 
. *based on authentic leadership measure
. gen type_AL=1 if rule_base!=1 & authentic_leader1==1
(159 missing values generated)

. replace type_AL=2 if rule_base!=1 & authentic_leader1==0
(36 real changes made)

. replace type_AL=3 if rule_base==1 & authentic_leader1==1
(69 real changes made)

. replace type_AL=4 if rule_base==1 & authentic_leader1==0
(54 real changes made)

. lab val type_AL typo

. 
. 
. // Globals
. global order order_3

. global socio education age pca_wealth male experience married rootedness

. 
. *interactions
. gen bonus_extrinsic=bonus*extrinsic_leader

. gen bonus_TL=bonus*TL

. 
. 
. save "$working_ANALYSIS\processed\analysis_long.dta", replace
file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\processed\analysis_long.dta saved

. 
. 
. 
. 
. ** EOF
. 
end of do-file

. do "C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\scripts\03_analysis.do"

. *--------------------------------------------------------------------
. * SCRIPT: 03_analysis.do
. * PURPOSE: replicates the tables and figures and saves the results
. *--------------------------------------------------------------------
. 
. *--------------------------------------------------
. * STRUCTURE OF THE DO-FILE
. /*
> 
>         1) Analysis for main paper
>         2) Analysis for supplementary online materials
> */
. *--------------------------------------------------
. 
. 
. *--------------------------------------------------
. * (1) Analysis for main paper
. *--------------------------------------------------
. 
. 
. *Figure 1.      Normative expectations regarding group decision-making
. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. * Please indicate for each of the statement whether you disagree strongly, disagree a little, neither agree nor disagree, agree a little, or strongly a
> gree
.  global dem_norm c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12

.  foreach var of varlist $dem_norm {
  2.         replace `var'=0 if `var'==. 
  3.         }
(51 real changes made)
(53 real changes made)
(49 real changes made)
(113 real changes made)
(23 real changes made)
(61 real changes made)
(86 real changes made)
(26 real changes made)
(63 real changes made)
(52 real changes made)
(36 real changes made)
(32 real changes made)

.         
. foreach var of varlist $dem_norm {
  2.         gen new_`var'=1 if `var'==1
  3.         replace new_`var'=2 if `var'==2 
  4.         replace new_`var'=3 if `var'==0 
  5.         replace new_`var'=4 if `var'==3
  6.         replace new_`var'=5 if `var'==4
  7.         }
(372 missing values generated)
(8 real changes made)
(51 real changes made)
(19 real changes made)
(294 real changes made)
(353 missing values generated)
(20 real changes made)
(53 real changes made)
(43 real changes made)
(237 real changes made)
(390 missing values generated)
(10 real changes made)
(49 real changes made)
(30 real changes made)
(301 real changes made)
(353 missing values generated)
(22 real changes made)
(113 real changes made)
(30 real changes made)
(188 real changes made)
(399 missing values generated)
(4 real changes made)
(23 real changes made)
(9 real changes made)
(363 real changes made)
(191 missing values generated)
(13 real changes made)
(61 real changes made)
(24 real changes made)
(93 real changes made)
(284 missing values generated)
(45 real changes made)
(86 real changes made)
(34 real changes made)
(119 real changes made)
(397 missing values generated)
(6 real changes made)
(26 real changes made)
(6 real changes made)
(359 real changes made)
(153 missing values generated)
(11 real changes made)
(63 real changes made)
(12 real changes made)
(67 real changes made)
(334 missing values generated)
(38 real changes made)
(52 real changes made)
(71 real changes made)
(173 real changes made)
(307 missing values generated)
(40 real changes made)
(36 real changes made)
(55 real changes made)
(176 real changes made)
(375 missing values generated)
(21 real changes made)
(32 real changes made)
(61 real changes made)
(261 real changes made)

. lab var new_c1 "For important decisions members of a group should be allowed to vote."

. lab var new_c2 "Most people can learn to be leaders, it is not a matter of birth."

. lab var new_c3 "Democratic elections in this village ensure that the elected authorities act in the interest of their people."
note: label truncated to 80 characters

. lab var new_c4 "In most cases, failures in this village are traceable to bad cicumstances and not bad leadership."
note: label truncated to 80 characters

. lab var new_c5 "Schools and parents schould teach children to obey authority."

. lab var new_c6 "Favouring friends, relatives or supporters over others in the course of ones duties as a leader is sometimes justified."
note: label truncated to 80 characters

. lab var new_c7 "On the whole, men make better political leaders than women do."

. lab var new_c8 "A leader hast to serve all people including those who did not vote for him/her or are not friends."
note: label truncated to 80 characters

. lab var new_c9 "Accepting a bribe in the course of ones duties is sometimes justified."

. lab var new_c10 "Most people in this village can be trusted."

. lab var new_c11 "On the whole, more educated people make better political leaders than the less educated do."
note: label truncated to 80 characters

. lab var new_c12 "On the whole, elders make better political leaders than the youth do."

.         
. gen new_c6r = 6- new_c6

. gen new_c7r = 6- new_c7 

. gen new_c9r = 6- new_c9

. alpha new_c1 new_c3 new_c8 new_c9r 

Test scale = mean(unstandardized items)

Average interitem covariance:     .9378221
Number of items in the scale:            4
Scale reliability coefficient:      0.7613

. 
. gen types = 0 if villager==1
(64 missing values generated)

. replace types = 1 if extrinsic_leader==0
(35 real changes made)

. replace types = 2 if extrinsic_leader==1
(29 real changes made)

. lab def villy1 0 "Villager" 1 "Intrinsic leader" 2 "Extrinsic leader", replace

. lab val types villy1

. 
. *graphical presentation
. preserve

. rename new_c1 norm1

. rename new_c3 norm2

. rename new_c8 norm3

. 
. 
. reshape long norm ,i(id) j(pr_id)
(note: j = 1 2 3)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                      448   ->    1344
Number of variables                 458   ->     457
j variable (3 values)                     ->   pr_id
xij variables:
                      norm1 norm2 norm3   ->   norm
-----------------------------------------------------------------------------

. label define pr1 1 "Group voting" 2 "Elections" 3 "Inclusive"

. label values pr_id pr1

. 
. cibar norm, over1(types) over2(pr_id) bargap(0) gap(80) barlabel(on) blpos(11) blgap(0.01) blfmt(%9.1f) graphopts(legend() xsize(4) ysize(2) yla(1(1)5)
>   ytitle("Mean") note("{bf: Group voting}='For important decisions members of a group should be allowed to vote.'" "{bf: Elections}='Democratic electio
> ns in this village ensure that the elected authorities act in the interest of their people.'" "{bf: Inclusive}='A leader hast to serve all people inclu
> ding those who did not vote for him/her or are not friends.'")) ciopts(lpattern(dash) lcolor(black))

. gr save "$working_ANALYSIS/results/intermediate/figure1_normative_expectations.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure1_normative_expectations.
> gph saved)

. gr export "$working_ANALYSIS/results/figures/figure1_normative_expectations.tif", replace width(3465)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure1_normative_expectations.tif w
> ritten in TIFF format)

. restore

. 
. ttest new_c1 if types!= 2, by(types)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
Villager |     384    4.117188    .0727191    1.424997    3.974209    4.260166
Intrinsi |      35    3.685714    .3142857    1.859339    3.047009     4.32442
---------+--------------------------------------------------------------------
combined |     419    4.081146     .071734    1.468359    3.940141     4.22215
---------+--------------------------------------------------------------------
    diff |            .4314732    .2587118               -.0770686     .940015
------------------------------------------------------------------------------
    diff = mean(Villager) - mean(Intrinsi)                        t =   1.6678
Ho: diff = 0                                     degrees of freedom =      417

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9519         Pr(|T| > |t|) = 0.0961          Pr(T > t) = 0.0481

. ranksum new_c1 if types!= 1, by(types)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

       types |      obs    rank sum    expected
-------------+---------------------------------
    Villager |      384       81341       79488
Extrinsic le |       29        4150        6003
-------------+---------------------------------
    combined |      413       85491       85491

unadjusted variance   384192.00
adjustment for ties  -110872.43
                     ----------
adjusted variance     273319.57

Ho: new_c1(types==Villager) = new_c1(types==Extrinsic leader)
             z =   3.544
    Prob > |z| =   0.0004

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

. ranksum new_c1 if types!= 0, by(types)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

       types |      obs    rank sum    expected
-------------+---------------------------------
Intrinsic le |       35      1259.5      1137.5
Extrinsic le |       29       820.5       942.5
-------------+---------------------------------
    combined |       64        2080        2080

unadjusted variance     5497.92
adjustment for ties    -1346.28
                     ----------
adjusted variance       4151.63

Ho: new_c1(types==Intrinsic leader) = new_c1(types==Extrinsic leader)
             z =   1.893
    Prob > |z| =   0.0583
    Exact Prob =   0.0707

. reg new_c1 i.types

      Source |       SS           df       MS      Number of obs   =       448
-------------+----------------------------------   F(2, 445)       =     11.23
       Model |  50.9697275         2  25.4848638   Prob > F        =    0.0000
    Residual |  1010.02804       445  2.26972593   R-squared       =    0.0480
-------------+----------------------------------   Adj R-squared   =    0.0438
       Total |  1060.99777       447   2.3735968   Root MSE        =    1.5066

-----------------------------------------------------------------------------------
           new_c1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |  -.4314732   .2660076    -1.62   0.106    -.9542605     .091314
Extrinsic leader  |  -1.324084    .290133    -4.56   0.000    -1.894285    -.753883
                  |
            _cons |   4.117188   .0768814    53.55   0.000     3.966092    4.268283
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    5.57
            Prob > F =    0.0187

. reg new_c3 i.types, vce(hc3)

Linear regression                               Number of obs     =        448
                                                F(2, 445)         =      19.56
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1286
                                                Root MSE          =     1.3309

-----------------------------------------------------------------------------------
                  |             Robust HC3
           new_c3 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |   -.652753   .3228877    -2.02   0.044    -1.287327   -.0181788
Extrinsic leader  |  -1.999551   .3337905    -5.99   0.000    -2.655552    -1.34355
                  |
            _cons |   4.309896   .0633192    68.07   0.000     4.185454    4.434338
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    8.74
            Prob > F =    0.0033

. reg new_c8 i.types, vce(hc3)

Linear regression                               Number of obs     =        448
                                                F(2, 445)         =      16.19
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1495
                                                Root MSE          =     1.2404

-----------------------------------------------------------------------------------
                  |             Robust HC3
           new_c8 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |  -.9443452   .3349403    -2.82   0.005    -1.602606    -.286084
Extrinsic leader  |  -1.917744   .3828851    -5.01   0.000    -2.670232   -1.165257
                  |
            _cons |   4.572917   .0551377    82.94   0.000     4.464554    4.681279
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    3.75
            Prob > F =    0.0535

. 
. 
. *normative expecation related to group voting by leader baseline choice
. reg new_c1 i.rule_base3 if villager==1, vce(hc3)

Linear regression                               Number of obs     =        384
                                                F(1, 382)         =       4.87
                                                Prob > F          =     0.0279
                                                R-squared         =     0.0087
                                                Root MSE          =     1.4207

------------------------------------------------------------------------------
             |             Robust HC3
      new_c1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
1.rule_base3 |   .3808081   .1725629     2.21   0.028     .0415161    .7201001
       _cons |   4.063636   .0807426    50.33   0.000     3.904881    4.222392
------------------------------------------------------------------------------

. 
. 
. 
. 
. *Figure 2.      Preference for democratic governance in study region
. clear

. use "$working_ANALYSIS/data/afro_r6.dta"

. keep if COUNTRY==22
(52,735 observations deleted)

. rename *, lower

. 
. 
. gen ohangwena= 0

. replace ohangwena = 1 if region == 588
(120 real changes made)

. lab def ohang 0 "Rest of Namibia" 1 "Ohangwena", replace

. lab val ohangwena ohang

. *SUPPORT FOR DEMOCRACY
. tab q30, nolab

       Q30. |
Support for |
  democracy |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        192       16.00       16.00
          2 |         96        8.00       24.00
          3 |        884       73.67       97.67
          9 |         28        2.33      100.00
------------+-----------------------------------
      Total |      1,200      100.00

. lab def democracy 1 "Does't matter for someone like me" 2 "Sometimes non-democratic preferable" 3 "Always democracy preferable", replace 

. lab val q30 democracy

. foreach x of varlist q30 q52b q52j q52k q68d q71a {
  2.         replace `x'=. if `x'==9
  3. }
(28 real changes made, 28 to missing)
(31 real changes made, 31 to missing)
(11 real changes made, 11 to missing)
(27 real changes made, 27 to missing)
(68 real changes made, 68 to missing)
(11 real changes made, 11 to missing)

. encode location_level_1, gen(constituency)

. gen demo_pref= 1 if q30==3
(316 missing values generated)

. replace demo_pref = 0 if q30<3
(288 real changes made)

. 
. ttest q52b, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,050    2.117143    .0287843    .9327182    2.060661    2.173624
Ohangwen |     119    2.327731    .0810391     .884032    2.167252    2.488211
---------+--------------------------------------------------------------------
combined |   1,169     2.13858    .0271916    .9296993     2.08523     2.19193
---------+--------------------------------------------------------------------
    diff |           -.2105882    .0897523               -.3866822   -.0344943
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =  -2.3463
Ho: diff = 0                                     degrees of freedom =     1167

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.0096         Pr(|T| > |t|) = 0.0191          Pr(T > t) = 0.9904

. ttest q52j, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,070    2.080374    .0272134     .890175    2.026976    2.133772
Ohangwen |     119     1.87395    .0822994    .8977809    1.710974    2.036925
---------+--------------------------------------------------------------------
combined |   1,189    2.059714    .0258893    .8927129     2.00892    2.110508
---------+--------------------------------------------------------------------
    diff |            .2064243    .0860936                .0375116    .3753369
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   2.3977
Ho: diff = 0                                     degrees of freedom =     1187

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9917         Pr(|T| > |t|) = 0.0167          Pr(T > t) = 0.0083

. ttest q52k, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,053      2.1415    .0276339    .8967179    2.087277    2.195724
Ohangwen |     120    2.008333    .0771479    .8451128    1.855573    2.161094
---------+--------------------------------------------------------------------
combined |   1,173    2.127877    .0260487    .8921436     2.07677    2.178984
---------+--------------------------------------------------------------------
    diff |            .1331671    .0859051                -.035378    .3017123
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   1.5502
Ho: diff = 0                                     degrees of freedom =     1171

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9393         Pr(|T| > |t|) = 0.1214          Pr(T > t) = 0.0607

. ttest q68d, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,030    2.976699    .0226438    .7267222    2.932266    3.021132
Ohangwen |     102    2.911765    .0871282    .8799521    2.738926    3.084604
---------+--------------------------------------------------------------------
combined |   1,132    2.970848    .0220421    .7416127      2.9276    3.014096
---------+--------------------------------------------------------------------
    diff |            .0649343    .0769905               -.0861261    .2159947
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   0.8434
Ho: diff = 0                                     degrees of freedom =     1130

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.8004         Pr(|T| > |t|) = 0.3992          Pr(T > t) = 0.1996

. ttest q71a, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,069    3.727783    .0394163    1.288739    3.650441    3.805125
Ohangwen |     120    3.391667     .130875    1.433664    3.132521    3.650812
---------+--------------------------------------------------------------------
combined |   1,189     3.69386    .0379148    1.307375    3.619473    3.768248
---------+--------------------------------------------------------------------
    diff |            .3361163    .1255415                .0898084    .5824242
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   2.6773
Ho: diff = 0                                     degrees of freedom =     1187

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9962         Pr(|T| > |t|) = 0.0075          Pr(T > t) = 0.0038

.  
. gen com_member = 0

. replace com_member = 1 if q19b==3 | q19b==2
(169 real changes made)

. 
. *Democracy is preferable to any other kind of government.
. gen study_sites = 0

. replace study_sites = 1 if ohangwena==1
(120 real changes made)

. replace study_sites = 2 if constituency==9 | constituency==43 | constituency==71
(40 real changes made)

. lab def studies 0 "Rest of Namibia (n=1058)" 1 "Rest of Ohangwena (n=76)" 2 "Study sites (n=38)", replace

. lab val study_sites studies

. catplot q30, over(study_sites) asyvars stack horizontal recast(bar) yla(0(20)100, nogrid) percent(study_sites) bargap(10) blabel(bar, format(%9.0f) pos
> (center)  gap(0.1)) title("Which of these three statements is closest to your own opinion?")  b1title("") legend(ring(1) pos(6) rows(3))

. gr save  "$working_ANALYSIS/results/intermediate/support_dem_namibia.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/support_dem_namibia.gph saved)

. gr export "$working_ANALYSIS/results/figures/afro_support_democracy.tif", replace width(4000)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/afro_support_democracy.tif written i
> n TIFF format)

. ranksum q30 if study_sites!=1, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Nami |     1058    581626.5      580313
Study sites  |       38     19529.5       20843
-------------+---------------------------------
    combined |     1096      601156      601156

unadjusted variance  3675315.67
adjustment for ties   -1.60e+06
                     ----------
adjusted variance    2073385.02

Ho: q30(study_~s==Rest of Namibia (n=1058)) = q30(study_~s==Study sites (n=38))
             z =   0.912
    Prob > |z| =   0.3617

. ranksum q30 if study_sites!=0, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Ohan |       76      4414.5        4370
Study sites  |       38      2140.5        2185
-------------+---------------------------------
    combined |      114        6555        6555

unadjusted variance    27676.67
adjustment for ties   -11049.14
                     ----------
adjusted variance      16627.52

Ho: q30(study_~s==Rest of Ohangwena (n=76)) = q30(study_~s==Study sites (n=38))
             z =   0.345
    Prob > |z| =   0.7300
    Exact Prob =   0.7819

. 
. reg q52b i.study_sites, vce(hc3)

Linear regression                               Number of obs     =      1,169
                                                F(2, 1166)        =      11.40
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0144
                                                Root MSE          =     .92378

-------------------------------------------------------------------------------------------
                          |             Robust HC3
                     q52b |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
--------------------------+----------------------------------------------------------------
              study_sites |
Rest of Ohangwena (n=76)  |   .4145027    .091302     4.54   0.000     .2353682    .5936372
      Study sites (n=38)  |  -.1921429   .1581376    -1.22   0.225    -.5024089    .1181232
                          |
                    _cons |   2.117143    .028798    73.52   0.000     2.060641    2.173645
-------------------------------------------------------------------------------------------

. ranksum q52b if study_sites!=1, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Nami |     1050      575205      572775
Study sites  |       40       19390       21820
-------------+---------------------------------
    combined |     1090      594595      594595

unadjusted variance  3818500.00
adjustment for ties  -454608.43
                     ----------
adjusted variance    3363891.57

Ho: q52b(study_~s==Rest of Namibia (n=1058)) = q52b(study_~s==Study sites (n=38))
             z =   1.325
    Prob > |z| =   0.1852

. ranksum q71a if study_sites!=1, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Nami |     1069      596168      593295
Study sites  |       40       19327       22200
-------------+---------------------------------
    combined |     1109      615495      615495

unadjusted variance  3955300.00
adjustment for ties  -359561.61
                     ----------
adjusted variance    3595738.39

Ho: q71a(study_~s==Rest of Namibia (n=1058)) = q71a(study_~s==Study sites (n=38))
             z =   1.515
    Prob > |z| =   0.1297

. 
. 
. 
. * Load cleaned dataset (long-format)
. clear

. use "$working_ANALYSIS/processed/analysis_long.dta"

. 
. *set panel
. xtset id decision
       panel variable:  id (strongly balanced)
        time variable:  decision, 1 to 6, but with gaps
                delta:  1 unit

. 
. 
. *Figure 4.      Average treatment effects of payment
. *Panel A: Main treatment effects
. tab rule if decision<2

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         41       64.06       64.06
Pseudo-democratic |         14       21.88       85.94
       Autocratic |          9       14.06      100.00
------------------+-----------------------------------
            Total |         64      100.00

. bys TL: tab rule if decision<2

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> TL = 0

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         18       56.25       56.25
Pseudo-democratic |          8       25.00       81.25
       Autocratic |          6       18.75      100.00
------------------+-----------------------------------
            Total |         32      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> TL = 1

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         23       71.88       71.88
Pseudo-democratic |          6       18.75       90.63
       Autocratic |          3        9.38      100.00
------------------+-----------------------------------
            Total |         32      100.00


. prtest dem1 if decision<2, by(TL)

Two-sample test of proportions                     0: Number of obs =       32
                                                   1: Number of obs =       32
------------------------------------------------------------------------------
       Group |       Mean   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
           0 |      .5625   .0876951                      .3906208    .7343792
           1 |     .71875   .0794804                      .5629712    .8745288
-------------+----------------------------------------------------------------
        diff |    -.15625   .1183536                     -.3882187    .0757187
             |  under Ho:   .1199543    -1.30   0.193
------------------------------------------------------------------------------
        diff = prop(0) - prop(1)                                  z =  -1.3026
    Ho: diff = 0

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(Z < z) = 0.0964         Pr(|Z| > |z|) = 0.1927          Pr(Z > z) = 0.9036

. 
. 
. * Small and Large bonus seperately
. eststo reg_dem1: xtprobit dem bonus_2 bonus_3 , vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -125.38709  
Iteration 1:   log pseudolikelihood = -125.38709  

Fitting full model:

rho =  0.0     log pseudolikelihood = -125.38709
rho =  0.1     log pseudolikelihood = -120.97002
rho =  0.2     log pseudolikelihood = -117.59758
rho =  0.3     log pseudolikelihood = -115.02704
rho =  0.4     log pseudolikelihood = -113.13299
rho =  0.5     log pseudolikelihood = -111.87369
rho =  0.6     log pseudolikelihood = -111.29283
rho =  0.7     log pseudolikelihood = -111.58207

Iteration 0:   log pseudolikelihood = -111.29429  
Iteration 1:   log pseudolikelihood = -110.64933  
Iteration 2:   log pseudolikelihood = -110.63147  
Iteration 3:   log pseudolikelihood = -110.63147  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       0.00
Log pseudolikelihood  = -110.63147              Prob > chi2       =     0.9999

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .0038466   .2964481     0.01   0.990     -.577181    .5848743
     bonus_3 |   .0038466   .2964481     0.01   0.990     -.577181    .5848743
       _cons |   .5973239   .2794914     2.14   0.033     .0495309    1.145117
-------------+----------------------------------------------------------------
    /lnsig2u |   .5734665   .4495206                     -.3075777    1.454511
-------------+----------------------------------------------------------------
     sigma_u |   1.332069   .2993962                      .8574531    2.069393
         rho |   .6395627   .1036245                      .4237061    .8106917
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dem=1), predict(pr)
dy/dx w.r.t. : bonus_2 bonus_3

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .0008635   .0665515     0.01   0.990     -.129575    .1313021
     bonus_3 |   .0008635   .0665515     0.01   0.990     -.129575    .1313021
------------------------------------------------------------------------------

. est store pr1

. eststo reg_fake1: xtprobit fake bonus_2 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =  -114.9984  
Iteration 1:   log pseudolikelihood = -113.09846  
Iteration 2:   log pseudolikelihood = -113.09531  
Iteration 3:   log pseudolikelihood = -113.09531  

Fitting full model:

rho =  0.0     log pseudolikelihood = -113.09531
rho =  0.1     log pseudolikelihood = -109.50028
rho =  0.2     log pseudolikelihood = -106.85965
rho =  0.3     log pseudolikelihood = -104.95446
rho =  0.4     log pseudolikelihood = -103.67659
rho =  0.5     log pseudolikelihood = -102.99775
rho =  0.6     log pseudolikelihood = -102.97063
rho =  0.7     log pseudolikelihood = -103.77414

Iteration 0:   log pseudolikelihood = -102.97557  
Iteration 1:   log pseudolikelihood = -101.54769  
Iteration 2:   log pseudolikelihood = -101.40994  
Iteration 3:   log pseudolikelihood = -101.40943  
Iteration 4:   log pseudolikelihood = -101.40943  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       3.97
Log pseudolikelihood  = -101.40943              Prob > chi2       =     0.2652

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .4614349   .3139349     1.47   0.142    -.1538663    1.076736
     bonus_3 |   .5327473   .3187649     1.67   0.095    -.0920204    1.157515
 bonus_order |   .3387109   .4152962     0.82   0.415    -.4752546    1.152676
       _cons |  -1.431821   .3832913    -3.74   0.000    -2.183058   -.6805835
-------------+----------------------------------------------------------------
    /lnsig2u |   .4616659   .4812244                     -.4815165    1.404848
-------------+----------------------------------------------------------------
     sigma_u |   1.259649   .3030868                      .7860316     2.01864
         rho |   .6134093   .1141167                      .3818941    .8029521
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(fake=1), predict(pr)
dy/dx w.r.t. : bonus_2 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .0961699    .063935     1.50   0.133    -.0291404    .2214802
     bonus_3 |   .1110324   .0645646     1.72   0.085    -.0155119    .2375767
 bonus_order |   .0705924   .0860772     0.82   0.412    -.0981159    .2393007
------------------------------------------------------------------------------

. est store pr2

. eststo reg_dic1: xtprobit dic bonus_2 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -50.134837  
Iteration 1:   log pseudolikelihood = -46.751419  
Iteration 2:   log pseudolikelihood = -46.668355  
Iteration 3:   log pseudolikelihood = -46.668238  
Iteration 4:   log pseudolikelihood = -46.668238  

Fitting full model:

rho =  0.0     log pseudolikelihood = -46.668238
rho =  0.1     log pseudolikelihood =  -46.34144
rho =  0.2     log pseudolikelihood = -46.487345

Iteration 0:   log pseudolikelihood =  -46.34144  
Iteration 1:   log pseudolikelihood = -46.224904  
Iteration 2:   log pseudolikelihood = -45.725694  
Iteration 3:   log pseudolikelihood = -45.716321  
Iteration 4:   log pseudolikelihood = -45.716168  
Iteration 5:   log pseudolikelihood = -45.716168  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       5.89
Log pseudolikelihood  = -45.716168              Prob > chi2       =     0.1171

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |  -.7685142   .3654187    -2.10   0.035    -1.484722   -.0523066
     bonus_3 |  -.9802238   .4762269    -2.06   0.040    -1.913611   -.0468363
 bonus_order |  -.3149328   .3841314    -0.82   0.412    -1.067817    .4379509
       _cons |  -1.164717   .3813613    -3.05   0.002    -1.912172   -.4172627
-------------+----------------------------------------------------------------
    /lnsig2u |   -.664432   .8165016                     -2.264746    .9358817
-------------+----------------------------------------------------------------
     sigma_u |   .7173324   .2928515                      .3222677    1.596703
         rho |   .3397447   .1831562                      .0940851     .718267
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dic=1), predict(pr)
dy/dx w.r.t. : bonus_2 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |  -.0804475   .0394257    -2.04   0.041    -.1577204   -.0031745
     bonus_3 |  -.1026091   .0485981    -2.11   0.035    -.1978595   -.0073586
 bonus_order |  -.0329669   .0402543    -0.82   0.413    -.1118639    .0459301
------------------------------------------------------------------------------

. est store pr3

. 
. *test small versus large bonus 
. xtprobit dem bonus_1 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -125.38709  
Iteration 1:   log pseudolikelihood = -125.13711  
Iteration 2:   log pseudolikelihood =  -125.1371  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -125.1371
rho =  0.1     log pseudolikelihood = -120.75301
rho =  0.2     log pseudolikelihood = -117.40806
rho =  0.3     log pseudolikelihood = -114.86156
rho =  0.4     log pseudolikelihood = -112.98925
rho =  0.5     log pseudolikelihood = -111.75008
rho =  0.6     log pseudolikelihood = -111.18782
rho =  0.7     log pseudolikelihood = -111.49319

Iteration 0:   log pseudolikelihood = -111.19027  
Iteration 1:   log pseudolikelihood =  -110.5521  
Iteration 2:   log pseudolikelihood = -110.53321  
Iteration 3:   log pseudolikelihood = -110.53321  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       0.20
Log pseudolikelihood  = -110.53321              Prob > chi2       =     0.9783

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.0040703   .2964191    -0.01   0.989    -.5850411    .5769005
     bonus_3 |  -.0004308   .2642776    -0.00   0.999    -.5184054    .5175438
 bonus_order |  -.1862215   .4213684    -0.44   0.659    -1.012088    .6396453
       _cons |   .6984892   .3495222     2.00   0.046     .0134383     1.38354
-------------+----------------------------------------------------------------
    /lnsig2u |   .5654265   .4499982                     -.3165538    1.447407
-------------+----------------------------------------------------------------
     sigma_u |   1.326725   .2985119                      .8536134    2.062056
         rho |   .6377072   .1039661                      .4215158     .809599
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dem=1), predict(pr)
dy/dx w.r.t. : bonus_1 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.0009149    .066629    -0.01   0.989    -.1315054    .1296756
     bonus_3 |  -.0000968   .0594032    -0.00   0.999     -.116525    .1163313
 bonus_order |  -.0418581   .0944824    -0.44   0.658    -.2270401     .143324
------------------------------------------------------------------------------

. xtprobit fake bonus_1 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =  -114.9984  
Iteration 1:   log pseudolikelihood = -113.09846  
Iteration 2:   log pseudolikelihood = -113.09531  
Iteration 3:   log pseudolikelihood = -113.09531  

Fitting full model:

rho =  0.0     log pseudolikelihood = -113.09531
rho =  0.1     log pseudolikelihood = -109.50028
rho =  0.2     log pseudolikelihood = -106.85965
rho =  0.3     log pseudolikelihood = -104.95446
rho =  0.4     log pseudolikelihood = -103.67659
rho =  0.5     log pseudolikelihood = -102.99775
rho =  0.6     log pseudolikelihood = -102.97063
rho =  0.7     log pseudolikelihood = -103.77414

Iteration 0:   log pseudolikelihood = -102.97557  
Iteration 1:   log pseudolikelihood = -101.54769  
Iteration 2:   log pseudolikelihood = -101.40994  
Iteration 3:   log pseudolikelihood = -101.40943  
Iteration 4:   log pseudolikelihood = -101.40943  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       3.97
Log pseudolikelihood  = -101.40943              Prob > chi2       =     0.2652

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.4614349   .3139349    -1.47   0.142    -1.076736    .1538663
     bonus_3 |   .0713124   .2771217     0.26   0.797    -.4718362     .614461
 bonus_order |   .3387109   .4152962     0.82   0.415    -.4752546    1.152676
       _cons |  -.9703856   .3528396    -2.75   0.006    -1.661939   -.2788326
-------------+----------------------------------------------------------------
    /lnsig2u |   .4616659   .4812244                     -.4815165    1.404848
-------------+----------------------------------------------------------------
     sigma_u |   1.259649   .3030868                      .7860316     2.01864
         rho |   .6134093   .1141167                      .3818941    .8029521
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(fake=1), predict(pr)
dy/dx w.r.t. : bonus_1 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.0961699    .063935    -1.50   0.133    -.2214802    .0291404
     bonus_3 |   .0148626   .0577308     0.26   0.797    -.0982878    .1280129
 bonus_order |   .0705924   .0860772     0.82   0.412    -.0981159    .2393007
------------------------------------------------------------------------------

. xtprobit dic bonus_1 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -50.134837  
Iteration 1:   log pseudolikelihood = -46.751419  
Iteration 2:   log pseudolikelihood = -46.668355  
Iteration 3:   log pseudolikelihood = -46.668238  
Iteration 4:   log pseudolikelihood = -46.668238  

Fitting full model:

rho =  0.0     log pseudolikelihood = -46.668238
rho =  0.1     log pseudolikelihood =  -46.34144
rho =  0.2     log pseudolikelihood = -46.487345

Iteration 0:   log pseudolikelihood =  -46.34144  
Iteration 1:   log pseudolikelihood = -46.224904  
Iteration 2:   log pseudolikelihood = -45.725694  
Iteration 3:   log pseudolikelihood = -45.716321  
Iteration 4:   log pseudolikelihood = -45.716168  
Iteration 5:   log pseudolikelihood = -45.716168  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       5.89
Log pseudolikelihood  = -45.716168              Prob > chi2       =     0.1171

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |   .7685142   .3654187     2.10   0.035     .0523066    1.484722
     bonus_3 |  -.2117097   .4085308    -0.52   0.604    -1.012415    .5889961
 bonus_order |  -.3149328   .3841314    -0.82   0.412    -1.067817    .4379509
       _cons |  -1.933231   .4224659    -4.58   0.000    -2.761249   -1.105213
-------------+----------------------------------------------------------------
    /lnsig2u |   -.664432   .8165016                     -2.264746    .9358817
-------------+----------------------------------------------------------------
     sigma_u |   .7173324   .2928515                      .3222677    1.596703
         rho |   .3397447   .1831562                      .0940851     .718267
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dic=1), predict(pr)
dy/dx w.r.t. : bonus_1 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |   .0804475   .0394257     2.04   0.041     .0031745    .1577204
     bonus_3 |  -.0221616   .0421551    -0.53   0.599    -.1047841    .0604609
 bonus_order |  -.0329669   .0402543    -0.82   0.413    -.1118639    .0459301
------------------------------------------------------------------------------

. 
. *pooled bonus
. eststo reg_dem2: xtprobit dem bonus bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -125.38709  
Iteration 1:   log pseudolikelihood = -125.13711  
Iteration 2:   log pseudolikelihood =  -125.1371  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -125.1371
rho =  0.1     log pseudolikelihood = -120.75302
rho =  0.2     log pseudolikelihood = -117.40806
rho =  0.3     log pseudolikelihood = -114.86156
rho =  0.4     log pseudolikelihood = -112.98925
rho =  0.5     log pseudolikelihood = -111.75008
rho =  0.6     log pseudolikelihood = -111.18782
rho =  0.7     log pseudolikelihood =  -111.4932

Iteration 0:   log pseudolikelihood = -111.19027  
Iteration 1:   log pseudolikelihood =  -110.5521  
Iteration 2:   log pseudolikelihood = -110.53321  
Iteration 3:   log pseudolikelihood = -110.53321  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       0.20
Log pseudolikelihood  = -110.53321              Prob > chi2       =     0.9069

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .0038548   .2653135     0.01   0.988      -.51615    .5238597
 bonus_order |  -.1862194   .4213702    -0.44   0.659     -1.01209    .6396511
       _cons |   .6944178   .3408885     2.04   0.042     .0262886    1.362547
-------------+----------------------------------------------------------------
    /lnsig2u |   .5654267   .4499981                     -.3165533    1.447407
-------------+----------------------------------------------------------------
     sigma_u |   1.326725   .2985118                      .8536136    2.062056
         rho |   .6377072   .1039661                       .421516     .809599
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dem=1), predict(pr)
dy/dx w.r.t. : bonus bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .0008665   .0596371     0.01   0.988    -.1160202    .1177531
 bonus_order |  -.0418576   .0944827    -0.44   0.658    -.2270403    .1433252
------------------------------------------------------------------------------

. est store pr4

. eststo reg_fake2: xtprobit fake bonus bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =  -114.9984  
Iteration 1:   log pseudolikelihood = -113.11824  
Iteration 2:   log pseudolikelihood = -113.11513  
Iteration 3:   log pseudolikelihood = -113.11513  

Fitting full model:

rho =  0.0     log pseudolikelihood = -113.11513
rho =  0.1     log pseudolikelihood = -109.52127
rho =  0.2     log pseudolikelihood = -106.88185
rho =  0.3     log pseudolikelihood = -104.97786
rho =  0.4     log pseudolikelihood =  -103.7012
rho =  0.5     log pseudolikelihood = -103.02356
rho =  0.6     log pseudolikelihood = -102.99767
rho =  0.7     log pseudolikelihood = -103.80249

Iteration 0:   log pseudolikelihood = -103.00256  
Iteration 1:   log pseudolikelihood = -101.57872  
Iteration 2:   log pseudolikelihood = -101.44091  
Iteration 3:   log pseudolikelihood = -101.44039  
Iteration 4:   log pseudolikelihood = -101.44039  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       3.88
Log pseudolikelihood  = -101.44039              Prob > chi2       =     0.1435

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .4971642   .2842203     1.75   0.080    -.0598972    1.054226
 bonus_order |   .3385349   .4151405     0.82   0.415    -.4751255    1.152195
       _cons |  -1.431149   .3832357    -3.73   0.000    -2.182278   -.6800211
-------------+----------------------------------------------------------------
    /lnsig2u |   .4601208    .481087                     -.4827923    1.403034
-------------+----------------------------------------------------------------
     sigma_u |   1.258676   .3027663                      .7855304     2.01681
         rho |   .6130428   .1141241                       .381593    .8026649
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(fake=1), predict(pr)
dy/dx w.r.t. : bonus bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .1036855   .0574167     1.81   0.071    -.0088492    .2162201
 bonus_order |   .0706027   .0860697     0.82   0.412    -.0980907    .2392962
------------------------------------------------------------------------------

. est store pr5

. eststo reg_dic2: xtprobit dic bonus bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -50.134837  
Iteration 1:   log pseudolikelihood = -46.837592  
Iteration 2:   log pseudolikelihood = -46.766968  
Iteration 3:   log pseudolikelihood =  -46.76692  
Iteration 4:   log pseudolikelihood =  -46.76692  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -46.76692
rho =  0.1     log pseudolikelihood = -46.438292
rho =  0.2     log pseudolikelihood = -46.586174

Iteration 0:   log pseudolikelihood = -46.438292  
Iteration 1:   log pseudolikelihood = -46.303056  
Iteration 2:   log pseudolikelihood = -45.823896  
Iteration 3:   log pseudolikelihood = -45.814007  
Iteration 4:   log pseudolikelihood = -45.813838  
Iteration 5:   log pseudolikelihood = -45.813838  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       6.02
Log pseudolikelihood  = -45.813838              Prob > chi2       =     0.0493

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.8653539   .3619556    -2.39   0.017    -1.574774   -.1559341
 bonus_order |  -.3153426   .3830241    -0.82   0.410    -1.066056    .4353707
       _cons |  -1.162901   .3801173    -3.06   0.002    -1.907917   -.4178845
-------------+----------------------------------------------------------------
    /lnsig2u |  -.6719679   .8021689                      -2.24419    .9002543
-------------+----------------------------------------------------------------
     sigma_u |   .7146346   .2866288                      .3255969    1.568512
         rho |   .3380563   .1795048                      .0958518    .7110018
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dic=1), predict(pr)
dy/dx w.r.t. : bonus bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.0908287   .0383611    -2.37   0.018     -.166015   -.0156423
 bonus_order |  -.0330988   .0403304    -0.82   0.412    -.1121449    .0459473
------------------------------------------------------------------------------

. est store pr6

. 
. 
. 
. *plot marginal effects for bonus treatment
. coefplot (pr1, offset(0.2) msymbol(D)) (pr2, offset(0) msymbol(S)) (pr3, offset(-0.2) msymbol(O)) (pr4, offset(0.2) msymbol(D) mcolor("100 143 255") ci
> opts(lwidth(0.3 1) lcolor("100 143 255*.8" "100 143 255*.2")  recast(rcap))) (pr5, offset(0) msymbol(S) mcolor("120 94 240") ciopts(lwidth(0.3 1) color
> ("120 94 240*.8" "120 94 240*.2")  recast(rcap)))  (pr6, offset(-0.2) msymbol(O) mcolor("220 38 127") ciopts(lwidth(0.3 1) color("220 38 127*.8" "220 3
> 8 127*.2")  recast(rcap))), keep(bonus_2 bonus_3 bonus) coeflabels(bonus = "Pooled Bonus" bonus_2 = "Small bonus" bonus_3="Large bonus") xline(0, lpatt
> ern(dash) lcolor(gs3)) xtitle("Regression estimated impact relative to baseline in pp") msize(3pt) xla(-0.3(0.1)0.3, nogrid) grid(none) levels(95 90) c
> iopts(lwidth(0.3 1) lcolor(*.8 *.2) recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", "") )))  mlabsize(7pt)  mlabp
> osition(12) mlabgap(-0.1)  legend(order(3 "Democratic" 6 "Pseudo-democratic" 9 "Autocratic") pos(6) ring(1) rows(1) bmargin(small)) graphregion(margin(
> tiny))  xsize(3.465) ysize(2) scale(1.2)
(note:  named style medthin not found in class linestyle, default attributes used)

. gr save "$working_ANALYSIS/results/intermediate/figure2.gph", replace 
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure2.gph saved)

. gr export "$working_ANALYSIS/results/figures/figure2.tif", replace width(4000)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure2.tif written in TIFF format)

. 
. 
. *Table 2.       Observed crowding effects of conditional monetary incentives in the experiment.
. *created in word, descriptives are calculated here
. 
. tab rule type if round==2, column

+-------------------+
| Key               |
|-------------------|
|     frequency     |
| column percentage |
+-------------------+

                  |                    type
             rule |     Box I    Box III     Box II     Box IV |     Total
------------------+--------------------------------------------+----------
       Democratic |         2          7         16         15 |        40 
                  |     16.67      63.64      69.57      83.33 |     62.50 
------------------+--------------------------------------------+----------
Pseudo-democratic |         9          4          6          3 |        22 
                  |     75.00      36.36      26.09      16.67 |     34.38 
------------------+--------------------------------------------+----------
       Autocratic |         1          0          1          0 |         2 
                  |      8.33       0.00       4.35       0.00 |      3.13 
------------------+--------------------------------------------+----------
            Total |        12         11         23         18 |        64 
                  |    100.00     100.00     100.00     100.00 |    100.00 

. 
. 
. 
. *Figure 5.      Likelihood to choose democratic rule across subgroups
. gen dem100=dem*100

. eststo sub1: xtmixed dem i.bonus bonus_order  || id: if type==1,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -18.564637  
Iteration 1:   log restricted-likelihood = -18.564241  
Iteration 2:   log restricted-likelihood = -18.564241  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         36
Group variable: id                              Number of groups  =         12

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =       5.90
Log restricted-likelihood = -18.564241          Prob > chi2       =     0.0522

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |   .2916667   .1200719     2.43   0.015       .05633    .5270033
          bonus_order |  -.0095238   .1622964    -0.06   0.953     -.327619    .3085714
                _cons |   .0055556   .1475559     0.04   0.970    -.2836488    .2947599
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .1959065   .0923388      .0777754    .4934637
-----------------------------+------------------------------------------------
                sd(Residual) |   .3396147   .0500735      .2543804    .4534082
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 1.80          Prob >= chibar2 = 0.0899

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "12"

. eststo sub2: xtmixed dem i.bonus bonus_order  || id: if type==2,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -19.596737  
Iteration 1:   log restricted-likelihood = -19.596494  
Iteration 2:   log restricted-likelihood = -19.596494  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         33
Group variable: id                              Number of groups  =         11

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =      14.05
Log restricted-likelihood = -19.596494          Prob > chi2       =     0.0009

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |         .5   .1356402     3.69   0.000     .2341501    .7658499
          bonus_order |  -.1309524   .1920815    -0.68   0.495    -.5074253    .2455205
                _cons |   .0833333   .1779209     0.47   0.640    -.2653852    .4320519
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .2212279   .1048617      .0873719    .5601549
-----------------------------+------------------------------------------------
                sd(Residual) |   .3673154    .056678      .2714538    .4970298
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 1.85          Prob >= chibar2 = 0.0870

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals' 

added macro:
        e(individuals) : "11"

. eststo sub3: xtmixed dem i.bonus bonus_order  || id: if type==3,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -29.466679  
Iteration 1:   log restricted-likelihood = -29.466581  
Iteration 2:   log restricted-likelihood = -29.466581  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         69
Group variable: id                              Number of groups  =         23

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =      11.38
Log restricted-likelihood = -29.466581          Prob > chi2       =     0.0034

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |  -.2608696   .0788491    -3.31   0.001     -.415411   -.1063282
          bonus_order |   .0732323   .1114045     0.66   0.511    -.1451165    .2915812
                _cons |   .9617918    .096117    10.01   0.000      .773406    1.150178
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .1986239   .0578471      .1122349    .3515078
-----------------------------+------------------------------------------------
                sd(Residual) |   .3087557   .0325457      .2511253    .3796117
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 5.02          Prob >= chibar2 = 0.0125

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "23"

. eststo sub4: xtmixed dem i.bonus bonus_order  || id: if type==4,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -17.148897  
Iteration 1:   log restricted-likelihood = -17.135094  
Iteration 2:   log restricted-likelihood = -17.135079  
Iteration 3:   log restricted-likelihood = -17.135079  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         54
Group variable: id                              Number of groups  =         18

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =       4.16
Log restricted-likelihood = -17.135079          Prob > chi2       =     0.1249

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |  -.1666667   .0845154    -1.97   0.049    -.3323139   -.0010195
          bonus_order |        .05   .0960143     0.52   0.603    -.1381846    .2381846
                _cons |   .9777778    .085275    11.47   0.000     .8106419    1.144914
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .1113588   .0719082      .0314105    .3947978
-----------------------------+------------------------------------------------
                sd(Residual) |     .29277   .0349927      .2316267    .3700536
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 0.74          Prob >= chibar2 = 0.1944

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "18"

. 
. 
. coefplot (sub1, label (Box I)) (sub2, label (Box III))  (sub3, label (Box II))  (sub4, label (Box IV)) , keep(1.bonus) coeflabels(1.bonus = "Pooled Bon
> us")  byopts(xrescale) xline(0, lpattern(dash) lcolor(gs3)) xtitle("Regression estimated impact relative to baseline in pp") grid(none) levels(95 90) c
> iopts(lwidth(0.8 2)  lcolor(*1 *.3) recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", "")))) msize(3pt) msymbol(D) 
> mlabsize(8pt) mlabposition(1) mlabgap(-0.4) subtitle(, size(6pt) lstyle(none) margin(medium) nobox justification(left)  bmargin(top))  xla(-50(25)75, n
> ogrid)  xsize(3.465) ysize(2) scale(1.2)

. gr_edit style.editstyle margin(vsmall) editcopy

. gr save  "$working_ANALYSIS\results\intermediate\figure5_boxes_subgroups.gph", replace
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\intermediate\figure5_boxes_subgroups.g
> ph not found)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\intermediate\figure5_boxes_subgroups.gph sav
> ed)

. gr export "$working_ANALYSIS\results\figures\figure5_boxes_subgroups.tif", replace width(4000) 
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\figures\figure5_boxes_subgroups.tif no
> t found)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\figures\figure5_boxes_subgroups.tif written 
> in TIFF format)

. 
. 
. *Figure 6.      Villagers' satisfaction with their leader’s performance outside the lab
. preserve

. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. 
. bysort group_leader_type: sum satisfaction_leader

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = True-democrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |        246    3.827134    .6666073       1.75          5

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Pseudo-democrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         54    3.626852    .7306603        2.2        4.6

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Paternalist

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         30    3.844167    .5952282        2.6       4.75

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Autocrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         36       3.725    .5777419        2.6        4.5

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Benevolent-Autocrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         18    3.816667    .7085611        1.4        4.5


. reg z_satisfaction leader_type2 leader_type3 leader_type4 leader_type5 i.village, vce(robust)

Linear regression                               Number of obs     =        384
                                                F(35, 348)        =       1.58
                                                Prob > F          =     0.0230
                                                R-squared         =     0.1271
                                                Root MSE          =     .98017

------------------------------------------------------------------------------------
                   |               Robust
    z_satisfaction |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------------+----------------------------------------------------------------
      leader_type2 |  -.6611698    .208875    -3.17   0.002    -1.071986   -.2503536
      leader_type3 |  -.2920114    .214623    -1.36   0.175    -.7141328    .1301101
      leader_type4 |  -.4457453    .220525    -2.02   0.044    -.8794748   -.0120157
      leader_type5 |   -.568856   .3146655    -1.81   0.071    -1.187741    .0500294
                   |
           village |
            Ehafo  |   .2816941   .4406489     0.64   0.523     -.584976    1.148364
           Endola  |   .1647852   .4608402     0.36   0.721    -.7415971    1.071168
        Epatululo  |   .5070494   .4781111     1.06   0.290    -.4333015      1.4474
            Epuku  |  -.2703627   .4603237    -0.59   0.557    -1.175729     .635004
            Etale  |  -.2734926   .5295272    -0.52   0.606    -1.314969    .7679837
         Etilashi  |   .0657285   .5410536     0.12   0.903    -.9984181    1.129875
           Etomba  |  -.3036037   .4349979    -0.70   0.486     -1.15916     .551952
        Ohangwena  |   .3807507   .4368951     0.87   0.384    -.4785364    1.240038
       Oipapakane  |   .3098634   .4577618     0.68   0.499    -.5904644    1.210191
          Okadiwa  |   .5539985   .4237442     1.31   0.192    -.2794234     1.38742
          Okafitu  |   .2875579   .4625024     0.62   0.535    -.6220938     1.19721
           Okakwa  |   .2336439   .4366642     0.54   0.593    -.6251892    1.092477
         Okangudi  |   .5778497   .4702996     1.23   0.220    -.3471375    1.502837
        Okapundja  |     .66628   .4807188     1.39   0.167    -.2791997     1.61176
          Okatale  |    .200963   .4460237     0.45   0.653    -.6762783    1.078204
         Okelemba  |   .2190954   .4276179     0.51   0.609    -.6219453    1.060136
         Omahenge  |   .4006316   .4696826     0.85   0.394    -.5231421    1.324405
         Omakango  |  -.0594688   .4918662    -0.12   0.904    -1.026873    .9079357
         Omalyata  |   .3449401    .460573     0.75   0.454    -.5609169    1.250797
          Omaputo  |  -.1502369   .4760151    -0.32   0.752    -1.086466    .7859916
          Omukuve  |   .3574597   .4513268     0.79   0.429    -.5302117    1.245131
Omutwe Oshimbungu  |   .1752763   .4832945     0.36   0.717    -.7752695    1.125822
         Onangwhe  |   .7987806   .4775939     1.67   0.095    -.1405532    1.738114
    Onekwaya East  |   .7645445   .4521417     1.69   0.092    -.1247297    1.653819
    Onekwaya West  |  -.3536827   .5304743    -0.67   0.505    -1.397022    .6896564
         Onengali  |   .8570611   .4781265     1.79   0.074    -.0833201    1.797442
          Ongonga  |   .3030627   .5027781     0.60   0.547    -.6858034    1.291929
        Onheleiwa  |   1.259779    .452481     2.78   0.006     .3698379    2.149721
      Oshikwiyu 1  |   .9679903   .4408178     2.20   0.029     .1009881    1.834993
      Oshikwiyu 2  |    .046949   .4978082     0.09   0.925    -.9321423     1.02604
          Ouhongo  |   .7186967   .4882986     1.47   0.142     -.241691    1.679084
                   |
             _cons |  -.1293054     .36416    -0.36   0.723    -.8455369    .5869261
------------------------------------------------------------------------------------

. eststo reg_satisfaction: reg satisfaction_leader rule_base2 rule_base3 i.village, vce(robust)

Linear regression                               Number of obs     =        384
                                                F(33, 350)        =       1.62
                                                Prob > F          =     0.0193
                                                R-squared         =     0.1226
                                                Root MSE          =     .65223

------------------------------------------------------------------------------------
                   |               Robust
satisfaction_lea~r |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------------+----------------------------------------------------------------
        rule_base2 |   -.358179   .1199986    -2.98   0.003    -.5941881   -.1221699
        rule_base3 |  -.2967078   .1229121    -2.41   0.016     -.538447   -.0549687
                   |
           village |
            Ehafo  |   .1874999   .2924635     0.64   0.522    -.3877071     .762707
           Endola  |   .1915895   .3034727     0.63   0.528      -.40527     .788449
        Epatululo  |      .3375   .3173276     1.06   0.288    -.2866089    .9616089
            Epuku  |  -.2209105   .3065403    -0.72   0.472    -.8238032    .3819822
            Etale  |  -.2229939   .3493882    -0.64   0.524    -.9101583    .4641706
         Etilashi  |   .0437499   .3591033     0.12   0.903    -.6625218    .7500217
           Etomba  |  -.2020834   .2887129    -0.70   0.484    -.7699139    .3657471
        Ohangwena  |   .3353394   .2888458     1.16   0.246    -.2327523    .9034312
       Oipapakane  |   .2062499   .3038216     0.68   0.498    -.3912957    .8037955
          Okadiwa  |     .36875   .2812437     1.31   0.191    -.1843903    .9218902
          Okafitu  |   .1504372   .3234825     0.47   0.642    -.4857769    .7866513
           Okakwa  |   .2374228   .2795042     0.85   0.396    -.3122963     .787142
         Okangudi  |   .3436728   .3049252     1.13   0.260    -.2560434     .943389
        Okapundja  |   .4025205   .2978602     1.35   0.177    -.1833004    .9883415
          Okatale  |   .1337705   .2947688     0.45   0.650    -.4459704    .7135114
         Okelemba  |   .1458333   .2838147     0.51   0.608    -.4123636    .7040302
         Omahenge  |   .2666666   .3117335     0.86   0.393      -.34644    .8797731
         Omakango  |  -.0395834   .3264571    -0.12   0.904    -.6816477    .6024809
         Omalyata  |   .2296039   .3002282     0.76   0.445    -.3608743    .8200822
          Omaputo  |        -.1   .3159365    -0.32   0.752    -.7213729    .5213728
          Omukuve  |   .2379372    .298702     0.80   0.426    -.3495395    .8254139
Omutwe Oshimbungu  |   .1166666   .3207679     0.36   0.716    -.5142085    .7475418
         Onangwhe  |   .5316872   .3109826     1.71   0.088    -.0799425    1.143317
    Onekwaya East  |   .5498457   .3088478     1.78   0.076    -.0575854    1.157277
    Onekwaya West  |  -.2354167   .3520817    -0.67   0.504    -.9278786    .4570452
         Onengali  |   .5295267   .3106328     1.70   0.089    -.0814151    1.140468
          Ongonga  |   .1607767   .3359346     0.48   0.633    -.4999276    .8214811
        Onheleiwa  |     .75661   .2810407     2.69   0.007      .203869    1.309351
      Oshikwiyu 1  |   .6852623   .3040821     2.25   0.025     .0872042     1.28332
      Oshikwiyu 2  |     .03125   .3304008     0.09   0.925    -.6185708    .6810707
          Ouhongo  |   .4374228    .320296     1.37   0.173    -.1925242     1.06737
                   |
             _cons |   3.704167    .241697    15.33   0.000     3.228805    4.179528
------------------------------------------------------------------------------------

. est store satisfaction

. 
. coefplot (satisfaction), keep(rule_base2 rule_base3) coeflabels(rule_base2 = "Baseline: Pseudo-democratic rule" rule_base3 = "Baseline: Autocratic rule
> ") xline(0, lpattern(dash) lcolor(gs3))  xtitle("Regression estimated imppact relative to 'Baseline: Democratic rule'") xla(-1(0.25)0.25, nogrid) grid(
> none) levels(95 90) ciopts(lwidth(0.3 1) lcolor(*.8 *.2)   recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", ""))))
>  mlabsize(9pt) mlabposition(12) mlabgap(-0.1) 
(note:  named style medthin not found in class linestyle, default attributes used)

. gr save "$working_ANALYSIS/results/intermediate/figure6_satisfaction_villagers.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure6_satisfaction_villagers.
> gph saved)

. gr export "$working_ANALYSIS/results/figures/figure6_satisfaction_villagers.tif", replace width(3465)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure6_satisfaction_villagers.tif w
> ritten in TIFF format)

. 
. restore

. 
. 
. 
. 
. 
. *--------------------------------------------------------------
. * Analysis for supplementary online materials (SOM)
. *--------------------------------------------------------------
. *Table S1.      Time schedule of field implementation
. *created in word
. 
. 
. * Figure S1.    Minimal detectable effect size: Within-subject design
. *power analysis: MDES with 80% power
. power pairedproportions 0.64, corr(0.39) diff(0(0.01)0.2) alpha(0.05 0.1) n(64)

Estimated power for a two-sample paired-proportions test
Large-sample McNemar's test
Ho: p+1 = p1+  versus  Ha: p+1 != p1+

  +-----------------------------------------------------------------+
  |   alpha   power       N   delta  pmarg1  pmarg2    corr    diff |
  |-----------------------------------------------------------------|
  |     .05       .       .       .     .64     .64     .39       0 |
  |     .05  .05259      64     .01     .64     .65     .39     .01 |
  |     .05  .06045      64     .02     .64     .66     .39     .02 |
  |     .05   .0738      64     .03     .64     .67     .39     .03 |
  |     .05   .0929      64     .04     .64     .68     .39     .04 |
  |     .05    .118      64     .05     .64     .69     .39     .05 |
  |     .05   .1494      64     .06     .64      .7     .39     .06 |
  |     .05    .187      64     .07     .64     .71     .39     .07 |
  |     .05    .231      64     .08     .64     .72     .39     .08 |
  |     .05   .2808      64     .09     .64     .73     .39     .09 |
  |     .05   .3359      64      .1     .64     .74     .39      .1 |
  |     .05   .3953      64     .11     .64     .75     .39     .11 |
  |     .05   .4578      64     .12     .64     .76     .39     .12 |
  |     .05    .522      64     .13     .64     .77     .39     .13 |
  |     .05   .5862      64     .14     .64     .78     .39     .14 |
  |     .05   .6487      64     .15     .64     .79     .39     .15 |
  |     .05   .7081      64     .16     .64      .8     .39     .16 |
  |     .05   .7628      64     .17     .64     .81     .39     .17 |
  |     .05   .8118      64     .18     .64     .82     .39     .18 |
  |     .05   .8545      64     .19     .64     .83     .39     .19 |
  |     .05   .8905      64      .2     .64     .84     .39      .2 |
  |     .05       .      64       .     .64     .64     .39       0 |
  |      .1   .1038      64     .01     .64     .65     .39     .01 |
  |      .1   .1154      64     .02     .64     .66     .39     .02 |
  |      .1   .1346      64     .03     .64     .67     .39     .03 |
  |      .1   .1616      64     .04     .64     .68     .39     .04 |
  |      .1    .196      64     .05     .64     .69     .39     .05 |
  |      .1   .2376      64     .06     .64      .7     .39     .06 |
  |      .1   .2857      64     .07     .64     .71     .39     .07 |
  |      .1   .3395      64     .08     .64     .72     .39     .08 |
  |      .1   .3979      64     .09     .64     .73     .39     .09 |
  |      .1   .4595      64      .1     .64     .74     .39      .1 |
  |      .1   .5229      64     .11     .64     .75     .39     .11 |
  |      .1   .5864      64     .12     .64     .76     .39     .12 |
  |      .1   .6484      64     .13     .64     .77     .39     .13 |
  |      .1   .7072      64     .14     .64     .78     .39     .14 |
  |      .1   .7615      64     .15     .64     .79     .39     .15 |
  |      .1   .8104      64     .16     .64      .8     .39     .16 |
  |      .1   .8529      64     .17     .64     .81     .39     .17 |
  |      .1   .8889      64     .18     .64     .82     .39     .18 |
  |      .1   .9184      64     .19     .64     .83     .39     .19 |
  |      .1   .9419      64      .2     .64     .84     .39      .2 |
  +-----------------------------------------------------------------+
   Warning: some of the computations failed; execute each computation separately to see the specific error

. *MDES alpha 0.05 --> d=0.18, alpha 0.1 --> d=0.16
. 
. power pairedproportions 0.64, corr(0.39) diff(0(0.01)0.2) n(64) table(alpha power beta N delta:"Difference in proportion to select democratic rule") gr
> aph(ytitle(Effect size) xline(0.8, lcolor(538b) lpattern(dash)) yline(0.178, lpattern(dash)) title("") legend(ring(1) rows(1) pos(6)) xdimension(power)
>  xla(0(0.1)1, nogrid) yla(0(0.02)0.2, nogrid) ydimension(diff)) 

Estimated power for a two-sample paired-proportions test
Large-sample McNemar's test
Ho: p+1 = p1+  versus  Ha: p+1 != p1+

  +------------------------------------------------------------------------------------+
  |   alpha   power    beta       N Difference in proportion to select democratic rule |
  |------------------------------------------------------------------------------------|
  |     .05       .       .       .                                                  . |
  |     .05  .05259   .9474      64                                                .01 |
  |     .05  .06045   .9396      64                                                .02 |
  |     .05   .0738   .9262      64                                                .03 |
  |     .05   .0929   .9071      64                                                .04 |
  |     .05    .118    .882      64                                                .05 |
  |     .05   .1494   .8506      64                                                .06 |
  |     .05    .187    .813      64                                                .07 |
  |     .05    .231    .769      64                                                .08 |
  |     .05   .2808   .7192      64                                                .09 |
  |     .05   .3359   .6641      64                                                 .1 |
  |     .05   .3953   .6047      64                                                .11 |
  |     .05   .4578   .5422      64                                                .12 |
  |     .05    .522    .478      64                                                .13 |
  |     .05   .5862   .4138      64                                                .14 |
  |     .05   .6487   .3513      64                                                .15 |
  |     .05   .7081   .2919      64                                                .16 |
  |     .05   .7628   .2372      64                                                .17 |
  |     .05   .8118   .1882      64                                                .18 |
  |     .05   .8545   .1455      64                                                .19 |
  |     .05   .8905   .1095      64                                                 .2 |
  +------------------------------------------------------------------------------------+
   Warning: some of the computations failed; execute each computation separately to see the specific error
(note:  named style 538b not found in class color, default attributes used)

. gr save  "$working_ANALYSIS/results/intermediate/figureS1_MDES.gph", replace
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figureS1_MDES.gph not fou
> nd)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figureS1_MDES.gph saved)

. gr export "$working_ANALYSIS/results/figures/figureS1_MDES.tif", replace width(4000)
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figureS1_MDES.tif not found)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figureS1_MDES.tif written in TIFF fo
> rmat)

. 
. 
. *Figure S2.     Equivalence tests
. *created in R with the openly accessible  package ‘TOSTER’ by Caldwell (2022).
. 
. 
. preserve

. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. 
. 
. * Table S2.     Participants characteristics
. global controls2 male age education rootedness pca_wealth d3a d3c 

. iebaltab $controls2, grpvar(id1) rowvarlabels format(%9.2f) stdev ftest fmissok tblnonote save("$working_ANALYSIS/results/tables/tableS2_sample_charact
> eristics.xlsx") replace
    Balance table saved to: C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for
        democracy\analysis/results/tables/tableS2_sample_characteristics.xlsx

. prtest male, by(villager)

Two-sample test of proportions                     0: Number of obs =       64
                                                   1: Number of obs =      383
------------------------------------------------------------------------------
       Group |       Mean   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
           0 |     .71875   .0562012                      .6085978    .8289022
           1 |    .381201   .0248172                      .3325603    .4298418
-------------+----------------------------------------------------------------
        diff |    .337549   .0614366                      .2171353    .4579626
             |  under Ho:   .0668463     5.05   0.000
------------------------------------------------------------------------------
        diff = prop(0) - prop(1)                                  z =   5.0496
    Ho: diff = 0

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(Z < z) = 1.0000         Pr(|Z| > |z|) = 0.0000          Pr(Z > z) = 0.0000

. foreach x of varlist age education rootedness pca_wealth d3a d3c {
  2.         ranksum `x', by(villager)
  3.         }

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64       21611       14336
           1 |      383       78517       85792
-------------+---------------------------------
    combined |      447      100128      100128

unadjusted variance   915114.67
adjustment for ties     -459.84
                     ----------
adjusted variance     914654.83

Ho: age(villager==0) = age(villager==1)
             z =   7.607
    Prob > |z| =   0.0000

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       63     12355.5       14049
           1 |      382     86879.5       85186
-------------+---------------------------------
    combined |      445       99235       99235

unadjusted variance   894453.00
adjustment for ties   -19195.80
                     ----------
adjusted variance     875257.20

Ho: educat~n(villager==0) = educat~n(villager==1)
             z =  -1.810
    Prob > |z| =   0.0703

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64       11164       14368
           1 |      384       89412       86208
-------------+---------------------------------
    combined |      448      100576      100576

unadjusted variance   919552.00
adjustment for ties  -239244.82
                     ----------
adjusted variance     680307.18

Ho: rooted~s(villager==0) = rooted~s(villager==1)
             z =  -3.885
    Prob > |z| =   0.0001

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64     18992.5       13824
           1 |      367     74103.5       79272
-------------+---------------------------------
    combined |      431       93096       93096

unadjusted variance   845568.00
adjustment for ties    -2070.36
                     ----------
adjusted variance     843497.64

Ho: pca_we~h(villager==0) = pca_we~h(villager==1)
             z =   5.628
    Prob > |z| =   0.0000

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64       18709       14176
           1 |      378       79194       83727
-------------+---------------------------------
    combined |      442       97903       97903

unadjusted variance   893088.00
adjustment for ties   -66216.48
                     ----------
adjusted variance     826871.52

Ho: d3a(villager==0) = d3a(villager==1)
             z =   4.985
    Prob > |z| =   0.0000

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64     17714.5       14176
           1 |      378     80188.5       83727
-------------+---------------------------------
    combined |      442       97903       97903

unadjusted variance   893088.00
adjustment for ties   -29599.40
                     ----------
adjusted variance     863488.60

Ho: d3c(villager==0) = d3c(villager==1)
             z =   3.808
    Prob > |z| =   0.0001

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

. reg id1 $controls2 if id1 !=0 // chiefs vs villagers

      Source |       SS           df       MS      Number of obs   =       394
-------------+----------------------------------   F(7, 386)       =     29.30
       Model |  10.2010544         7  1.45729349   Prob > F        =    0.0000
    Residual |  19.1999608       386  .049740831   R-squared       =    0.3470
-------------+----------------------------------   Adj R-squared   =    0.3351
       Total |  29.4010152       393  .074811744   Root MSE        =    .22303

------------------------------------------------------------------------------
         id1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        male |  -.1296617   .0236755    -5.48   0.000    -.1762108   -.0831127
         age |  -.0066006   .0007591    -8.69   0.000    -.0080931    -.005108
   education |  -.0078332   .0040656    -1.93   0.055    -.0158267    .0001603
  rootedness |   .0907614    .039103     2.32   0.021     .0138798     .167643
  pca_wealth |  -.0293369   .0074095    -3.96   0.000     -.043905   -.0147688
         d3a |    .000388   .0006738     0.58   0.565    -.0009367    .0017128
         d3c |    -.00293   .0008376    -3.50   0.001    -.0045769   -.0012831
       _cons |   2.269217   .0634849    35.74   0.000     2.144398    2.394037
------------------------------------------------------------------------------

. reg id1 $controls2 if id1 !=1 // DEL vs villagers

      Source |       SS           df       MS      Number of obs   =       393
-------------+----------------------------------   F(7, 385)       =      4.80
       Model |  9.17075049         7  1.31010721   Prob > F        =    0.0000
    Residual |  105.048079       385  .272852153   R-squared       =    0.0803
-------------+----------------------------------   Adj R-squared   =    0.0636
       Total |   114.21883       392  .291374565   Root MSE        =    .52235

------------------------------------------------------------------------------
         id1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        male |  -.0322257   .0555344    -0.58   0.562    -.1414145    .0769631
         age |  -.0097613   .0019009    -5.13   0.000    -.0134988   -.0060238
   education |  -.0229965    .009749    -2.36   0.019    -.0421644   -.0038286
  rootedness |   .1147954   .0918885     1.25   0.212    -.0658707    .2954616
  pca_wealth |   -.039424   .0183658    -2.15   0.032    -.0755339   -.0033141
         d3a |   .0002838   .0016126     0.18   0.860    -.0028868    .0034543
         d3c |  -.0012367   .0024103    -0.51   0.608    -.0059757    .0035024
       _cons |   2.337824   .1550281    15.08   0.000     2.033017    2.642632
------------------------------------------------------------------------------

. * Leaders only
. global controls1 male age education rootedness pca_wealth d3a d3c  married experience motivation helpauthentic

. iebaltab $controls1, grpvar(TL) rowvarlabels format(%9.2f) stdev ftest fmissok tblnonote save("$working_ANALYSIS/results/tables/tableS2_leaders_charact
> eristics.xlsx") replace
    Balance table saved to: C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for
        democracy\analysis/results/tables/tableS2_leaders_characteristics.xlsx

. reg TL $controls1

      Source |       SS           df       MS      Number of obs   =        63
-------------+----------------------------------   F(11, 51)       =      4.42
       Model |  7.68364189        11  .698512899   Prob > F        =    0.0001
    Residual |  8.06238986        51  .158086076   R-squared       =    0.4880
-------------+----------------------------------   Adj R-squared   =    0.3775
       Total |  15.7460317        62  .253968254   Root MSE        =     .3976

-------------------------------------------------------------------------------
           TL |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
--------------+----------------------------------------------------------------
         male |   .5756709   .1515165     3.80   0.000     .2714888    .8798529
          age |  -.0013323    .004849    -0.27   0.785    -.0110671    .0084025
    education |   .0115139   .0171882     0.67   0.506    -.0229929    .0460208
   rootedness |  -.3209752    .192027    -1.67   0.101    -.7064855    .0645352
   pca_wealth |   .0641615   .0340908     1.88   0.066    -.0042786    .1326016
          d3a |  -.0022809   .0048669    -0.47   0.641    -.0120516    .0074897
          d3c |   .0026512     .00324     0.82   0.417    -.0038534    .0091558
      married |  -.1502687   .1648473    -0.91   0.366    -.4812135     .180676
   experience |   .0104446   .0052226     2.00   0.051    -.0000402    .0209294
   motivation |  -.1329139   .1301428    -1.02   0.312    -.3941865    .1283587
helpauthentic |  -.0045327   .0140829    -0.32   0.749    -.0328052    .0237399
        _cons |   .3461321   .3151008     1.10   0.277    -.2864591    .9787234
-------------------------------------------------------------------------------

. 
. 
. *Table S3.      Summary statistics of  main outcomes for leaders
. * Stage 1 rule choices by leaders
. estpost tabulate rule1 

       rule1 |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
  Democratic |        41    64.0625    64.0625 
Pseudo-dem~c |        14     21.875    85.9375 
  Autocratic |         9    14.0625        100 
-------------+---------------------------------
       Total |        64        100            

. esttab using "$output\tableS3_outcome-variables.rtf", cell("b pct(fmt(0)) cumpct(fmt(0))") unstack noobs replace
(output written to \tableS3_outcome-variables.rtf)

. estpost tabulate rule5

       rule5 |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
  Democratic |        41    64.0625    64.0625 
Pseudo-dem~c |        20      31.25    95.3125 
  Autocratic |         3     4.6875        100 
-------------+---------------------------------
       Total |        64        100            

. esttab using "$output\tableS3_outcome-variables.rtf", cell("b pct(fmt(0)) cumpct(fmt(0))") unstack noobs append
(output written to \tableS3_outcome-variables.rtf)

. estpost tabulate rule6

       rule6 |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
  Democratic |        41    64.0625    64.0625 
Pseudo-dem~c |        21    32.8125     96.875 
  Autocratic |         2      3.125        100 
-------------+---------------------------------
       Total |        64        100            

. esttab using "$output\tableS3_outcome-variables.rtf", cell("b pct(fmt(0)) cumpct(fmt(0))") unstack noobs append
(output written to \tableS3_outcome-variables.rtf)

. 
. * Stage 2 distribution decisions by leaders
. estpost tabulate  vote1  if id <65 & rule1==1

       vote1 |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
Distributi~A |        19   46.34146   46.34146 
Distributi~B |        22   53.65854        100 
-------------+---------------------------------
       Total |        41        100            

. bysort rule1: tab vote1 if id <65

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule1 = Democratic

    Benefit to |
 leader at the |
    expense of |
     villagers |      Freq.     Percent        Cum.
---------------+-----------------------------------
Distribution A |         19       46.34       46.34
Distribution B |         22       53.66      100.00
---------------+-----------------------------------
         Total |         41      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule1 = Pseudo-democratic

    Benefit to |
 leader at the |
    expense of |
     villagers |      Freq.     Percent        Cum.
---------------+-----------------------------------
Distribution A |          9       64.29       64.29
Distribution B |          5       35.71      100.00
---------------+-----------------------------------
         Total |         14      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule1 = Autocratic

    Benefit to |
 leader at the |
    expense of |
     villagers |      Freq.     Percent        Cum.
---------------+-----------------------------------
Distribution A |          6       66.67       66.67
Distribution B |          3       33.33      100.00
---------------+-----------------------------------
         Total |          9      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule1 = .
no observations


. bysort rule5: tab vote5 if id <65

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule5 = Democratic

Small bonus |
  (+10) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |         17       41.46       41.46
    Chose B |         24       58.54      100.00
------------+-----------------------------------
      Total |         41      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule5 = Pseudo-democratic

Small bonus |
  (+10) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |         15       75.00       75.00
    Chose B |          5       25.00      100.00
------------+-----------------------------------
      Total |         20      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule5 = Autocratic

Small bonus |
  (+10) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |          2       66.67       66.67
    Chose B |          1       33.33      100.00
------------+-----------------------------------
      Total |          3      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule5 = .
no observations


. bysort rule6: tab vote6 if id <65

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule6 = Democratic

  Big bonus |
 (+100) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |         23       56.10       56.10
    Chose B |         18       43.90      100.00
------------+-----------------------------------
      Total |         41      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule6 = Pseudo-democratic

  Big bonus |
 (+100) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |         14       66.67       66.67
    Chose B |          7       33.33      100.00
------------+-----------------------------------
      Total |         21      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule6 = Autocratic

  Big bonus |
 (+100) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |          1       50.00       50.00
    Chose B |          1       50.00      100.00
------------+-----------------------------------
      Total |          2      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule6 = .
no observations


. 
. restore

. 
. 
. *Figure S3.     Order effects on rule choice in bonus rounds
. bysort bonus_size bonus_order: tab rule

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Baseline, bonus_order = Base-Large-Small

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         21       70.00       70.00
Pseudo-democratic |          4       13.33       83.33
       Autocratic |          5       16.67      100.00
------------------+-----------------------------------
            Total |         30      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Baseline, bonus_order = Base-Small-Large

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         20       58.82       58.82
Pseudo-democratic |         10       29.41       88.24
       Autocratic |          4       11.76      100.00
------------------+-----------------------------------
            Total |         34      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Small Bonus, bonus_order = Base-Large-Small

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         20       66.67       66.67
Pseudo-democratic |          8       26.67       93.33
       Autocratic |          2        6.67      100.00
------------------+-----------------------------------
            Total |         30      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Small Bonus, bonus_order = Base-Small-Large

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         21       61.76       61.76
Pseudo-democratic |         12       35.29       97.06
       Autocratic |          1        2.94      100.00
------------------+-----------------------------------
            Total |         34      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Large Bonus, bonus_order = Base-Large-Small

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         19       63.33       63.33
Pseudo-democratic |         10       33.33       96.67
       Autocratic |          1        3.33      100.00
------------------+-----------------------------------
            Total |         30      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Large Bonus, bonus_order = Base-Small-Large

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         22       64.71       64.71
Pseudo-democratic |         11       32.35       97.06
       Autocratic |          1        2.94      100.00
------------------+-----------------------------------
            Total |         34      100.00


. catplot rule bonus_order if decision > 1, over(bonus_size) percent(bonus_order bonus_size ) asyvar recast(bar) yla(0(20)100) blabel(bar, format(%9.0f) 
> pos(center)  gap(0.1)) b1title("") legend(ring(0) pos(12) rows(1))

. gr export "$working_ANALYSIS/results/figures/figureS3_order_effects.tif", replace width(5800)
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figureS3_order_effects.tif not
>  found)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figureS3_order_effects.tif written i
> n TIFF format)

. 
. tab rule bonus_order if decision > 1, chi2 exact

Enumerating sample-space combinations:
stage 3:  enumerations = 1
stage 2:  enumerations = 2
stage 1:  enumerations = 0

                  |      bonus_order
             rule | Base-Larg  Base-Smal |     Total
------------------+----------------------+----------
       Democratic |        39         43 |        82 
Pseudo-democratic |        18         23 |        41 
       Autocratic |         3          2 |         5 
------------------+----------------------+----------
            Total |        60         68 |       128 

          Pearson chi2(2) =   0.5069   Pr = 0.776
           Fisher's exact =                 0.811

. *no significant differences between the two randomization (small or large bonus round played first)
. 
. 
. *Table S4.      Sample splits by order of conditional payments
. 
. 
. *Order 1: Base-Large-Small
. eststo reg_time1: xtreg dem i.round if bonus_order==0, vce(robust)

Random-effects GLS regression                   Number of obs     =         90
Group variable: id                              Number of groups  =         30

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0033                                         max =          3

                                                Wald chi2(2)      =       0.39
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.8227

                                    (Std. Err. adjusted for 30 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |  -.0666667   .1077112    -0.62   0.536    -.2777768    .1444435
          3  |  -.0333333   .1026813    -0.32   0.745    -.2345849    .1679183
             |
       _cons |         .7   .0860689     8.13   0.000     .5313081    .8686919
-------------+----------------------------------------------------------------
     sigma_u |  .28432888
     sigma_e |  .38506605
         rho |  .35284281   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.14
         Prob > chi2 =    0.7127

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .71265666

. eststo reg_time2: xtreg fake i.round if bonus_order==0, vce(robust)

Random-effects GLS regression                   Number of obs     =         90
Group variable: id                              Number of groups  =         30

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0374                                         max =          3

                                                Wald chi2(2)      =       5.22
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.0735

                                    (Std. Err. adjusted for 30 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |         .2   .0894191     2.24   0.025     .0247418    .3752582
          3  |   .1333333   .0936999     1.42   0.155    -.0503151    .3169818
             |
       _cons |   .1333333   .0638457     2.09   0.037      .008198    .2584686
-------------+----------------------------------------------------------------
     sigma_u |  .23812808
     sigma_e |  .35665539
         rho |  .30833333   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.48
         Prob > chi2 =    0.4882

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .48820502

. eststo reg_time3: xtreg dic i.round if bonus_order==0, vce(robust)

Random-effects GLS regression                   Number of obs     =         90
Group variable: id                              Number of groups  =         30

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0396                                         max =          3

                                                Wald chi2(2)      =       2.82
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.2441

                                    (Std. Err. adjusted for 30 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |  -.1333333   .0801746    -1.66   0.096    -.2904728    .0238061
          3  |        -.1   .0743404    -1.35   0.179    -.2457044    .0457044
             |
       _cons |   .1666667   .0699955     2.38   0.017      .029478    .3038553
-------------+----------------------------------------------------------------
     sigma_u |  .07057509
     sigma_e |  .27473428
         rho |  .06190476   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.32
         Prob > chi2 =    0.5725

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .5724982

. 
. *Order 2: Base-Small-Large
. eststo reg_time4: xtreg dem i.round if bonus_order==1, vce(robust)

Random-effects GLS regression                   Number of obs     =        102
Group variable: id                              Number of groups  =         34

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0024                                         max =          3

                                                Wald chi2(2)      =       0.49
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.7814

                                    (Std. Err. adjusted for 34 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |   .0294118   .0903144     0.33   0.745    -.1476013    .2064248
          3  |   .0588235   .0846593     0.69   0.487    -.1071056    .2247527
             |
       _cons |   .5882353   .0865339     6.80   0.000      .418632    .7578386
-------------+----------------------------------------------------------------
     sigma_u |  .34985779
     sigma_e |  .34687297
         rho |  .50428397   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.14
         Prob > chi2 =    0.7118

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .71180246

. eststo reg_time5: xtreg fake i.round if bonus_order==1, vce(robust)

Random-effects GLS regression                   Number of obs     =        102
Group variable: id                              Number of groups  =         34

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0026                                         max =          3

                                                Wald chi2(2)      =       0.49
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.7814

                                    (Std. Err. adjusted for 34 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |   .0588235   .0846593     0.69   0.487    -.1071056    .2247527
          3  |   .0294118   .0903144     0.33   0.745    -.1476013    .2064248
             |
       _cons |   .2941176   .0801148     3.67   0.000     .1370955    .4511398
-------------+----------------------------------------------------------------
     sigma_u |  .32338083
     sigma_e |  .34687297
         rho |  .46499339   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.14
         Prob > chi2 =    0.7118

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .71180246

. eststo reg_time6: xtreg dic i.round if bonus_order==1, vce(robust)

Random-effects GLS regression                   Number of obs     =        102
Group variable: id                              Number of groups  =         34

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0313                                         max =          3

                                                Wald chi2(1)      =          .
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =          .

                                    (Std. Err. adjusted for 34 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |  -.0882353   .0656176    -1.34   0.179    -.2168434    .0403728
          3  |  -.0882353   .0656176    -1.34   0.179    -.2168434    .0403728
             |
       _cons |   .1176471   .0566497     2.08   0.038     .0066156    .2286785
-------------+----------------------------------------------------------------
     sigma_u |  .08618128
     sigma_e |  .21870357
         rho |   .1344086   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.00
         Prob > chi2 =    1.0000

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .99999998

. 
. esttab reg_time1 reg_time2 reg_time3 reg_time4 reg_time5 reg_time6 using "$working_ANALYSIS\results\Tables\tableS4_order_effects.rtf", keep(2.round 3.r
> ound _cons) label se(%4.3f)  transform(ln*: exp(@) exp(@)) mgroups("Order 1: Base-Large-Small" "Order 2: Base-Small-Large", pattern(1 0 0 1 0 0)) mtitl
> es("Democratic" "Pseudo-democratic" "Dictator" "Democratic" "Pseudo-democratic" "Dictator") b(%4.3f) stats(N N_clust r2_o joint_test, fmt(0 0 3 3) labe
> ls("Observations" "Cluster" "Overall R-squared" "Test: Round 2 = Round 3 (chi2)" )) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(weight:_cons "{break
> }{hline @width}")) nonotes addnotes("Notes: Robust standard errors in brackets: * p < 0.10, ** p < 0.05, *** p < 0.01.") replace 
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS4_order_effects.rtf not f
> ound)
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS4_order_effects.rt
> f)

. 
. 
. *Table S5.      Main effects of bonus payment 
. esttab reg_dem1 reg_fake1 reg_dic1 reg_dem2 reg_fake2 reg_dic2 using "$working_ANALYSIS\results\Tables\tableS5_main_effects.rtf",  ci transform(ln*: ex
> p(@) exp(@))mtitles("Democratic" "Pseudo-democratic" "Dictator" "Democratic" "Pseudo-democratic" "Dictator") b(%4.2f) eqlabels("" "lnsig2u", none) stat
> s(N N_g sigma_u rho chi2 p, labels("N" "Individuals" "sigma_u" "rho" "Wald Chi2" "p" ) fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(
> ,elist(weight:_cons "{break}{hline @width}")) replace 
estimation result reg_dem1 not found
r(111);

end of do-file

r(111);

. do "C:\Users\istei\AppData\Local\Temp\STD3f80_000000.tmp"

. esttab reg_dem1 reg_fake1 reg_dic1 reg_dem2 reg_fake2 reg_dic2 using "$working_ANALYSIS\results\Tables\tableS5_main_effects.rtf",  ci transform(ln*: ex
> p(@) exp(@))mtitles("Democratic" "Pseudo-democratic" "Dictator" "Democratic" "Pseudo-democratic" "Dictator") b(%4.2f) eqlabels("" "lnsig2u", none) stat
> s(N N_g sigma_u rho chi2 p, labels("N" "Individuals" "sigma_u" "rho" "Wald Chi2" "p" ) fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(
> ,elist(weight:_cons "{break}{hline @width}")) replace 
estimation result reg_dem1 not found
r(111);

end of do-file

r(111);

. do "C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\scripts\03_analysis.do"

. *--------------------------------------------------------------------
. * SCRIPT: 03_analysis.do
. * PURPOSE: replicates the tables and figures and saves the results
. *--------------------------------------------------------------------
. 
. *--------------------------------------------------
. * STRUCTURE OF THE DO-FILE
. /*
> 
>         1) Analysis for main paper
>         2) Analysis for supplementary online materials
> */
. *--------------------------------------------------
. 
. 
. *--------------------------------------------------
. * (1) Analysis for main paper
. *--------------------------------------------------
. 
. 
. *Figure 1.      Normative expectations regarding group decision-making
. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. * Please indicate for each of the statement whether you disagree strongly, disagree a little, neither agree nor disagree, agree a little, or strongly a
> gree
.  global dem_norm c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12

.  foreach var of varlist $dem_norm {
  2.         replace `var'=0 if `var'==. 
  3.         }
(51 real changes made)
(53 real changes made)
(49 real changes made)
(113 real changes made)
(23 real changes made)
(61 real changes made)
(86 real changes made)
(26 real changes made)
(63 real changes made)
(52 real changes made)
(36 real changes made)
(32 real changes made)

.         
. foreach var of varlist $dem_norm {
  2.         gen new_`var'=1 if `var'==1
  3.         replace new_`var'=2 if `var'==2 
  4.         replace new_`var'=3 if `var'==0 
  5.         replace new_`var'=4 if `var'==3
  6.         replace new_`var'=5 if `var'==4
  7.         }
(372 missing values generated)
(8 real changes made)
(51 real changes made)
(19 real changes made)
(294 real changes made)
(353 missing values generated)
(20 real changes made)
(53 real changes made)
(43 real changes made)
(237 real changes made)
(390 missing values generated)
(10 real changes made)
(49 real changes made)
(30 real changes made)
(301 real changes made)
(353 missing values generated)
(22 real changes made)
(113 real changes made)
(30 real changes made)
(188 real changes made)
(399 missing values generated)
(4 real changes made)
(23 real changes made)
(9 real changes made)
(363 real changes made)
(191 missing values generated)
(13 real changes made)
(61 real changes made)
(24 real changes made)
(93 real changes made)
(284 missing values generated)
(45 real changes made)
(86 real changes made)
(34 real changes made)
(119 real changes made)
(397 missing values generated)
(6 real changes made)
(26 real changes made)
(6 real changes made)
(359 real changes made)
(153 missing values generated)
(11 real changes made)
(63 real changes made)
(12 real changes made)
(67 real changes made)
(334 missing values generated)
(38 real changes made)
(52 real changes made)
(71 real changes made)
(173 real changes made)
(307 missing values generated)
(40 real changes made)
(36 real changes made)
(55 real changes made)
(176 real changes made)
(375 missing values generated)
(21 real changes made)
(32 real changes made)
(61 real changes made)
(261 real changes made)

. lab var new_c1 "For important decisions members of a group should be allowed to vote."

. lab var new_c2 "Most people can learn to be leaders, it is not a matter of birth."

. lab var new_c3 "Democratic elections in this village ensure that the elected authorities act in the interest of their people."
note: label truncated to 80 characters

. lab var new_c4 "In most cases, failures in this village are traceable to bad cicumstances and not bad leadership."
note: label truncated to 80 characters

. lab var new_c5 "Schools and parents schould teach children to obey authority."

. lab var new_c6 "Favouring friends, relatives or supporters over others in the course of ones duties as a leader is sometimes justified."
note: label truncated to 80 characters

. lab var new_c7 "On the whole, men make better political leaders than women do."

. lab var new_c8 "A leader hast to serve all people including those who did not vote for him/her or are not friends."
note: label truncated to 80 characters

. lab var new_c9 "Accepting a bribe in the course of ones duties is sometimes justified."

. lab var new_c10 "Most people in this village can be trusted."

. lab var new_c11 "On the whole, more educated people make better political leaders than the less educated do."
note: label truncated to 80 characters

. lab var new_c12 "On the whole, elders make better political leaders than the youth do."

.         
. gen new_c6r = 6- new_c6

. gen new_c7r = 6- new_c7 

. gen new_c9r = 6- new_c9

. alpha new_c1 new_c3 new_c8 new_c9r 

Test scale = mean(unstandardized items)

Average interitem covariance:     .9378221
Number of items in the scale:            4
Scale reliability coefficient:      0.7613

. 
. gen types = 0 if villager==1
(64 missing values generated)

. replace types = 1 if extrinsic_leader==0
(35 real changes made)

. replace types = 2 if extrinsic_leader==1
(29 real changes made)

. lab def villy1 0 "Villager" 1 "Intrinsic leader" 2 "Extrinsic leader", replace

. lab val types villy1

. 
. *graphical presentation
. preserve

. rename new_c1 norm1

. rename new_c3 norm2

. rename new_c8 norm3

. 
. 
. reshape long norm ,i(id) j(pr_id)
(note: j = 1 2 3)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                      448   ->    1344
Number of variables                 458   ->     457
j variable (3 values)                     ->   pr_id
xij variables:
                      norm1 norm2 norm3   ->   norm
-----------------------------------------------------------------------------

. label define pr1 1 "Group voting" 2 "Elections" 3 "Inclusive"

. label values pr_id pr1

. 
. cibar norm, over1(types) over2(pr_id) bargap(0) gap(80) barlabel(on) blpos(11) blgap(0.01) blfmt(%9.1f) graphopts(legend() xsize(4) ysize(2) yla(1(1)5)
>   ytitle("Mean") note("{bf: Group voting}='For important decisions members of a group should be allowed to vote.'" "{bf: Elections}='Democratic electio
> ns in this village ensure that the elected authorities act in the interest of their people.'" "{bf: Inclusive}='A leader hast to serve all people inclu
> ding those who did not vote for him/her or are not friends.'")) ciopts(lpattern(dash) lcolor(black))

. gr save "$working_ANALYSIS/results/intermediate/figure1_normative_expectations.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure1_normative_expectations.
> gph saved)

. gr export "$working_ANALYSIS/results/figures/figure1_normative_expectations.tif", replace width(3465)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure1_normative_expectations.tif w
> ritten in TIFF format)

. restore

. 
. ttest new_c1 if types!= 2, by(types)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
Villager |     384    4.117188    .0727191    1.424997    3.974209    4.260166
Intrinsi |      35    3.685714    .3142857    1.859339    3.047009     4.32442
---------+--------------------------------------------------------------------
combined |     419    4.081146     .071734    1.468359    3.940141     4.22215
---------+--------------------------------------------------------------------
    diff |            .4314732    .2587118               -.0770686     .940015
------------------------------------------------------------------------------
    diff = mean(Villager) - mean(Intrinsi)                        t =   1.6678
Ho: diff = 0                                     degrees of freedom =      417

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9519         Pr(|T| > |t|) = 0.0961          Pr(T > t) = 0.0481

. ranksum new_c1 if types!= 1, by(types)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

       types |      obs    rank sum    expected
-------------+---------------------------------
    Villager |      384       81341       79488
Extrinsic le |       29        4150        6003
-------------+---------------------------------
    combined |      413       85491       85491

unadjusted variance   384192.00
adjustment for ties  -110872.43
                     ----------
adjusted variance     273319.57

Ho: new_c1(types==Villager) = new_c1(types==Extrinsic leader)
             z =   3.544
    Prob > |z| =   0.0004

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

. ranksum new_c1 if types!= 0, by(types)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

       types |      obs    rank sum    expected
-------------+---------------------------------
Intrinsic le |       35      1259.5      1137.5
Extrinsic le |       29       820.5       942.5
-------------+---------------------------------
    combined |       64        2080        2080

unadjusted variance     5497.92
adjustment for ties    -1346.28
                     ----------
adjusted variance       4151.63

Ho: new_c1(types==Intrinsic leader) = new_c1(types==Extrinsic leader)
             z =   1.893
    Prob > |z| =   0.0583
    Exact Prob =   0.0707

. reg new_c1 i.types

      Source |       SS           df       MS      Number of obs   =       448
-------------+----------------------------------   F(2, 445)       =     11.23
       Model |  50.9697275         2  25.4848638   Prob > F        =    0.0000
    Residual |  1010.02804       445  2.26972593   R-squared       =    0.0480
-------------+----------------------------------   Adj R-squared   =    0.0438
       Total |  1060.99777       447   2.3735968   Root MSE        =    1.5066

-----------------------------------------------------------------------------------
           new_c1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |  -.4314732   .2660076    -1.62   0.106    -.9542605     .091314
Extrinsic leader  |  -1.324084    .290133    -4.56   0.000    -1.894285    -.753883
                  |
            _cons |   4.117188   .0768814    53.55   0.000     3.966092    4.268283
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    5.57
            Prob > F =    0.0187

. reg new_c3 i.types, vce(hc3)

Linear regression                               Number of obs     =        448
                                                F(2, 445)         =      19.56
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1286
                                                Root MSE          =     1.3309

-----------------------------------------------------------------------------------
                  |             Robust HC3
           new_c3 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |   -.652753   .3228877    -2.02   0.044    -1.287327   -.0181788
Extrinsic leader  |  -1.999551   .3337905    -5.99   0.000    -2.655552    -1.34355
                  |
            _cons |   4.309896   .0633192    68.07   0.000     4.185454    4.434338
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    8.74
            Prob > F =    0.0033

. reg new_c8 i.types, vce(hc3)

Linear regression                               Number of obs     =        448
                                                F(2, 445)         =      16.19
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1495
                                                Root MSE          =     1.2404

-----------------------------------------------------------------------------------
                  |             Robust HC3
           new_c8 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |  -.9443452   .3349403    -2.82   0.005    -1.602606    -.286084
Extrinsic leader  |  -1.917744   .3828851    -5.01   0.000    -2.670232   -1.165257
                  |
            _cons |   4.572917   .0551377    82.94   0.000     4.464554    4.681279
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    3.75
            Prob > F =    0.0535

. 
. 
. *normative expecation related to group voting by leader baseline choice
. reg new_c1 i.rule_base3 if villager==1, vce(hc3)

Linear regression                               Number of obs     =        384
                                                F(1, 382)         =       4.87
                                                Prob > F          =     0.0279
                                                R-squared         =     0.0087
                                                Root MSE          =     1.4207

------------------------------------------------------------------------------
             |             Robust HC3
      new_c1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
1.rule_base3 |   .3808081   .1725629     2.21   0.028     .0415161    .7201001
       _cons |   4.063636   .0807426    50.33   0.000     3.904881    4.222392
------------------------------------------------------------------------------

. 
. 
. 
. 
. *Figure 2.      Preference for democratic governance in study region
. clear

. use "$working_ANALYSIS/data/afro_r6.dta"

. keep if COUNTRY==22
(52,735 observations deleted)

. rename *, lower

. 
. 
. gen ohangwena= 0

. replace ohangwena = 1 if region == 588
(120 real changes made)

. lab def ohang 0 "Rest of Namibia" 1 "Ohangwena", replace

. lab val ohangwena ohang

. *SUPPORT FOR DEMOCRACY
. tab q30, nolab

       Q30. |
Support for |
  democracy |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        192       16.00       16.00
          2 |         96        8.00       24.00
          3 |        884       73.67       97.67
          9 |         28        2.33      100.00
------------+-----------------------------------
      Total |      1,200      100.00

. lab def democracy 1 "Does't matter for someone like me" 2 "Sometimes non-democratic preferable" 3 "Always democracy preferable", replace 

. lab val q30 democracy

. foreach x of varlist q30 q52b q52j q52k q68d q71a {
  2.         replace `x'=. if `x'==9
  3. }
(28 real changes made, 28 to missing)
(31 real changes made, 31 to missing)
(11 real changes made, 11 to missing)
(27 real changes made, 27 to missing)
(68 real changes made, 68 to missing)
(11 real changes made, 11 to missing)

. encode location_level_1, gen(constituency)

. gen demo_pref= 1 if q30==3
(316 missing values generated)

. replace demo_pref = 0 if q30<3
(288 real changes made)

. 
. ttest q52b, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,050    2.117143    .0287843    .9327182    2.060661    2.173624
Ohangwen |     119    2.327731    .0810391     .884032    2.167252    2.488211
---------+--------------------------------------------------------------------
combined |   1,169     2.13858    .0271916    .9296993     2.08523     2.19193
---------+--------------------------------------------------------------------
    diff |           -.2105882    .0897523               -.3866822   -.0344943
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =  -2.3463
Ho: diff = 0                                     degrees of freedom =     1167

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.0096         Pr(|T| > |t|) = 0.0191          Pr(T > t) = 0.9904

. ttest q52j, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,070    2.080374    .0272134     .890175    2.026976    2.133772
Ohangwen |     119     1.87395    .0822994    .8977809    1.710974    2.036925
---------+--------------------------------------------------------------------
combined |   1,189    2.059714    .0258893    .8927129     2.00892    2.110508
---------+--------------------------------------------------------------------
    diff |            .2064243    .0860936                .0375116    .3753369
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   2.3977
Ho: diff = 0                                     degrees of freedom =     1187

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9917         Pr(|T| > |t|) = 0.0167          Pr(T > t) = 0.0083

. ttest q52k, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,053      2.1415    .0276339    .8967179    2.087277    2.195724
Ohangwen |     120    2.008333    .0771479    .8451128    1.855573    2.161094
---------+--------------------------------------------------------------------
combined |   1,173    2.127877    .0260487    .8921436     2.07677    2.178984
---------+--------------------------------------------------------------------
    diff |            .1331671    .0859051                -.035378    .3017123
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   1.5502
Ho: diff = 0                                     degrees of freedom =     1171

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9393         Pr(|T| > |t|) = 0.1214          Pr(T > t) = 0.0607

. ttest q68d, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,030    2.976699    .0226438    .7267222    2.932266    3.021132
Ohangwen |     102    2.911765    .0871282    .8799521    2.738926    3.084604
---------+--------------------------------------------------------------------
combined |   1,132    2.970848    .0220421    .7416127      2.9276    3.014096
---------+--------------------------------------------------------------------
    diff |            .0649343    .0769905               -.0861261    .2159947
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   0.8434
Ho: diff = 0                                     degrees of freedom =     1130

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.8004         Pr(|T| > |t|) = 0.3992          Pr(T > t) = 0.1996

. ttest q71a, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,069    3.727783    .0394163    1.288739    3.650441    3.805125
Ohangwen |     120    3.391667     .130875    1.433664    3.132521    3.650812
---------+--------------------------------------------------------------------
combined |   1,189     3.69386    .0379148    1.307375    3.619473    3.768248
---------+--------------------------------------------------------------------
    diff |            .3361163    .1255415                .0898084    .5824242
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   2.6773
Ho: diff = 0                                     degrees of freedom =     1187

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9962         Pr(|T| > |t|) = 0.0075          Pr(T > t) = 0.0038

.  
. gen com_member = 0

. replace com_member = 1 if q19b==3 | q19b==2
(169 real changes made)

. 
. *Democracy is preferable to any other kind of government.
. gen study_sites = 0

. replace study_sites = 1 if ohangwena==1
(120 real changes made)

. replace study_sites = 2 if constituency==9 | constituency==43 | constituency==71
(40 real changes made)

. lab def studies 0 "Rest of Namibia (n=1058)" 1 "Rest of Ohangwena (n=76)" 2 "Study sites (n=38)", replace

. lab val study_sites studies

. catplot q30, over(study_sites) asyvars stack horizontal recast(bar) yla(0(20)100, nogrid) percent(study_sites) bargap(10) blabel(bar, format(%9.0f) pos
> (center)  gap(0.1)) title("Which of these three statements is closest to your own opinion?")  b1title("") legend(ring(1) pos(6) rows(3))

. gr save  "$working_ANALYSIS/results/intermediate/support_dem_namibia.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/support_dem_namibia.gph saved)

. gr export "$working_ANALYSIS/results/figures/afro_support_democracy.tif", replace width(4000)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/afro_support_democracy.tif written i
> n TIFF format)

. ranksum q30 if study_sites!=1, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Nami |     1058    581626.5      580313
Study sites  |       38     19529.5       20843
-------------+---------------------------------
    combined |     1096      601156      601156

unadjusted variance  3675315.67
adjustment for ties   -1.60e+06
                     ----------
adjusted variance    2073385.02

Ho: q30(study_~s==Rest of Namibia (n=1058)) = q30(study_~s==Study sites (n=38))
             z =   0.912
    Prob > |z| =   0.3617

. ranksum q30 if study_sites!=0, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Ohan |       76      4414.5        4370
Study sites  |       38      2140.5        2185
-------------+---------------------------------
    combined |      114        6555        6555

unadjusted variance    27676.67
adjustment for ties   -11049.14
                     ----------
adjusted variance      16627.52

Ho: q30(study_~s==Rest of Ohangwena (n=76)) = q30(study_~s==Study sites (n=38))
             z =   0.345
    Prob > |z| =   0.7300
    Exact Prob =   0.7819

. 
. reg q52b i.study_sites, vce(hc3)

Linear regression                               Number of obs     =      1,169
                                                F(2, 1166)        =      11.40
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0144
                                                Root MSE          =     .92378

-------------------------------------------------------------------------------------------
                          |             Robust HC3
                     q52b |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
--------------------------+----------------------------------------------------------------
              study_sites |
Rest of Ohangwena (n=76)  |   .4145027    .091302     4.54   0.000     .2353682    .5936372
      Study sites (n=38)  |  -.1921429   .1581376    -1.22   0.225    -.5024089    .1181232
                          |
                    _cons |   2.117143    .028798    73.52   0.000     2.060641    2.173645
-------------------------------------------------------------------------------------------

. ranksum q52b if study_sites!=1, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Nami |     1050      575205      572775
Study sites  |       40       19390       21820
-------------+---------------------------------
    combined |     1090      594595      594595

unadjusted variance  3818500.00
adjustment for ties  -454608.43
                     ----------
adjusted variance    3363891.57

Ho: q52b(study_~s==Rest of Namibia (n=1058)) = q52b(study_~s==Study sites (n=38))
             z =   1.325
    Prob > |z| =   0.1852

. ranksum q71a if study_sites!=1, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Nami |     1069      596168      593295
Study sites  |       40       19327       22200
-------------+---------------------------------
    combined |     1109      615495      615495

unadjusted variance  3955300.00
adjustment for ties  -359561.61
                     ----------
adjusted variance    3595738.39

Ho: q71a(study_~s==Rest of Namibia (n=1058)) = q71a(study_~s==Study sites (n=38))
             z =   1.515
    Prob > |z| =   0.1297

. 
. 
. 
. * Load cleaned dataset (long-format)
. clear

. use "$working_ANALYSIS/processed/analysis_long.dta"

. 
. *set panel
. xtset id decision
       panel variable:  id (strongly balanced)
        time variable:  decision, 1 to 6, but with gaps
                delta:  1 unit

. 
. 
. *Figure 4.      Average treatment effects of payment
. *Panel A: Main treatment effects
. tab rule if decision<2

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         41       64.06       64.06
Pseudo-democratic |         14       21.88       85.94
       Autocratic |          9       14.06      100.00
------------------+-----------------------------------
            Total |         64      100.00

. bys TL: tab rule if decision<2

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> TL = 0

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         18       56.25       56.25
Pseudo-democratic |          8       25.00       81.25
       Autocratic |          6       18.75      100.00
------------------+-----------------------------------
            Total |         32      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> TL = 1

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         23       71.88       71.88
Pseudo-democratic |          6       18.75       90.63
       Autocratic |          3        9.38      100.00
------------------+-----------------------------------
            Total |         32      100.00


. prtest dem1 if decision<2, by(TL)

Two-sample test of proportions                     0: Number of obs =       32
                                                   1: Number of obs =       32
------------------------------------------------------------------------------
       Group |       Mean   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
           0 |      .5625   .0876951                      .3906208    .7343792
           1 |     .71875   .0794804                      .5629712    .8745288
-------------+----------------------------------------------------------------
        diff |    -.15625   .1183536                     -.3882187    .0757187
             |  under Ho:   .1199543    -1.30   0.193
------------------------------------------------------------------------------
        diff = prop(0) - prop(1)                                  z =  -1.3026
    Ho: diff = 0

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(Z < z) = 0.0964         Pr(|Z| > |z|) = 0.1927          Pr(Z > z) = 0.9036

. 
. 
. * Small and Large bonus seperately
. eststo reg_dem1: xtprobit dem bonus_2 bonus_3 , vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -125.38709  
Iteration 1:   log pseudolikelihood = -125.38709  

Fitting full model:

rho =  0.0     log pseudolikelihood = -125.38709
rho =  0.1     log pseudolikelihood = -120.97002
rho =  0.2     log pseudolikelihood = -117.59758
rho =  0.3     log pseudolikelihood = -115.02704
rho =  0.4     log pseudolikelihood = -113.13299
rho =  0.5     log pseudolikelihood = -111.87369
rho =  0.6     log pseudolikelihood = -111.29283
rho =  0.7     log pseudolikelihood = -111.58207

Iteration 0:   log pseudolikelihood = -111.29429  
Iteration 1:   log pseudolikelihood = -110.64933  
Iteration 2:   log pseudolikelihood = -110.63147  
Iteration 3:   log pseudolikelihood = -110.63147  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       0.00
Log pseudolikelihood  = -110.63147              Prob > chi2       =     0.9999

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .0038466   .2964481     0.01   0.990     -.577181    .5848743
     bonus_3 |   .0038466   .2964481     0.01   0.990     -.577181    .5848743
       _cons |   .5973239   .2794914     2.14   0.033     .0495309    1.145117
-------------+----------------------------------------------------------------
    /lnsig2u |   .5734665   .4495206                     -.3075777    1.454511
-------------+----------------------------------------------------------------
     sigma_u |   1.332069   .2993962                      .8574531    2.069393
         rho |   .6395627   .1036245                      .4237061    .8106917
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dem=1), predict(pr)
dy/dx w.r.t. : bonus_2 bonus_3

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .0008635   .0665515     0.01   0.990     -.129575    .1313021
     bonus_3 |   .0008635   .0665515     0.01   0.990     -.129575    .1313021
------------------------------------------------------------------------------

. est store pr1

. eststo reg_fake1: xtprobit fake bonus_2 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =  -114.9984  
Iteration 1:   log pseudolikelihood = -113.09846  
Iteration 2:   log pseudolikelihood = -113.09531  
Iteration 3:   log pseudolikelihood = -113.09531  

Fitting full model:

rho =  0.0     log pseudolikelihood = -113.09531
rho =  0.1     log pseudolikelihood = -109.50028
rho =  0.2     log pseudolikelihood = -106.85965
rho =  0.3     log pseudolikelihood = -104.95446
rho =  0.4     log pseudolikelihood = -103.67659
rho =  0.5     log pseudolikelihood = -102.99775
rho =  0.6     log pseudolikelihood = -102.97063
rho =  0.7     log pseudolikelihood = -103.77414

Iteration 0:   log pseudolikelihood = -102.97557  
Iteration 1:   log pseudolikelihood = -101.54769  
Iteration 2:   log pseudolikelihood = -101.40994  
Iteration 3:   log pseudolikelihood = -101.40943  
Iteration 4:   log pseudolikelihood = -101.40943  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       3.97
Log pseudolikelihood  = -101.40943              Prob > chi2       =     0.2652

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .4614349   .3139349     1.47   0.142    -.1538663    1.076736
     bonus_3 |   .5327473   .3187649     1.67   0.095    -.0920204    1.157515
 bonus_order |   .3387109   .4152962     0.82   0.415    -.4752546    1.152676
       _cons |  -1.431821   .3832913    -3.74   0.000    -2.183058   -.6805835
-------------+----------------------------------------------------------------
    /lnsig2u |   .4616659   .4812244                     -.4815165    1.404848
-------------+----------------------------------------------------------------
     sigma_u |   1.259649   .3030868                      .7860316     2.01864
         rho |   .6134093   .1141167                      .3818941    .8029521
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(fake=1), predict(pr)
dy/dx w.r.t. : bonus_2 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .0961699    .063935     1.50   0.133    -.0291404    .2214802
     bonus_3 |   .1110324   .0645646     1.72   0.085    -.0155119    .2375767
 bonus_order |   .0705924   .0860772     0.82   0.412    -.0981159    .2393007
------------------------------------------------------------------------------

. est store pr2

. eststo reg_dic1: xtprobit dic bonus_2 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -50.134837  
Iteration 1:   log pseudolikelihood = -46.751419  
Iteration 2:   log pseudolikelihood = -46.668355  
Iteration 3:   log pseudolikelihood = -46.668238  
Iteration 4:   log pseudolikelihood = -46.668238  

Fitting full model:

rho =  0.0     log pseudolikelihood = -46.668238
rho =  0.1     log pseudolikelihood =  -46.34144
rho =  0.2     log pseudolikelihood = -46.487345

Iteration 0:   log pseudolikelihood =  -46.34144  
Iteration 1:   log pseudolikelihood = -46.224904  
Iteration 2:   log pseudolikelihood = -45.725694  
Iteration 3:   log pseudolikelihood = -45.716321  
Iteration 4:   log pseudolikelihood = -45.716168  
Iteration 5:   log pseudolikelihood = -45.716168  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       5.89
Log pseudolikelihood  = -45.716168              Prob > chi2       =     0.1171

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |  -.7685142   .3654187    -2.10   0.035    -1.484722   -.0523066
     bonus_3 |  -.9802238   .4762269    -2.06   0.040    -1.913611   -.0468363
 bonus_order |  -.3149328   .3841314    -0.82   0.412    -1.067817    .4379509
       _cons |  -1.164717   .3813613    -3.05   0.002    -1.912172   -.4172627
-------------+----------------------------------------------------------------
    /lnsig2u |   -.664432   .8165016                     -2.264746    .9358817
-------------+----------------------------------------------------------------
     sigma_u |   .7173324   .2928515                      .3222677    1.596703
         rho |   .3397447   .1831562                      .0940851     .718267
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dic=1), predict(pr)
dy/dx w.r.t. : bonus_2 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |  -.0804475   .0394257    -2.04   0.041    -.1577204   -.0031745
     bonus_3 |  -.1026091   .0485981    -2.11   0.035    -.1978595   -.0073586
 bonus_order |  -.0329669   .0402543    -0.82   0.413    -.1118639    .0459301
------------------------------------------------------------------------------

. est store pr3

. 
. *test small versus large bonus 
. xtprobit dem bonus_1 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -125.38709  
Iteration 1:   log pseudolikelihood = -125.13711  
Iteration 2:   log pseudolikelihood =  -125.1371  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -125.1371
rho =  0.1     log pseudolikelihood = -120.75301
rho =  0.2     log pseudolikelihood = -117.40806
rho =  0.3     log pseudolikelihood = -114.86156
rho =  0.4     log pseudolikelihood = -112.98925
rho =  0.5     log pseudolikelihood = -111.75008
rho =  0.6     log pseudolikelihood = -111.18782
rho =  0.7     log pseudolikelihood = -111.49319

Iteration 0:   log pseudolikelihood = -111.19027  
Iteration 1:   log pseudolikelihood =  -110.5521  
Iteration 2:   log pseudolikelihood = -110.53321  
Iteration 3:   log pseudolikelihood = -110.53321  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       0.20
Log pseudolikelihood  = -110.53321              Prob > chi2       =     0.9783

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.0040703   .2964191    -0.01   0.989    -.5850411    .5769005
     bonus_3 |  -.0004308   .2642776    -0.00   0.999    -.5184054    .5175438
 bonus_order |  -.1862215   .4213684    -0.44   0.659    -1.012088    .6396453
       _cons |   .6984892   .3495222     2.00   0.046     .0134383     1.38354
-------------+----------------------------------------------------------------
    /lnsig2u |   .5654265   .4499982                     -.3165538    1.447407
-------------+----------------------------------------------------------------
     sigma_u |   1.326725   .2985119                      .8536134    2.062056
         rho |   .6377072   .1039661                      .4215158     .809599
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dem=1), predict(pr)
dy/dx w.r.t. : bonus_1 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.0009149    .066629    -0.01   0.989    -.1315053    .1296755
     bonus_3 |  -.0000968   .0594032    -0.00   0.999     -.116525    .1163313
 bonus_order |  -.0418581   .0944824    -0.44   0.658    -.2270401     .143324
------------------------------------------------------------------------------

. xtprobit fake bonus_1 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =  -114.9984  
Iteration 1:   log pseudolikelihood = -113.09846  
Iteration 2:   log pseudolikelihood = -113.09531  
Iteration 3:   log pseudolikelihood = -113.09531  

Fitting full model:

rho =  0.0     log pseudolikelihood = -113.09531
rho =  0.1     log pseudolikelihood = -109.50028
rho =  0.2     log pseudolikelihood = -106.85965
rho =  0.3     log pseudolikelihood = -104.95446
rho =  0.4     log pseudolikelihood = -103.67659
rho =  0.5     log pseudolikelihood = -102.99775
rho =  0.6     log pseudolikelihood = -102.97063
rho =  0.7     log pseudolikelihood = -103.77414

Iteration 0:   log pseudolikelihood = -102.97557  
Iteration 1:   log pseudolikelihood = -101.54769  
Iteration 2:   log pseudolikelihood = -101.40994  
Iteration 3:   log pseudolikelihood = -101.40943  
Iteration 4:   log pseudolikelihood = -101.40943  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       3.97
Log pseudolikelihood  = -101.40943              Prob > chi2       =     0.2652

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.4614349   .3139349    -1.47   0.142    -1.076736    .1538663
     bonus_3 |   .0713124   .2771217     0.26   0.797    -.4718362     .614461
 bonus_order |   .3387109   .4152962     0.82   0.415    -.4752546    1.152676
       _cons |  -.9703856   .3528396    -2.75   0.006    -1.661939   -.2788326
-------------+----------------------------------------------------------------
    /lnsig2u |   .4616659   .4812244                     -.4815165    1.404848
-------------+----------------------------------------------------------------
     sigma_u |   1.259649   .3030868                      .7860316     2.01864
         rho |   .6134093   .1141167                      .3818941    .8029521
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(fake=1), predict(pr)
dy/dx w.r.t. : bonus_1 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.0961699    .063935    -1.50   0.133    -.2214802    .0291404
     bonus_3 |   .0148626   .0577308     0.26   0.797    -.0982878    .1280129
 bonus_order |   .0705924   .0860772     0.82   0.412    -.0981159    .2393007
------------------------------------------------------------------------------

. xtprobit dic bonus_1 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -50.134837  
Iteration 1:   log pseudolikelihood = -46.751419  
Iteration 2:   log pseudolikelihood = -46.668355  
Iteration 3:   log pseudolikelihood = -46.668238  
Iteration 4:   log pseudolikelihood = -46.668238  

Fitting full model:

rho =  0.0     log pseudolikelihood = -46.668238
rho =  0.1     log pseudolikelihood =  -46.34144
rho =  0.2     log pseudolikelihood = -46.487345

Iteration 0:   log pseudolikelihood =  -46.34144  
Iteration 1:   log pseudolikelihood = -46.224904  
Iteration 2:   log pseudolikelihood = -45.725694  
Iteration 3:   log pseudolikelihood = -45.716321  
Iteration 4:   log pseudolikelihood = -45.716168  
Iteration 5:   log pseudolikelihood = -45.716168  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       5.89
Log pseudolikelihood  = -45.716168              Prob > chi2       =     0.1171

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |   .7685142   .3654187     2.10   0.035     .0523066    1.484722
     bonus_3 |  -.2117097   .4085308    -0.52   0.604    -1.012415    .5889961
 bonus_order |  -.3149328   .3841314    -0.82   0.412    -1.067817    .4379509
       _cons |  -1.933231   .4224659    -4.58   0.000    -2.761249   -1.105213
-------------+----------------------------------------------------------------
    /lnsig2u |   -.664432   .8165016                     -2.264746    .9358817
-------------+----------------------------------------------------------------
     sigma_u |   .7173324   .2928515                      .3222677    1.596703
         rho |   .3397447   .1831562                      .0940851     .718267
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dic=1), predict(pr)
dy/dx w.r.t. : bonus_1 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |   .0804475   .0394257     2.04   0.041     .0031745    .1577204
     bonus_3 |  -.0221616   .0421551    -0.53   0.599    -.1047841    .0604609
 bonus_order |  -.0329669   .0402543    -0.82   0.413    -.1118639    .0459301
------------------------------------------------------------------------------

. 
. *pooled bonus
. eststo reg_dem2: xtprobit dem bonus bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -125.38709  
Iteration 1:   log pseudolikelihood = -125.13711  
Iteration 2:   log pseudolikelihood =  -125.1371  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -125.1371
rho =  0.1     log pseudolikelihood = -120.75302
rho =  0.2     log pseudolikelihood = -117.40806
rho =  0.3     log pseudolikelihood = -114.86156
rho =  0.4     log pseudolikelihood = -112.98925
rho =  0.5     log pseudolikelihood = -111.75008
rho =  0.6     log pseudolikelihood = -111.18782
rho =  0.7     log pseudolikelihood =  -111.4932

Iteration 0:   log pseudolikelihood = -111.19027  
Iteration 1:   log pseudolikelihood =  -110.5521  
Iteration 2:   log pseudolikelihood = -110.53321  
Iteration 3:   log pseudolikelihood = -110.53321  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       0.20
Log pseudolikelihood  = -110.53321              Prob > chi2       =     0.9069

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .0038548   .2653135     0.01   0.988      -.51615    .5238597
 bonus_order |  -.1862194   .4213702    -0.44   0.659     -1.01209    .6396511
       _cons |   .6944178   .3408885     2.04   0.042     .0262886    1.362547
-------------+----------------------------------------------------------------
    /lnsig2u |   .5654267   .4499981                     -.3165533    1.447407
-------------+----------------------------------------------------------------
     sigma_u |   1.326725   .2985118                      .8536136    2.062056
         rho |   .6377072   .1039661                       .421516     .809599
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dem=1), predict(pr)
dy/dx w.r.t. : bonus bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .0008665   .0596371     0.01   0.988    -.1160202    .1177531
 bonus_order |  -.0418576   .0944827    -0.44   0.658    -.2270403    .1433252
------------------------------------------------------------------------------

. est store pr4

. eststo reg_fake2: xtprobit fake bonus bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =  -114.9984  
Iteration 1:   log pseudolikelihood = -113.11824  
Iteration 2:   log pseudolikelihood = -113.11513  
Iteration 3:   log pseudolikelihood = -113.11513  

Fitting full model:

rho =  0.0     log pseudolikelihood = -113.11513
rho =  0.1     log pseudolikelihood = -109.52127
rho =  0.2     log pseudolikelihood = -106.88185
rho =  0.3     log pseudolikelihood = -104.97786
rho =  0.4     log pseudolikelihood =  -103.7012
rho =  0.5     log pseudolikelihood = -103.02356
rho =  0.6     log pseudolikelihood = -102.99767
rho =  0.7     log pseudolikelihood = -103.80249

Iteration 0:   log pseudolikelihood = -103.00256  
Iteration 1:   log pseudolikelihood = -101.57872  
Iteration 2:   log pseudolikelihood = -101.44091  
Iteration 3:   log pseudolikelihood = -101.44039  
Iteration 4:   log pseudolikelihood = -101.44039  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       3.88
Log pseudolikelihood  = -101.44039              Prob > chi2       =     0.1435

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .4971642   .2842203     1.75   0.080    -.0598972    1.054226
 bonus_order |   .3385349   .4151405     0.82   0.415    -.4751255    1.152195
       _cons |  -1.431149   .3832357    -3.73   0.000    -2.182278   -.6800211
-------------+----------------------------------------------------------------
    /lnsig2u |   .4601208    .481087                     -.4827923    1.403034
-------------+----------------------------------------------------------------
     sigma_u |   1.258676   .3027663                      .7855304     2.01681
         rho |   .6130428   .1141241                       .381593    .8026649
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(fake=1), predict(pr)
dy/dx w.r.t. : bonus bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .1036855   .0574167     1.81   0.071    -.0088492    .2162201
 bonus_order |   .0706027   .0860697     0.82   0.412    -.0980907    .2392962
------------------------------------------------------------------------------

. est store pr5

. eststo reg_dic2: xtprobit dic bonus bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -50.134837  
Iteration 1:   log pseudolikelihood = -46.837592  
Iteration 2:   log pseudolikelihood = -46.766968  
Iteration 3:   log pseudolikelihood =  -46.76692  
Iteration 4:   log pseudolikelihood =  -46.76692  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -46.76692
rho =  0.1     log pseudolikelihood = -46.438292
rho =  0.2     log pseudolikelihood = -46.586174

Iteration 0:   log pseudolikelihood = -46.438292  
Iteration 1:   log pseudolikelihood = -46.303056  
Iteration 2:   log pseudolikelihood = -45.823896  
Iteration 3:   log pseudolikelihood = -45.814007  
Iteration 4:   log pseudolikelihood = -45.813838  
Iteration 5:   log pseudolikelihood = -45.813838  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       6.02
Log pseudolikelihood  = -45.813838              Prob > chi2       =     0.0493

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.8653539   .3619556    -2.39   0.017    -1.574774   -.1559341
 bonus_order |  -.3153426   .3830241    -0.82   0.410    -1.066056    .4353707
       _cons |  -1.162901   .3801173    -3.06   0.002    -1.907917   -.4178845
-------------+----------------------------------------------------------------
    /lnsig2u |  -.6719679   .8021689                      -2.24419    .9002543
-------------+----------------------------------------------------------------
     sigma_u |   .7146346   .2866288                      .3255969    1.568512
         rho |   .3380563   .1795048                      .0958518    .7110018
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dic=1), predict(pr)
dy/dx w.r.t. : bonus bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.0908287   .0383611    -2.37   0.018     -.166015   -.0156423
 bonus_order |  -.0330988   .0403304    -0.82   0.412    -.1121449    .0459473
------------------------------------------------------------------------------

. est store pr6

. 
. 
. *plot marginal effects for bonus treatment
. coefplot (pr1, offset(0.2) msymbol(D)) (pr2, offset(0) msymbol(S)) (pr3, offset(-0.2) msymbol(O)) (pr4, offset(0.2) msymbol(D) mcolor("100 143 255") ci
> opts(lwidth(0.3 1) lcolor("100 143 255*.8" "100 143 255*.2")  recast(rcap))) (pr5, offset(0) msymbol(S) mcolor("120 94 240") ciopts(lwidth(0.3 1) color
> ("120 94 240*.8" "120 94 240*.2")  recast(rcap)))  (pr6, offset(-0.2) msymbol(O) mcolor("220 38 127") ciopts(lwidth(0.3 1) color("220 38 127*.8" "220 3
> 8 127*.2")  recast(rcap))), keep(bonus_2 bonus_3 bonus) coeflabels(bonus = "Pooled Bonus" bonus_2 = "Small bonus" bonus_3="Large bonus") xline(0, lpatt
> ern(dash) lcolor(gs3)) xtitle("Regression estimated impact relative to baseline in pp") msize(3pt) xla(-0.3(0.1)0.3, nogrid) grid(none) levels(95 90) c
> iopts(lwidth(0.3 1) lcolor(*.8 *.2) recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", "") )))  mlabsize(7pt)  mlabp
> osition(12) mlabgap(-0.1)  legend(order(3 "Democratic" 6 "Pseudo-democratic" 9 "Autocratic") pos(6) ring(1) rows(1) bmargin(small)) graphregion(margin(
> tiny))  xsize(3.465) ysize(2) scale(1.2)
(note:  named style medthin not found in class linestyle, default attributes used)

. gr save "$working_ANALYSIS/results/intermediate/figure2.gph", replace 
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure2.gph saved)

. gr export "$working_ANALYSIS/results/figures/figure2.tif", replace width(4000)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure2.tif written in TIFF format)

. 
. *Table S5.      Main effects of bonus payment 
. esttab reg_dem1 reg_fake1 reg_dic1 reg_dem2 reg_fake2 reg_dic2 using "$working_ANALYSIS\results\Tables\tableS5_main_effects.rtf",  ci transform(ln*: ex
> p(@) exp(@))mtitles("Democratic" "Pseudo-democratic" "Dictator" "Democratic" "Pseudo-democratic" "Dictator") b(%4.2f) eqlabels("" "lnsig2u", none) stat
> s(N N_g sigma_u rho chi2 p, labels("N" "Individuals" "sigma_u" "rho" "Wald Chi2" "p" ) fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(
> ,elist(weight:_cons "{break}{hline @width}")) replace 
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS5_main_effects.rtf not fo
> und)
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS5_main_effects.rtf
> )

. 
. 
. 
. 
. *Table 2.       Observed crowding effects of conditional monetary incentives in the experiment.
. *created in word, descriptives are calculated here
. 
. tab rule type if round==2, column

+-------------------+
| Key               |
|-------------------|
|     frequency     |
| column percentage |
+-------------------+

                  |                    type
             rule |     Box I    Box III     Box II     Box IV |     Total
------------------+--------------------------------------------+----------
       Democratic |         2          7         16         15 |        40 
                  |     16.67      63.64      69.57      83.33 |     62.50 
------------------+--------------------------------------------+----------
Pseudo-democratic |         9          4          6          3 |        22 
                  |     75.00      36.36      26.09      16.67 |     34.38 
------------------+--------------------------------------------+----------
       Autocratic |         1          0          1          0 |         2 
                  |      8.33       0.00       4.35       0.00 |      3.13 
------------------+--------------------------------------------+----------
            Total |        12         11         23         18 |        64 
                  |    100.00     100.00     100.00     100.00 |    100.00 

. 
. 
. 
. *Figure 5.      Likelihood to choose democratic rule across subgroups
. eststo sub1: xtmixed dem i.bonus bonus_order  || id: if type==1,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -18.564637  
Iteration 1:   log restricted-likelihood = -18.564241  
Iteration 2:   log restricted-likelihood = -18.564241  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         36
Group variable: id                              Number of groups  =         12

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =       5.90
Log restricted-likelihood = -18.564241          Prob > chi2       =     0.0522

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |   .2916667   .1200719     2.43   0.015       .05633    .5270033
          bonus_order |  -.0095238   .1622964    -0.06   0.953     -.327619    .3085714
                _cons |   .0055556   .1475559     0.04   0.970    -.2836488    .2947599
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .1959065   .0923388      .0777754    .4934637
-----------------------------+------------------------------------------------
                sd(Residual) |   .3396147   .0500735      .2543804    .4534082
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 1.80          Prob >= chibar2 = 0.0899

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "12"

. eststo sub2: xtmixed dem i.bonus bonus_order  || id: if type==2,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -19.596737  
Iteration 1:   log restricted-likelihood = -19.596494  
Iteration 2:   log restricted-likelihood = -19.596494  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         33
Group variable: id                              Number of groups  =         11

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =      14.05
Log restricted-likelihood = -19.596494          Prob > chi2       =     0.0009

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |         .5   .1356402     3.69   0.000     .2341501    .7658499
          bonus_order |  -.1309524   .1920815    -0.68   0.495    -.5074253    .2455205
                _cons |   .0833333   .1779209     0.47   0.640    -.2653852    .4320519
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .2212279   .1048617      .0873719    .5601549
-----------------------------+------------------------------------------------
                sd(Residual) |   .3673154    .056678      .2714538    .4970298
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 1.85          Prob >= chibar2 = 0.0870

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals' 

added macro:
        e(individuals) : "11"

. eststo sub3: xtmixed dem i.bonus bonus_order  || id: if type==3,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -29.466679  
Iteration 1:   log restricted-likelihood = -29.466581  
Iteration 2:   log restricted-likelihood = -29.466581  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         69
Group variable: id                              Number of groups  =         23

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =      11.38
Log restricted-likelihood = -29.466581          Prob > chi2       =     0.0034

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |  -.2608696   .0788491    -3.31   0.001     -.415411   -.1063282
          bonus_order |   .0732323   .1114045     0.66   0.511    -.1451165    .2915812
                _cons |   .9617918    .096117    10.01   0.000      .773406    1.150178
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .1986239   .0578471      .1122349    .3515078
-----------------------------+------------------------------------------------
                sd(Residual) |   .3087557   .0325457      .2511253    .3796117
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 5.02          Prob >= chibar2 = 0.0125

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "23"

. eststo sub4: xtmixed dem i.bonus bonus_order  || id: if type==4,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -17.148897  
Iteration 1:   log restricted-likelihood = -17.135093  
Iteration 2:   log restricted-likelihood = -17.135079  
Iteration 3:   log restricted-likelihood = -17.135079  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         54
Group variable: id                              Number of groups  =         18

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =       4.16
Log restricted-likelihood = -17.135079          Prob > chi2       =     0.1249

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |  -.1666667   .0845154    -1.97   0.049    -.3323139   -.0010195
          bonus_order |        .05   .0960143     0.52   0.603    -.1381846    .2381846
                _cons |   .9777778    .085275    11.47   0.000     .8106419    1.144914
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .1113588   .0719082      .0314105    .3947976
-----------------------------+------------------------------------------------
                sd(Residual) |     .29277   .0349927      .2316267    .3700536
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 0.74          Prob >= chibar2 = 0.1944

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "18"

. 
. 
. coefplot (sub1, label (Box I)) (sub2, label (Box III))  (sub3, label (Box II))  (sub4, label (Box IV)) , keep(1.bonus) coeflabels(1.bonus = "Pooled Bon
> us")  byopts(xrescale) xline(0, lpattern(dash) lcolor(gs3)) xtitle("Regression estimated impact relative to baseline in pp") grid(none) levels(95 90) c
> iopts(lwidth(0.8 2)  lcolor(*1 *.3) recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", "")))) msize(3pt) msymbol(D) 
> mlabsize(8pt) mlabposition(1) mlabgap(-0.4) subtitle(, size(6pt) lstyle(none) margin(medium) nobox justification(left)  bmargin(top))  xla(-50(25)75, n
> ogrid)  xsize(3.465) ysize(2) scale(1.2)

. gr_edit style.editstyle margin(vsmall) editcopy

. gr save  "$working_ANALYSIS\results\intermediate\figure5_boxes_subgroups.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\intermediate\figure5_boxes_subgroups.gph sav
> ed)

. gr export "$working_ANALYSIS\results\figures\figure5_boxes_subgroups.tif", replace width(4000) 
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\figures\figure5_boxes_subgroups.tif written 
> in TIFF format)

. 
. 
. *Figure 6.      Villagers' satisfaction with their leader’s performance outside the lab
. preserve

. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. 
. bysort group_leader_type: sum satisfaction_leader

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = True-democrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |        246    3.827134    .6666073       1.75          5

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Pseudo-democrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         54    3.626852    .7306603        2.2        4.6

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Paternalist

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         30    3.844167    .5952282        2.6       4.75

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Autocrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         36       3.725    .5777419        2.6        4.5

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Benevolent-Autocrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         18    3.816667    .7085611        1.4        4.5


. reg z_satisfaction leader_type2 leader_type3 leader_type4 leader_type5 i.village, vce(robust)

Linear regression                               Number of obs     =        384
                                                F(35, 348)        =       1.58
                                                Prob > F          =     0.0230
                                                R-squared         =     0.1271
                                                Root MSE          =     .98017

------------------------------------------------------------------------------------
                   |               Robust
    z_satisfaction |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------------+----------------------------------------------------------------
      leader_type2 |  -.6611698    .208875    -3.17   0.002    -1.071986   -.2503536
      leader_type3 |  -.2920114    .214623    -1.36   0.175    -.7141328    .1301101
      leader_type4 |  -.4457453    .220525    -2.02   0.044    -.8794748   -.0120157
      leader_type5 |   -.568856   .3146655    -1.81   0.071    -1.187741    .0500294
                   |
           village |
            Ehafo  |   .2816941   .4406489     0.64   0.523     -.584976    1.148364
           Endola  |   .1647852   .4608402     0.36   0.721    -.7415971    1.071168
        Epatululo  |   .5070494   .4781111     1.06   0.290    -.4333015      1.4474
            Epuku  |  -.2703627   .4603237    -0.59   0.557    -1.175729     .635004
            Etale  |  -.2734926   .5295272    -0.52   0.606    -1.314969    .7679837
         Etilashi  |   .0657285   .5410536     0.12   0.903    -.9984181    1.129875
           Etomba  |  -.3036037   .4349979    -0.70   0.486     -1.15916     .551952
        Ohangwena  |   .3807507   .4368951     0.87   0.384    -.4785364    1.240038
       Oipapakane  |   .3098634   .4577618     0.68   0.499    -.5904644    1.210191
          Okadiwa  |   .5539985   .4237442     1.31   0.192    -.2794234     1.38742
          Okafitu  |   .2875579   .4625024     0.62   0.535    -.6220938     1.19721
           Okakwa  |   .2336439   .4366642     0.54   0.593    -.6251892    1.092477
         Okangudi  |   .5778497   .4702996     1.23   0.220    -.3471375    1.502837
        Okapundja  |     .66628   .4807188     1.39   0.167    -.2791997     1.61176
          Okatale  |    .200963   .4460237     0.45   0.653    -.6762783    1.078204
         Okelemba  |   .2190954   .4276179     0.51   0.609    -.6219453    1.060136
         Omahenge  |   .4006316   .4696826     0.85   0.394    -.5231421    1.324405
         Omakango  |  -.0594688   .4918662    -0.12   0.904    -1.026873    .9079357
         Omalyata  |   .3449401    .460573     0.75   0.454    -.5609169    1.250797
          Omaputo  |  -.1502369   .4760151    -0.32   0.752    -1.086466    .7859916
          Omukuve  |   .3574597   .4513268     0.79   0.429    -.5302117    1.245131
Omutwe Oshimbungu  |   .1752763   .4832945     0.36   0.717    -.7752695    1.125822
         Onangwhe  |   .7987806   .4775939     1.67   0.095    -.1405532    1.738114
    Onekwaya East  |   .7645445   .4521417     1.69   0.092    -.1247297    1.653819
    Onekwaya West  |  -.3536827   .5304743    -0.67   0.505    -1.397022    .6896564
         Onengali  |   .8570611   .4781265     1.79   0.074    -.0833201    1.797442
          Ongonga  |   .3030627   .5027781     0.60   0.547    -.6858034    1.291929
        Onheleiwa  |   1.259779    .452481     2.78   0.006     .3698379    2.149721
      Oshikwiyu 1  |   .9679903   .4408178     2.20   0.029     .1009881    1.834993
      Oshikwiyu 2  |    .046949   .4978082     0.09   0.925    -.9321423     1.02604
          Ouhongo  |   .7186967   .4882986     1.47   0.142     -.241691    1.679084
                   |
             _cons |  -.1293054     .36416    -0.36   0.723    -.8455369    .5869261
------------------------------------------------------------------------------------

. eststo reg_satisfaction: reg satisfaction_leader rule_base2 rule_base3 i.village, vce(robust)

Linear regression                               Number of obs     =        384
                                                F(33, 350)        =       1.62
                                                Prob > F          =     0.0193
                                                R-squared         =     0.1226
                                                Root MSE          =     .65223

------------------------------------------------------------------------------------
                   |               Robust
satisfaction_lea~r |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------------+----------------------------------------------------------------
        rule_base2 |   -.358179   .1199986    -2.98   0.003    -.5941881   -.1221699
        rule_base3 |  -.2967078   .1229121    -2.41   0.016     -.538447   -.0549687
                   |
           village |
            Ehafo  |   .1874999   .2924635     0.64   0.522    -.3877071     .762707
           Endola  |   .1915895   .3034727     0.63   0.528      -.40527     .788449
        Epatululo  |      .3375   .3173276     1.06   0.288    -.2866089    .9616089
            Epuku  |  -.2209105   .3065403    -0.72   0.472    -.8238032    .3819822
            Etale  |  -.2229939   .3493882    -0.64   0.524    -.9101583    .4641706
         Etilashi  |   .0437499   .3591033     0.12   0.903    -.6625218    .7500217
           Etomba  |  -.2020834   .2887129    -0.70   0.484    -.7699139    .3657471
        Ohangwena  |   .3353394   .2888458     1.16   0.246    -.2327523    .9034312
       Oipapakane  |   .2062499   .3038216     0.68   0.498    -.3912957    .8037955
          Okadiwa  |     .36875   .2812437     1.31   0.191    -.1843903    .9218902
          Okafitu  |   .1504372   .3234825     0.47   0.642    -.4857769    .7866513
           Okakwa  |   .2374228   .2795042     0.85   0.396    -.3122963     .787142
         Okangudi  |   .3436728   .3049252     1.13   0.260    -.2560434     .943389
        Okapundja  |   .4025205   .2978602     1.35   0.177    -.1833004    .9883415
          Okatale  |   .1337705   .2947688     0.45   0.650    -.4459704    .7135114
         Okelemba  |   .1458333   .2838147     0.51   0.608    -.4123636    .7040302
         Omahenge  |   .2666666   .3117335     0.86   0.393      -.34644    .8797731
         Omakango  |  -.0395834   .3264571    -0.12   0.904    -.6816477    .6024809
         Omalyata  |   .2296039   .3002282     0.76   0.445    -.3608743    .8200822
          Omaputo  |        -.1   .3159365    -0.32   0.752    -.7213729    .5213728
          Omukuve  |   .2379372    .298702     0.80   0.426    -.3495395    .8254139
Omutwe Oshimbungu  |   .1166666   .3207679     0.36   0.716    -.5142085    .7475418
         Onangwhe  |   .5316872   .3109826     1.71   0.088    -.0799425    1.143317
    Onekwaya East  |   .5498457   .3088478     1.78   0.076    -.0575854    1.157277
    Onekwaya West  |  -.2354167   .3520817    -0.67   0.504    -.9278786    .4570452
         Onengali  |   .5295267   .3106328     1.70   0.089    -.0814151    1.140468
          Ongonga  |   .1607767   .3359346     0.48   0.633    -.4999276    .8214811
        Onheleiwa  |     .75661   .2810407     2.69   0.007      .203869    1.309351
      Oshikwiyu 1  |   .6852623   .3040821     2.25   0.025     .0872042     1.28332
      Oshikwiyu 2  |     .03125   .3304008     0.09   0.925    -.6185708    .6810707
          Ouhongo  |   .4374228    .320296     1.37   0.173    -.1925242     1.06737
                   |
             _cons |   3.704167    .241697    15.33   0.000     3.228805    4.179528
------------------------------------------------------------------------------------

. est store satisfaction

. 
. coefplot (satisfaction), keep(rule_base2 rule_base3) coeflabels(rule_base2 = "Baseline: Pseudo-democratic rule" rule_base3 = "Baseline: Autocratic rule
> ") xline(0, lpattern(dash) lcolor(gs3))  xtitle("Regression estimated imppact relative to 'Baseline: Democratic rule'") xla(-1(0.25)0.25, nogrid) grid(
> none) levels(95 90) ciopts(lwidth(0.3 1) lcolor(*.8 *.2)   recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", ""))))
>  mlabsize(9pt) mlabposition(12) mlabgap(-0.1) 
(note:  named style medthin not found in class linestyle, default attributes used)

. gr save "$working_ANALYSIS/results/intermediate/figure6_satisfaction_villagers.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure6_satisfaction_villagers.
> gph saved)

. gr export "$working_ANALYSIS/results/figures/figure6_satisfaction_villagers.tif", replace width(3465)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure6_satisfaction_villagers.tif w
> ritten in TIFF format)

. 
. restore

. 
. 
. 
. 
. 
. *--------------------------------------------------------------
. * Analysis for supplementary online materials (SOM)
. *--------------------------------------------------------------
. *Table S1.      Time schedule of field implementation
. *created in word
. 
. 
. * Figure S1.    Minimal detectable effect size: Within-subject design
. *power analysis: MDES with 80% power
. power pairedproportions 0.64, corr(0.39) diff(0(0.01)0.2) alpha(0.05 0.1) n(64)

Estimated power for a two-sample paired-proportions test
Large-sample McNemar's test
Ho: p+1 = p1+  versus  Ha: p+1 != p1+

  +-----------------------------------------------------------------+
  |   alpha   power       N   delta  pmarg1  pmarg2    corr    diff |
  |-----------------------------------------------------------------|
  |     .05       .       .       .     .64     .64     .39       0 |
  |     .05  .05259      64     .01     .64     .65     .39     .01 |
  |     .05  .06045      64     .02     .64     .66     .39     .02 |
  |     .05   .0738      64     .03     .64     .67     .39     .03 |
  |     .05   .0929      64     .04     .64     .68     .39     .04 |
  |     .05    .118      64     .05     .64     .69     .39     .05 |
  |     .05   .1494      64     .06     .64      .7     .39     .06 |
  |     .05    .187      64     .07     .64     .71     .39     .07 |
  |     .05    .231      64     .08     .64     .72     .39     .08 |
  |     .05   .2808      64     .09     .64     .73     .39     .09 |
  |     .05   .3359      64      .1     .64     .74     .39      .1 |
  |     .05   .3953      64     .11     .64     .75     .39     .11 |
  |     .05   .4578      64     .12     .64     .76     .39     .12 |
  |     .05    .522      64     .13     .64     .77     .39     .13 |
  |     .05   .5862      64     .14     .64     .78     .39     .14 |
  |     .05   .6487      64     .15     .64     .79     .39     .15 |
  |     .05   .7081      64     .16     .64      .8     .39     .16 |
  |     .05   .7628      64     .17     .64     .81     .39     .17 |
  |     .05   .8118      64     .18     .64     .82     .39     .18 |
  |     .05   .8545      64     .19     .64     .83     .39     .19 |
  |     .05   .8905      64      .2     .64     .84     .39      .2 |
  |     .05       .      64       .     .64     .64     .39       0 |
  |      .1   .1038      64     .01     .64     .65     .39     .01 |
  |      .1   .1154      64     .02     .64     .66     .39     .02 |
  |      .1   .1346      64     .03     .64     .67     .39     .03 |
  |      .1   .1616      64     .04     .64     .68     .39     .04 |
  |      .1    .196      64     .05     .64     .69     .39     .05 |
  |      .1   .2376      64     .06     .64      .7     .39     .06 |
  |      .1   .2857      64     .07     .64     .71     .39     .07 |
  |      .1   .3395      64     .08     .64     .72     .39     .08 |
  |      .1   .3979      64     .09     .64     .73     .39     .09 |
  |      .1   .4595      64      .1     .64     .74     .39      .1 |
  |      .1   .5229      64     .11     .64     .75     .39     .11 |
  |      .1   .5864      64     .12     .64     .76     .39     .12 |
  |      .1   .6484      64     .13     .64     .77     .39     .13 |
  |      .1   .7072      64     .14     .64     .78     .39     .14 |
  |      .1   .7615      64     .15     .64     .79     .39     .15 |
  |      .1   .8104      64     .16     .64      .8     .39     .16 |
  |      .1   .8529      64     .17     .64     .81     .39     .17 |
  |      .1   .8889      64     .18     .64     .82     .39     .18 |
  |      .1   .9184      64     .19     .64     .83     .39     .19 |
  |      .1   .9419      64      .2     .64     .84     .39      .2 |
  +-----------------------------------------------------------------+
   Warning: some of the computations failed; execute each computation separately to see the specific error

. *MDES alpha 0.05 --> d=0.18, alpha 0.1 --> d=0.16
. 
. power pairedproportions 0.64, corr(0.39) diff(0(0.01)0.2) n(64) table(alpha power beta N delta:"Difference in proportion to select democratic rule") gr
> aph(ytitle(Effect size) xline(0.8, lcolor(538b) lpattern(dash)) yline(0.178, lpattern(dash)) title("") legend(ring(1) rows(1) pos(6)) xdimension(power)
>  xla(0(0.1)1, nogrid) yla(0(0.02)0.2, nogrid) ydimension(diff)) 

Estimated power for a two-sample paired-proportions test
Large-sample McNemar's test
Ho: p+1 = p1+  versus  Ha: p+1 != p1+

  +------------------------------------------------------------------------------------+
  |   alpha   power    beta       N Difference in proportion to select democratic rule |
  |------------------------------------------------------------------------------------|
  |     .05       .       .       .                                                  . |
  |     .05  .05259   .9474      64                                                .01 |
  |     .05  .06045   .9396      64                                                .02 |
  |     .05   .0738   .9262      64                                                .03 |
  |     .05   .0929   .9071      64                                                .04 |
  |     .05    .118    .882      64                                                .05 |
  |     .05   .1494   .8506      64                                                .06 |
  |     .05    .187    .813      64                                                .07 |
  |     .05    .231    .769      64                                                .08 |
  |     .05   .2808   .7192      64                                                .09 |
  |     .05   .3359   .6641      64                                                 .1 |
  |     .05   .3953   .6047      64                                                .11 |
  |     .05   .4578   .5422      64                                                .12 |
  |     .05    .522    .478      64                                                .13 |
  |     .05   .5862   .4138      64                                                .14 |
  |     .05   .6487   .3513      64                                                .15 |
  |     .05   .7081   .2919      64                                                .16 |
  |     .05   .7628   .2372      64                                                .17 |
  |     .05   .8118   .1882      64                                                .18 |
  |     .05   .8545   .1455      64                                                .19 |
  |     .05   .8905   .1095      64                                                 .2 |
  +------------------------------------------------------------------------------------+
   Warning: some of the computations failed; execute each computation separately to see the specific error
(note:  named style 538b not found in class color, default attributes used)

. gr save  "$working_ANALYSIS/results/intermediate/figureS1_MDES.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figureS1_MDES.gph saved)

. gr export "$working_ANALYSIS/results/figures/figureS1_MDES.tif", replace width(4000)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figureS1_MDES.tif written in TIFF fo
> rmat)

. 
. 
. *Figure S2.     Equivalence tests
. *created in R with the openly accessible  package ‘TOSTER’ by Caldwell (2022).
. 
. 
. preserve

. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. 
. 
. * Table S2.     Participants characteristics
. global controls2 male age education rootedness pca_wealth d3a d3c 

. iebaltab $controls2, grpvar(id1) rowvarlabels format(%9.2f) stdev ftest fmissok tblnonote save("$working_ANALYSIS/results/tables/tableS2_sample_charact
> eristics.xlsx") replace
    Balance table saved to: C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for
        democracy\analysis/results/tables/tableS2_sample_characteristics.xlsx

. prtest male, by(villager)

Two-sample test of proportions                     0: Number of obs =       64
                                                   1: Number of obs =      383
------------------------------------------------------------------------------
       Group |       Mean   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
           0 |     .71875   .0562012                      .6085978    .8289022
           1 |    .381201   .0248172                      .3325603    .4298418
-------------+----------------------------------------------------------------
        diff |    .337549   .0614366                      .2171353    .4579626
             |  under Ho:   .0668463     5.05   0.000
------------------------------------------------------------------------------
        diff = prop(0) - prop(1)                                  z =   5.0496
    Ho: diff = 0

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(Z < z) = 1.0000         Pr(|Z| > |z|) = 0.0000          Pr(Z > z) = 0.0000

. foreach x of varlist age education rootedness pca_wealth d3a d3c {
  2.         ranksum `x', by(villager)
  3.         }

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64       21611       14336
           1 |      383       78517       85792
-------------+---------------------------------
    combined |      447      100128      100128

unadjusted variance   915114.67
adjustment for ties     -459.84
                     ----------
adjusted variance     914654.83

Ho: age(villager==0) = age(villager==1)
             z =   7.607
    Prob > |z| =   0.0000

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       63     12355.5       14049
           1 |      382     86879.5       85186
-------------+---------------------------------
    combined |      445       99235       99235

unadjusted variance   894453.00
adjustment for ties   -19195.80
                     ----------
adjusted variance     875257.20

Ho: educat~n(villager==0) = educat~n(villager==1)
             z =  -1.810
    Prob > |z| =   0.0703

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64       11164       14368
           1 |      384       89412       86208
-------------+---------------------------------
    combined |      448      100576      100576

unadjusted variance   919552.00
adjustment for ties  -239244.82
                     ----------
adjusted variance     680307.18

Ho: rooted~s(villager==0) = rooted~s(villager==1)
             z =  -3.885
    Prob > |z| =   0.0001

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64     18992.5       13824
           1 |      367     74103.5       79272
-------------+---------------------------------
    combined |      431       93096       93096

unadjusted variance   845568.00
adjustment for ties    -2070.36
                     ----------
adjusted variance     843497.64

Ho: pca_we~h(villager==0) = pca_we~h(villager==1)
             z =   5.628
    Prob > |z| =   0.0000

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64       18709       14176
           1 |      378       79194       83727
-------------+---------------------------------
    combined |      442       97903       97903

unadjusted variance   893088.00
adjustment for ties   -66216.48
                     ----------
adjusted variance     826871.52

Ho: d3a(villager==0) = d3a(villager==1)
             z =   4.985
    Prob > |z| =   0.0000

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64     17714.5       14176
           1 |      378     80188.5       83727
-------------+---------------------------------
    combined |      442       97903       97903

unadjusted variance   893088.00
adjustment for ties   -29599.40
                     ----------
adjusted variance     863488.60

Ho: d3c(villager==0) = d3c(villager==1)
             z =   3.808
    Prob > |z| =   0.0001

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

. reg id1 $controls2 if id1 !=0 // chiefs vs villagers

      Source |       SS           df       MS      Number of obs   =       394
-------------+----------------------------------   F(7, 386)       =     29.30
       Model |  10.2010544         7  1.45729349   Prob > F        =    0.0000
    Residual |  19.1999608       386  .049740831   R-squared       =    0.3470
-------------+----------------------------------   Adj R-squared   =    0.3351
       Total |  29.4010152       393  .074811744   Root MSE        =    .22303

------------------------------------------------------------------------------
         id1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        male |  -.1296617   .0236755    -5.48   0.000    -.1762108   -.0831127
         age |  -.0066006   .0007591    -8.69   0.000    -.0080931    -.005108
   education |  -.0078332   .0040656    -1.93   0.055    -.0158267    .0001603
  rootedness |   .0907614    .039103     2.32   0.021     .0138798     .167643
  pca_wealth |  -.0293369   .0074095    -3.96   0.000     -.043905   -.0147688
         d3a |    .000388   .0006738     0.58   0.565    -.0009367    .0017128
         d3c |    -.00293   .0008376    -3.50   0.001    -.0045769   -.0012831
       _cons |   2.269217   .0634849    35.74   0.000     2.144398    2.394037
------------------------------------------------------------------------------

. reg id1 $controls2 if id1 !=1 // DEL vs villagers

      Source |       SS           df       MS      Number of obs   =       393
-------------+----------------------------------   F(7, 385)       =      4.80
       Model |  9.17075049         7  1.31010721   Prob > F        =    0.0000
    Residual |  105.048079       385  .272852153   R-squared       =    0.0803
-------------+----------------------------------   Adj R-squared   =    0.0636
       Total |   114.21883       392  .291374565   Root MSE        =    .52235

------------------------------------------------------------------------------
         id1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        male |  -.0322257   .0555344    -0.58   0.562    -.1414145    .0769631
         age |  -.0097613   .0019009    -5.13   0.000    -.0134988   -.0060238
   education |  -.0229965    .009749    -2.36   0.019    -.0421644   -.0038286
  rootedness |   .1147954   .0918885     1.25   0.212    -.0658707    .2954616
  pca_wealth |   -.039424   .0183658    -2.15   0.032    -.0755339   -.0033141
         d3a |   .0002838   .0016126     0.18   0.860    -.0028868    .0034543
         d3c |  -.0012367   .0024103    -0.51   0.608    -.0059757    .0035024
       _cons |   2.337824   .1550281    15.08   0.000     2.033017    2.642632
------------------------------------------------------------------------------

. * Leaders only
. global controls1 male age education rootedness pca_wealth d3a d3c  married experience motivation helpauthentic

. iebaltab $controls1, grpvar(TL) rowvarlabels format(%9.2f) stdev ftest fmissok tblnonote save("$working_ANALYSIS/results/tables/tableS2_leaders_charact
> eristics.xlsx") replace
    Balance table saved to: C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for
        democracy\analysis/results/tables/tableS2_leaders_characteristics.xlsx

. reg TL $controls1

      Source |       SS           df       MS      Number of obs   =        63
-------------+----------------------------------   F(11, 51)       =      4.42
       Model |  7.68364189        11  .698512899   Prob > F        =    0.0001
    Residual |  8.06238986        51  .158086076   R-squared       =    0.4880
-------------+----------------------------------   Adj R-squared   =    0.3775
       Total |  15.7460317        62  .253968254   Root MSE        =     .3976

-------------------------------------------------------------------------------
           TL |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
--------------+----------------------------------------------------------------
         male |   .5756709   .1515165     3.80   0.000     .2714888    .8798529
          age |  -.0013323    .004849    -0.27   0.785    -.0110671    .0084025
    education |   .0115139   .0171882     0.67   0.506    -.0229929    .0460208
   rootedness |  -.3209752    .192027    -1.67   0.101    -.7064855    .0645352
   pca_wealth |   .0641615   .0340908     1.88   0.066    -.0042786    .1326016
          d3a |  -.0022809   .0048669    -0.47   0.641    -.0120516    .0074897
          d3c |   .0026512     .00324     0.82   0.417    -.0038534    .0091558
      married |  -.1502687   .1648473    -0.91   0.366    -.4812135     .180676
   experience |   .0104446   .0052226     2.00   0.051    -.0000402    .0209294
   motivation |  -.1329139   .1301428    -1.02   0.312    -.3941865    .1283587
helpauthentic |  -.0045327   .0140829    -0.32   0.749    -.0328052    .0237399
        _cons |   .3461321   .3151008     1.10   0.277    -.2864591    .9787234
-------------------------------------------------------------------------------

. 
. 
. *Table S3.      Summary statistics of  main outcomes for leaders
. * Stage 1 rule choices by leaders
. estpost tabulate rule1 

       rule1 |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
  Democratic |        41    64.0625    64.0625 
Pseudo-dem~c |        14     21.875    85.9375 
  Autocratic |         9    14.0625        100 
-------------+---------------------------------
       Total |        64        100            

. esttab using "$output\tableS3_outcome-variables.rtf", cell("b pct(fmt(0)) cumpct(fmt(0))") unstack noobs replace
(output written to \tableS3_outcome-variables.rtf)

. estpost tabulate rule5

       rule5 |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
  Democratic |        41    64.0625    64.0625 
Pseudo-dem~c |        20      31.25    95.3125 
  Autocratic |         3     4.6875        100 
-------------+---------------------------------
       Total |        64        100            

. esttab using "$output\tableS3_outcome-variables.rtf", cell("b pct(fmt(0)) cumpct(fmt(0))") unstack noobs append
(output written to \tableS3_outcome-variables.rtf)

. estpost tabulate rule6

       rule6 |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
  Democratic |        41    64.0625    64.0625 
Pseudo-dem~c |        21    32.8125     96.875 
  Autocratic |         2      3.125        100 
-------------+---------------------------------
       Total |        64        100            

. esttab using "$output\tableS3_outcome-variables.rtf", cell("b pct(fmt(0)) cumpct(fmt(0))") unstack noobs append
(output written to \tableS3_outcome-variables.rtf)

. 
. * Stage 2 distribution decisions by leaders
. estpost tabulate  vote1  if id <65 & rule1==1

       vote1 |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
Distributi~A |        19   46.34146   46.34146 
Distributi~B |        22   53.65854        100 
-------------+---------------------------------
       Total |        41        100            

. bysort rule1: tab vote1 if id <65

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule1 = Democratic

    Benefit to |
 leader at the |
    expense of |
     villagers |      Freq.     Percent        Cum.
---------------+-----------------------------------
Distribution A |         19       46.34       46.34
Distribution B |         22       53.66      100.00
---------------+-----------------------------------
         Total |         41      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule1 = Pseudo-democratic

    Benefit to |
 leader at the |
    expense of |
     villagers |      Freq.     Percent        Cum.
---------------+-----------------------------------
Distribution A |          9       64.29       64.29
Distribution B |          5       35.71      100.00
---------------+-----------------------------------
         Total |         14      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule1 = Autocratic

    Benefit to |
 leader at the |
    expense of |
     villagers |      Freq.     Percent        Cum.
---------------+-----------------------------------
Distribution A |          6       66.67       66.67
Distribution B |          3       33.33      100.00
---------------+-----------------------------------
         Total |          9      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule1 = .
no observations


. bysort rule5: tab vote5 if id <65

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule5 = Democratic

Small bonus |
  (+10) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |         17       41.46       41.46
    Chose B |         24       58.54      100.00
------------+-----------------------------------
      Total |         41      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule5 = Pseudo-democratic

Small bonus |
  (+10) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |         15       75.00       75.00
    Chose B |          5       25.00      100.00
------------+-----------------------------------
      Total |         20      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule5 = Autocratic

Small bonus |
  (+10) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |          2       66.67       66.67
    Chose B |          1       33.33      100.00
------------+-----------------------------------
      Total |          3      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule5 = .
no observations


. bysort rule6: tab vote6 if id <65

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule6 = Democratic

  Big bonus |
 (+100) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |         23       56.10       56.10
    Chose B |         18       43.90      100.00
------------+-----------------------------------
      Total |         41      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule6 = Pseudo-democratic

  Big bonus |
 (+100) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |         14       66.67       66.67
    Chose B |          7       33.33      100.00
------------+-----------------------------------
      Total |         21      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule6 = Autocratic

  Big bonus |
 (+100) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |          1       50.00       50.00
    Chose B |          1       50.00      100.00
------------+-----------------------------------
      Total |          2      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule6 = .
no observations


. 
. restore

. 
. 
. *Figure S3.     Order effects on rule choice in bonus rounds
. bysort bonus_size bonus_order: tab rule

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Baseline, bonus_order = Base-Large-Small

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         21       70.00       70.00
Pseudo-democratic |          4       13.33       83.33
       Autocratic |          5       16.67      100.00
------------------+-----------------------------------
            Total |         30      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Baseline, bonus_order = Base-Small-Large

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         20       58.82       58.82
Pseudo-democratic |         10       29.41       88.24
       Autocratic |          4       11.76      100.00
------------------+-----------------------------------
            Total |         34      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Small Bonus, bonus_order = Base-Large-Small

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         20       66.67       66.67
Pseudo-democratic |          8       26.67       93.33
       Autocratic |          2        6.67      100.00
------------------+-----------------------------------
            Total |         30      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Small Bonus, bonus_order = Base-Small-Large

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         21       61.76       61.76
Pseudo-democratic |         12       35.29       97.06
       Autocratic |          1        2.94      100.00
------------------+-----------------------------------
            Total |         34      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Large Bonus, bonus_order = Base-Large-Small

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         19       63.33       63.33
Pseudo-democratic |         10       33.33       96.67
       Autocratic |          1        3.33      100.00
------------------+-----------------------------------
            Total |         30      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Large Bonus, bonus_order = Base-Small-Large

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         22       64.71       64.71
Pseudo-democratic |         11       32.35       97.06
       Autocratic |          1        2.94      100.00
------------------+-----------------------------------
            Total |         34      100.00


. catplot rule bonus_order if decision > 1, over(bonus_size) percent(bonus_order bonus_size ) asyvar recast(bar) yla(0(20)100) blabel(bar, format(%9.0f) 
> pos(center)  gap(0.1)) b1title("") legend(ring(0) pos(12) rows(1))

. gr export "$working_ANALYSIS/results/figures/figureS3_order_effects.tif", replace width(5800)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figureS3_order_effects.tif written i
> n TIFF format)

. 
. tab rule bonus_order if decision > 1, chi2 exact

Enumerating sample-space combinations:
stage 3:  enumerations = 1
stage 2:  enumerations = 2
stage 1:  enumerations = 0

                  |      bonus_order
             rule | Base-Larg  Base-Smal |     Total
------------------+----------------------+----------
       Democratic |        39         43 |        82 
Pseudo-democratic |        18         23 |        41 
       Autocratic |         3          2 |         5 
------------------+----------------------+----------
            Total |        60         68 |       128 

          Pearson chi2(2) =   0.5069   Pr = 0.776
           Fisher's exact =                 0.811

. *no significant differences between the two randomization (small or large bonus round played first)
. 
. 
. *Table S4.      Sample splits by order of conditional payments
. *Order 1: Base-Large-Small
. eststo reg_time1: xtreg dem i.round if bonus_order==0, vce(robust)

Random-effects GLS regression                   Number of obs     =         90
Group variable: id                              Number of groups  =         30

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0033                                         max =          3

                                                Wald chi2(2)      =       0.39
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.8227

                                    (Std. Err. adjusted for 30 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |  -.0666667   .1077112    -0.62   0.536    -.2777768    .1444435
          3  |  -.0333333   .1026813    -0.32   0.745    -.2345849    .1679183
             |
       _cons |         .7   .0860689     8.13   0.000     .5313081    .8686919
-------------+----------------------------------------------------------------
     sigma_u |  .28432888
     sigma_e |  .38506605
         rho |  .35284281   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.14
         Prob > chi2 =    0.7127

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .71265666

. eststo reg_time2: xtreg fake i.round if bonus_order==0, vce(robust)

Random-effects GLS regression                   Number of obs     =         90
Group variable: id                              Number of groups  =         30

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0374                                         max =          3

                                                Wald chi2(2)      =       5.22
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.0735

                                    (Std. Err. adjusted for 30 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |         .2   .0894191     2.24   0.025     .0247418    .3752582
          3  |   .1333333   .0936999     1.42   0.155    -.0503151    .3169818
             |
       _cons |   .1333333   .0638457     2.09   0.037      .008198    .2584686
-------------+----------------------------------------------------------------
     sigma_u |  .23812808
     sigma_e |  .35665539
         rho |  .30833333   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.48
         Prob > chi2 =    0.4882

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .48820502

. eststo reg_time3: xtreg dic i.round if bonus_order==0, vce(robust)

Random-effects GLS regression                   Number of obs     =         90
Group variable: id                              Number of groups  =         30

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0396                                         max =          3

                                                Wald chi2(2)      =       2.82
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.2441

                                    (Std. Err. adjusted for 30 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |  -.1333333   .0801746    -1.66   0.096    -.2904728    .0238061
          3  |        -.1   .0743404    -1.35   0.179    -.2457044    .0457044
             |
       _cons |   .1666667   .0699955     2.38   0.017      .029478    .3038553
-------------+----------------------------------------------------------------
     sigma_u |  .07057509
     sigma_e |  .27473428
         rho |  .06190476   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.32
         Prob > chi2 =    0.5725

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .5724982

. 
. *Order 2: Base-Small-Large
. eststo reg_time4: xtreg dem i.round if bonus_order==1, vce(robust)

Random-effects GLS regression                   Number of obs     =        102
Group variable: id                              Number of groups  =         34

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0024                                         max =          3

                                                Wald chi2(2)      =       0.49
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.7814

                                    (Std. Err. adjusted for 34 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |   .0294118   .0903144     0.33   0.745    -.1476013    .2064248
          3  |   .0588235   .0846593     0.69   0.487    -.1071056    .2247527
             |
       _cons |   .5882353   .0865339     6.80   0.000      .418632    .7578386
-------------+----------------------------------------------------------------
     sigma_u |  .34985779
     sigma_e |  .34687297
         rho |  .50428397   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.14
         Prob > chi2 =    0.7118

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .71180246

. eststo reg_time5: xtreg fake i.round if bonus_order==1, vce(robust)

Random-effects GLS regression                   Number of obs     =        102
Group variable: id                              Number of groups  =         34

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0026                                         max =          3

                                                Wald chi2(2)      =       0.49
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.7814

                                    (Std. Err. adjusted for 34 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |   .0588235   .0846593     0.69   0.487    -.1071056    .2247527
          3  |   .0294118   .0903144     0.33   0.745    -.1476013    .2064248
             |
       _cons |   .2941176   .0801148     3.67   0.000     .1370955    .4511398
-------------+----------------------------------------------------------------
     sigma_u |  .32338083
     sigma_e |  .34687297
         rho |  .46499339   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.14
         Prob > chi2 =    0.7118

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .71180246

. eststo reg_time6: xtreg dic i.round if bonus_order==1, vce(robust)

Random-effects GLS regression                   Number of obs     =        102
Group variable: id                              Number of groups  =         34

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0313                                         max =          3

                                                Wald chi2(1)      =          .
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =          .

                                    (Std. Err. adjusted for 34 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |  -.0882353   .0656176    -1.34   0.179    -.2168434    .0403728
          3  |  -.0882353   .0656176    -1.34   0.179    -.2168434    .0403728
             |
       _cons |   .1176471   .0566497     2.08   0.038     .0066156    .2286785
-------------+----------------------------------------------------------------
     sigma_u |  .08618128
     sigma_e |  .21870357
         rho |   .1344086   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.00
         Prob > chi2 =    1.0000

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .99999998

. 
. esttab reg_time1 reg_time2 reg_time3 reg_time4 reg_time5 reg_time6 using "$working_ANALYSIS\results\Tables\tableS4_order_effects.rtf", keep(2.round 3.r
> ound _cons) label se(%4.3f)  transform(ln*: exp(@) exp(@)) mgroups("Order 1: Base-Large-Small" "Order 2: Base-Small-Large", pattern(1 0 0 1 0 0)) mtitl
> es("Democratic" "Pseudo-democratic" "Dictator" "Democratic" "Pseudo-democratic" "Dictator") b(%4.3f) stats(N N_clust r2_o joint_test, fmt(0 0 3 3) labe
> ls("Observations" "Cluster" "Overall R-squared" "Test: Round 2 = Round 3 (chi2)" )) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(weight:_cons "{break
> }{hline @width}")) nonotes addnotes("Notes: Robust standard errors in brackets: * p < 0.10, ** p < 0.05, *** p < 0.01.") replace 
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS4_order_effects.rt
> f)

. 
. 
. *Table S5. Main treatment effects
. *stored before in main analysis
. 
. *Table S6.      Treatment effects seperately for chiefs and DELs
. *DEL only
. eststo reg_del1: xtprobit dem bonus bonus_order if TL==0, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =   -64.8446  
Iteration 1:   log pseudolikelihood = -64.702192  
Iteration 2:   log pseudolikelihood = -64.702189  

Fitting full model:

rho =  0.0     log pseudolikelihood = -64.702189
rho =  0.1     log pseudolikelihood = -61.662199
rho =  0.2     log pseudolikelihood = -59.214166
rho =  0.3     log pseudolikelihood = -57.207376
rho =  0.4     log pseudolikelihood =  -55.55525
rho =  0.5     log pseudolikelihood = -54.213309
rho =  0.6     log pseudolikelihood = -53.173382
rho =  0.7     log pseudolikelihood = -52.477597
rho =  0.8     log pseudolikelihood = -52.351833

Iteration 0:   log pseudolikelihood = -52.490192  
Iteration 1:   log pseudolikelihood = -52.001292  
Iteration 2:   log pseudolikelihood = -51.992761  
Iteration 3:   log pseudolikelihood = -51.992729  
Iteration 4:   log pseudolikelihood =  -51.99272  
Iteration 5:   log pseudolikelihood =  -51.99272  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =         96
Group variable: id                              Number of groups  =         32

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       0.39
Log pseudolikelihood  =  -51.99272              Prob > chi2       =     0.8215

                                    (Std. Err. adjusted for 32 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .2605404   .4349219     0.60   0.549    -.5918909    1.112972
 bonus_order |   .1143122   .8257757     0.14   0.890    -1.504178    1.732803
       _cons |    .289949   .6199466     0.47   0.640     -.925124    1.505022
-------------+----------------------------------------------------------------
    /lnsig2u |   1.297737     .65285                      .0181742    2.577299
-------------+----------------------------------------------------------------
     sigma_u |   1.913374   .6245732                      1.009129    3.627884
         rho |   .7854538   .1100157                      .5045434    .9293862
------------------------------------------------------------------------------

. eststo reg_del2: xtprobit fake bonus bonus_order if TL==0, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -58.811442  
Iteration 1:   log pseudolikelihood = -58.454962  
Iteration 2:   log pseudolikelihood = -58.454765  
Iteration 3:   log pseudolikelihood = -58.454765  

Fitting full model:

rho =  0.0     log pseudolikelihood = -58.454765
rho =  0.1     log pseudolikelihood = -56.253096
rho =  0.2     log pseudolikelihood = -54.581638
rho =  0.3     log pseudolikelihood =  -53.30674
rho =  0.4     log pseudolikelihood =  -52.35816
rho =  0.5     log pseudolikelihood = -51.709141
rho =  0.6     log pseudolikelihood = -51.378996
rho =  0.7     log pseudolikelihood = -51.476689

Iteration 0:   log pseudolikelihood = -51.370448  
Iteration 1:   log pseudolikelihood = -50.644871  
Iteration 2:   log pseudolikelihood = -50.611279  
Iteration 3:   log pseudolikelihood = -50.611225  
Iteration 4:   log pseudolikelihood = -50.611225  (backed up)

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =         96
Group variable: id                              Number of groups  =         32

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       1.05
Log pseudolikelihood  = -50.611225              Prob > chi2       =     0.5905

                                    (Std. Err. adjusted for 32 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .4046395    .406516     1.00   0.320    -.3921172    1.201396
 bonus_order |   .1025418   .6656078     0.15   0.878    -1.202026    1.407109
       _cons |  -1.224443   .5532215    -2.21   0.027    -2.308737   -.1401485
-------------+----------------------------------------------------------------
    /lnsig2u |   .7566546   .7113321                     -.6375307     2.15084
-------------+----------------------------------------------------------------
     sigma_u |   1.459841   .5192158                      .7270461    2.931224
         rho |    .680627    .154625                      .3458049    .8957472
------------------------------------------------------------------------------

. eststo reg_del3: xtprobit dic bonus bonus_order if TL==0, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -32.077708  
Iteration 1:   log pseudolikelihood = -30.077896  
Iteration 2:   log pseudolikelihood = -30.052602  
Iteration 3:   log pseudolikelihood = -30.052593  
Iteration 4:   log pseudolikelihood = -30.052593  

Fitting full model:

rho =  0.0     log pseudolikelihood = -30.052593
rho =  0.1     log pseudolikelihood = -29.725734
rho =  0.2     log pseudolikelihood = -29.680977
rho =  0.3     log pseudolikelihood = -29.882437

Iteration 0:   log pseudolikelihood = -29.680977  
Iteration 1:   log pseudolikelihood =  -29.18367  
Iteration 2:   log pseudolikelihood = -29.179457  
Iteration 3:   log pseudolikelihood = -29.179445  
Iteration 4:   log pseudolikelihood = -29.179445  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =         96
Group variable: id                              Number of groups  =         32

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       3.12
Log pseudolikelihood  = -29.179445              Prob > chi2       =     0.2098

                                    (Std. Err. adjusted for 32 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.8455278   .4834548    -1.75   0.080    -1.793082    .1020262
 bonus_order |  -.4412828   .5355935    -0.82   0.410    -1.491027    .6084612
       _cons |   -.904483   .4873957    -1.86   0.063    -1.859761     .050795
-------------+----------------------------------------------------------------
    /lnsig2u |  -.5058839   .7638826                     -2.003066    .9912985
-------------+----------------------------------------------------------------
     sigma_u |    .776513   .2965824                      .3673159    1.641564
         rho |   .3761589   .1792553                      .1188814    .7293443
------------------------------------------------------------------------------

. *TL only
. eststo reg_tl1: xtprobit dem bonus bonus_order if TL==1, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -59.624292  
Iteration 1:   log pseudolikelihood = -58.587478  
Iteration 2:   log pseudolikelihood = -58.586665  
Iteration 3:   log pseudolikelihood = -58.586665  

Fitting full model:

rho =  0.0     log pseudolikelihood = -58.586665
rho =  0.1     log pseudolikelihood = -57.430605
rho =  0.2     log pseudolikelihood = -56.694152
rho =  0.3     log pseudolikelihood = -56.296625
rho =  0.4     log pseudolikelihood = -56.205965
rho =  0.5     log pseudolikelihood = -56.428391

Iteration 0:   log pseudolikelihood = -56.206124  
Iteration 1:   log pseudolikelihood = -55.968731  
Iteration 2:   log pseudolikelihood = -55.963474  
Iteration 3:   log pseudolikelihood = -55.963468  
Iteration 4:   log pseudolikelihood = -55.963468  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =         96
Group variable: id                              Number of groups  =         32

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       1.34
Log pseudolikelihood  = -55.963468              Prob > chi2       =     0.5119

                                    (Std. Err. adjusted for 32 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.1729246    .349092    -0.50   0.620    -.8571324    .5112831
 bonus_order |   -.440891   .4305836    -1.02   0.306    -1.284819    .4030373
       _cons |   .9955562   .3871534     2.57   0.010     .2367494    1.754363
-------------+----------------------------------------------------------------
    /lnsig2u |  -.3566518   .7894161                     -1.903879    1.190575
-------------+----------------------------------------------------------------
     sigma_u |   .8366697   .3302403                      .3859917    1.813553
         rho |   .4117703   .1912088                      .1296701     .766844
------------------------------------------------------------------------------

. eststo reg_tl2: xtprobit fake bonus bonus_order if TL==1, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -56.072249  
Iteration 1:   log pseudolikelihood = -54.089786  
Iteration 2:   log pseudolikelihood =  -54.08234  
Iteration 3:   log pseudolikelihood =  -54.08234  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -54.08234
rho =  0.1     log pseudolikelihood = -52.725849
rho =  0.2     log pseudolikelihood = -51.796432
rho =  0.3     log pseudolikelihood = -51.206613
rho =  0.4     log pseudolikelihood = -50.917774
rho =  0.5     log pseudolikelihood = -50.927762

Iteration 0:   log pseudolikelihood = -50.917925  
Iteration 1:   log pseudolikelihood = -50.222479  
Iteration 2:   log pseudolikelihood = -50.221022  
Iteration 3:   log pseudolikelihood = -50.221022  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =         96
Group variable: id                              Number of groups  =         32

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       3.24
Log pseudolikelihood  = -50.221022              Prob > chi2       =     0.1979

                                    (Std. Err. adjusted for 32 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .5793174   .4072181     1.42   0.155    -.2188153     1.37745
 bonus_order |    .565667   .5143773     1.10   0.271    -.4424939    1.573828
       _cons |  -1.617239   .5380111    -3.01   0.003    -2.671722   -.5627569
-------------+----------------------------------------------------------------
    /lnsig2u |   .0973398   .7137629                      -1.30161    1.496289
-------------+----------------------------------------------------------------
     sigma_u |   1.049874   .3746805                      .5216257    2.113076
         rho |   .5243158   .1780187                      .2138942    .8170204
------------------------------------------------------------------------------

. eststo reg_tl3: xtprobit dic bonus bonus_order if TL==1, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =   -16.6277  
Iteration 1:   log pseudolikelihood = -15.147065  
Iteration 2:   log pseudolikelihood = -15.070779  
Iteration 3:   log pseudolikelihood = -15.070512  
Iteration 4:   log pseudolikelihood = -15.070512  

Fitting full model:

rho =  0.0     log pseudolikelihood = -15.070512
rho =  0.1     log pseudolikelihood = -15.193619

Iteration 0:   log pseudolikelihood = -15.193619  
Iteration 1:   log pseudolikelihood = -15.108766  
Iteration 2:   log pseudolikelihood = -15.092512  
Iteration 3:   log pseudolikelihood = -15.074223  
Iteration 4:   log pseudolikelihood = -15.071547  
Iteration 5:   log pseudolikelihood = -15.070758  
Iteration 6:   log pseudolikelihood = -15.070561  
Iteration 7:   log pseudolikelihood = -15.070521  
Iteration 8:   log pseudolikelihood = -15.070514  
Iteration 9:   log pseudolikelihood = -15.070514  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =         96
Group variable: id                              Number of groups  =         32

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       2.32
Log pseudolikelihood  = -15.070514              Prob > chi2       =     0.3134

                                    (Std. Err. adjusted for 32 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.8492874    .751461    -1.13   0.258    -2.322124     .623549
 bonus_order |   -.132417   .4375285    -0.30   0.762    -.9899572    .7251231
       _cons |  -1.246383    .847516    -1.47   0.141    -2.907483    .4147182
-------------+----------------------------------------------------------------
    /lnsig2u |  -12.88138   369894.7                     -724993.1    724967.3
-------------+----------------------------------------------------------------
     sigma_u |   .0015953   295.0476                             0           .
         rho |   2.54e-06   .9413778                             0           .
------------------------------------------------------------------------------

. 
. esttab reg_del1 reg_del2 reg_del3 reg_tl1 reg_tl2 reg_tl3 using "$working_ANALYSIS\results\Tables\tableS6_chiefs_DEL.rtf",  ci transform(ln*: exp(@) ex
> p(@))mtitles("Democratic" "Pseudo-democratic" "Dictator" "Democratic" "Pseudo-democratic" "Dictator") b(%4.2f) eqlabels("" "lnsig2u", none) stats(N N_g
>  sigma_u rho chi2 p, labels("N" "Individuals" "sigma_u" "rho" "Wald Chi2" "p" ) fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(
> weight:_cons "{break}{hline @width}")) replace 
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS6_chiefs_DEL.rtf not foun
> d)
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS6_chiefs_DEL.rtf)

. 
. 
. *Table S7.      Robustness check – Mixed effects regression
. * Treating participant as a random factor or use a simple linear model
. eststo reg_rb1: xtmixed dem bonus_2 bonus_3 bonus_order || id:, reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -122.20159  
Iteration 1:   log restricted-likelihood = -122.20159  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =        192
Group variable: id                              Number of groups  =         64

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(3)      =       0.26
Log restricted-likelihood = -122.20159          Prob > chi2       =     0.9674

------------------------------------------------------------------------------
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   3.05e-16   .0642931     0.00   1.000    -.1260121    .1260121
     bonus_3 |   1.94e-16   .0642931     0.00   1.000    -.1260121    .1260121
 bonus_order |  -.0490196   .0961789    -0.51   0.610    -.2375267    .1394875
       _cons |   .6666667   .0793229     8.40   0.000     .5111966    .8221367
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .3214593   .0420819      .2487116    .4154855
-----------------------------+------------------------------------------------
                sd(Residual) |   .3636965   .0229107      .3214537    .4114904
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 32.81         Prob >= chibar2 = 0.0000

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'´

added macro:
        e(individuals) : "64´"

. eststo reg_rb2: xtmixed fake bonus_2 bonus_3 bonus_order || id:,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -112.31687  
Iteration 1:   log restricted-likelihood = -112.31686  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =        192
Group variable: id                              Number of groups  =         64

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(3)      =       4.44
Log restricted-likelihood = -112.31686          Prob > chi2       =     0.2180

------------------------------------------------------------------------------
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |     .09375   .0621061     1.51   0.131    -.0279756    .2154756
     bonus_3 |    .109375   .0621061     1.76   0.078    -.0123506    .2311006
 bonus_order |    .079085   .0879801     0.90   0.369    -.0933529    .2515229
       _cons |   .1767361   .0734702     2.41   0.016     .0327373     .320735
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .2867424   .0396787      .2186275     .376079
-----------------------------+------------------------------------------------
                sd(Residual) |    .351325   .0221314      .3105191    .3974932
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 27.09         Prob >= chibar2 = 0.0000

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'´

added macro:
        e(individuals) : "64´"

. eststo reg_rb3: xtmixed dic bonus_2 bonus_3 bonus_order || id:,  reml 

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -19.252893  
Iteration 1:   log restricted-likelihood = -19.173457  
Iteration 2:   log restricted-likelihood =  -19.17325  
Iteration 3:   log restricted-likelihood =  -19.17325  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =        192
Group variable: id                              Number of groups  =         64

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(3)      =       8.02
Log restricted-likelihood =  -19.17325          Prob > chi2       =     0.0457

------------------------------------------------------------------------------
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |    -.09375   .0432786    -2.17   0.030    -.1785745   -.0089255
     bonus_3 |   -.109375   .0432786    -2.53   0.011    -.1941995   -.0245505
 bonus_order |  -.0300654   .0408055    -0.74   0.461    -.1100427    .0499119
       _cons |   .1565972   .0388449     4.03   0.000     .0804627    .2327318
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .0809833    .033279      .0361914    .1812114
-----------------------------+------------------------------------------------
                sd(Residual) |   .2448207   .0154223      .2163852     .276993
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 1.72          Prob >= chibar2 = 0.0946

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'´

added macro:
        e(individuals) : "64´"

. 
. esttab reg_rb1 reg_rb2 reg_rb3 using "$working_ANALYSIS\results\Tables\tableS7_rc_xtmixed.rtf",  ci transform(ln*: exp(@) exp(@))mtitles("Democratic" "
> Pseudo-democratic" "Dictator") b(%4.2f) eqlabels("" "sd(_cons)" "sd(Residual)", none) stats(N individuals chi2 p, labels("N" "Individuals" "Wald Chi2" 
> "p" ) fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(weight:_cons "{break}{hline @width}"))  replace 
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS7_rc_xtmixed.rtf not foun
> d)
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS7_rc_xtmixed.rtf)

. 
. 
. *Table S8.      Effects of bonus payments – Multinomial probit
. mprobit rule bonus_2 bonus_3 bonus_order, cluster(id)

Iteration 0:   log pseudolikelihood = -155.96029  
Iteration 1:   log pseudolikelihood =  -155.4905  
Iteration 2:   log pseudolikelihood = -155.48258  
Iteration 3:   log pseudolikelihood = -155.48257  

Multinomial probit regression                   Number of obs     =        192
                                                Wald chi2(6)      =       7.17
Log pseudolikelihood = -155.48257               Prob > chi2       =     0.3050

                                         (Std. Err. adjusted for 64 clusters in id)
-----------------------------------------------------------------------------------
                  |               Robust
             rule |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
Democratic        |  (base outcome)
------------------+----------------------------------------------------------------
Pseudo_democratic |
          bonus_2 |   .2766687   .2639683     1.05   0.295    -.2406998    .7940371
          bonus_3 |   .3177508   .2620714     1.21   0.225    -.1958997    .8314014
      bonus_order |   .3023284     .37056     0.82   0.415    -.4239558    1.028613
            _cons |  -1.060319   .3026821    -3.50   0.000    -1.653565   -.4670735
------------------+----------------------------------------------------------------
Autocratic        |
          bonus_2 |  -.6893181   .4174503    -1.65   0.099    -1.507506    .1288693
          bonus_3 |  -.9087708   .4965233    -1.83   0.067    -1.881939    .0643971
      bonus_order |  -.2001093   .4532496    -0.44   0.659    -1.088462    .6882436
            _cons |  -1.092758   .3556707    -3.07   0.002     -1.78986   -.3956564
-----------------------------------------------------------------------------------

. margins, dydx(bonus_2 bonus_3) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

dy/dx w.r.t. : bonus_2 bonus_3
1._predict   : Pr(rule==Democratic), predict(pr outcome(1))
2._predict   : Pr(rule==Pseudo-democratic), predict(pr outcome(2))
3._predict   : Pr(rule==Autocratic), predict(pr outcome(3))

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
bonus_2      |
    _predict |
          1  |  -.0132312   .0669098    -0.20   0.843    -.1443719    .1179095
          2  |   .0919615   .0625273     1.47   0.141    -.0305897    .2145127
          3  |  -.0787303   .0392565    -2.01   0.045    -.1556715   -.0017891
-------------+----------------------------------------------------------------
bonus_3      |
    _predict |
          1  |  -.0074632   .0664854    -0.11   0.911    -.1377722    .1228458
          2  |   .1096425   .0639036     1.72   0.086    -.0156063    .2348912
          3  |  -.1021792   .0486804    -2.10   0.036     -.197591   -.0067675
------------------------------------------------------------------------------

. est store bonus1

. outreg2 using  "$working_ANALYSIS/results/tables/tableS8_multi_probit", drop() addstat(Pseudo R-squared, e(r2_p))  adec(3) dec(3) word  replace
check eret list for the existence of e(r2_p)
C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/tables/tableS8_multi_probit.rtf
dir : seeout

. mprobit rule bonus bonus_order, cluster(id) level(90)

Iteration 0:   log pseudolikelihood = -156.05588  
Iteration 1:   log pseudolikelihood = -155.59802  
Iteration 2:   log pseudolikelihood = -155.59245  
Iteration 3:   log pseudolikelihood = -155.59245  

Multinomial probit regression                   Number of obs     =        192
                                                Wald chi2(4)      =       7.06
Log pseudolikelihood = -155.59245               Prob > chi2       =     0.1327

                                         (Std. Err. adjusted for 64 clusters in id)
-----------------------------------------------------------------------------------
                  |               Robust
             rule |      Coef.   Std. Err.      z    P>|z|     [90% Conf. Interval]
------------------+----------------------------------------------------------------
Democratic        |  (base outcome)
------------------+----------------------------------------------------------------
Pseudo_democratic |
            bonus |   .2975364   .2353973     1.26   0.206    -.0896577    .6847306
      bonus_order |   .3016971   .3706743     0.81   0.416    -.3080079     .911402
            _cons |  -1.059987   .3027227    -3.50   0.000    -1.557921   -.5620521
------------------+----------------------------------------------------------------
Autocratic        |
            bonus |  -.7899665   .4054291    -1.95   0.051    -1.456838    -.123095
      bonus_order |  -.2020001    .453668    -0.45   0.656    -.9482176    .5442174
            _cons |  -1.091828    .356129    -3.07   0.002    -1.677608   -.5060479
-----------------------------------------------------------------------------------

. margins, dydx(bonus) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

dy/dx w.r.t. : bonus
1._predict   : Pr(rule==Democratic), predict(pr outcome(1))
2._predict   : Pr(rule==Pseudo-democratic), predict(pr outcome(2))
3._predict   : Pr(rule==Autocratic), predict(pr outcome(3))

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
bonus        |
    _predict |
          1  |  -.0109626   .0598247    -0.18   0.855     -.128217    .1062917
          2  |    .100676    .056045     1.80   0.072    -.0091703    .2105222
          3  |  -.0897134   .0386461    -2.32   0.020    -.1654584   -.0139683
------------------------------------------------------------------------------

. est store bonus2

. outreg2 using "$working_ANALYSIS/results/tables/tableS8_multi_probit", drop() addstat(Pseudo R-squared, e(r2_p))  adec(3) dec(3) word  append
check eret list for the existence of e(r2_p)
C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/tables/tableS8_multi_probit.rtf
dir : seeout

. 
. 
. 
. *Table S9.      Subsample treatment effects on democratic rule choices
. esttab sub1 sub2 sub3 sub4 using "$working_ANALYSIS\results\tables\tableS9_social_norms_boxes_democratic.rtf",  label se(%4.3f)  transform(ln*: exp(@) 
> exp(@)) mgroups("Democratic Rule (=1)", pattern(1 0 0))   mtitles("Box 1" "Box 2" "Box 3" "Box 4") b(%4.3f) stats(N individuals chi2 p, labels("N" "Ind
> ividuals" "Wald Chi2" "p" ) fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(weight:_cons "{break}{hline @width}")) nonotes addno
> tes("Notes: Estimates are from multilevel panel regressions that account for the grouping structure of the data at the individual level (random interce
> pt). Standard errors with stars indicating the following significant levels: * p < 0.10, ** p < 0.05, *** p < 0.01") replace 
estimation result sub1 not found
r(111);

end of do-file

r(111);

. do "C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\scripts\03_analysis.do"

. *--------------------------------------------------------------------
. * SCRIPT: 03_analysis.do
. * PURPOSE: replicates the tables and figures and saves the results
. *--------------------------------------------------------------------
. 
. *--------------------------------------------------
. * STRUCTURE OF THE DO-FILE
. /*
> 
>         1) Analysis for main paper
>         2) Analysis for supplementary online materials
> */
. *--------------------------------------------------
. 
. 
. *--------------------------------------------------
. * (1) Analysis for main paper
. *--------------------------------------------------
. 
. 
. *Figure 1.      Normative expectations regarding group decision-making
. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. * Please indicate for each of the statement whether you disagree strongly, disagree a little, neither agree nor disagree, agree a little, or strongly a
> gree
.  global dem_norm c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12

.  foreach var of varlist $dem_norm {
  2.         replace `var'=0 if `var'==. 
  3.         }
(51 real changes made)
(53 real changes made)
(49 real changes made)
(113 real changes made)
(23 real changes made)
(61 real changes made)
(86 real changes made)
(26 real changes made)
(63 real changes made)
(52 real changes made)
(36 real changes made)
(32 real changes made)

.         
. foreach var of varlist $dem_norm {
  2.         gen new_`var'=1 if `var'==1
  3.         replace new_`var'=2 if `var'==2 
  4.         replace new_`var'=3 if `var'==0 
  5.         replace new_`var'=4 if `var'==3
  6.         replace new_`var'=5 if `var'==4
  7.         }
(372 missing values generated)
(8 real changes made)
(51 real changes made)
(19 real changes made)
(294 real changes made)
(353 missing values generated)
(20 real changes made)
(53 real changes made)
(43 real changes made)
(237 real changes made)
(390 missing values generated)
(10 real changes made)
(49 real changes made)
(30 real changes made)
(301 real changes made)
(353 missing values generated)
(22 real changes made)
(113 real changes made)
(30 real changes made)
(188 real changes made)
(399 missing values generated)
(4 real changes made)
(23 real changes made)
(9 real changes made)
(363 real changes made)
(191 missing values generated)
(13 real changes made)
(61 real changes made)
(24 real changes made)
(93 real changes made)
(284 missing values generated)
(45 real changes made)
(86 real changes made)
(34 real changes made)
(119 real changes made)
(397 missing values generated)
(6 real changes made)
(26 real changes made)
(6 real changes made)
(359 real changes made)
(153 missing values generated)
(11 real changes made)
(63 real changes made)
(12 real changes made)
(67 real changes made)
(334 missing values generated)
(38 real changes made)
(52 real changes made)
(71 real changes made)
(173 real changes made)
(307 missing values generated)
(40 real changes made)
(36 real changes made)
(55 real changes made)
(176 real changes made)
(375 missing values generated)
(21 real changes made)
(32 real changes made)
(61 real changes made)
(261 real changes made)

. lab var new_c1 "For important decisions members of a group should be allowed to vote."

. lab var new_c2 "Most people can learn to be leaders, it is not a matter of birth."

. lab var new_c3 "Democratic elections in this village ensure that the elected authorities act in the interest of their people."
note: label truncated to 80 characters

. lab var new_c4 "In most cases, failures in this village are traceable to bad cicumstances and not bad leadership."
note: label truncated to 80 characters

. lab var new_c5 "Schools and parents schould teach children to obey authority."

. lab var new_c6 "Favouring friends, relatives or supporters over others in the course of ones duties as a leader is sometimes justified."
note: label truncated to 80 characters

. lab var new_c7 "On the whole, men make better political leaders than women do."

. lab var new_c8 "A leader hast to serve all people including those who did not vote for him/her or are not friends."
note: label truncated to 80 characters

. lab var new_c9 "Accepting a bribe in the course of ones duties is sometimes justified."

. lab var new_c10 "Most people in this village can be trusted."

. lab var new_c11 "On the whole, more educated people make better political leaders than the less educated do."
note: label truncated to 80 characters

. lab var new_c12 "On the whole, elders make better political leaders than the youth do."

.         
. gen new_c6r = 6- new_c6

. gen new_c7r = 6- new_c7 

. gen new_c9r = 6- new_c9

. alpha new_c1 new_c3 new_c8 new_c9r 

Test scale = mean(unstandardized items)

Average interitem covariance:     .9378221
Number of items in the scale:            4
Scale reliability coefficient:      0.7613

. 
. gen types = 0 if villager==1
(64 missing values generated)

. replace types = 1 if extrinsic_leader==0
(35 real changes made)

. replace types = 2 if extrinsic_leader==1
(29 real changes made)

. lab def villy1 0 "Villager" 1 "Intrinsic leader" 2 "Extrinsic leader", replace

. lab val types villy1

. 
. *graphical presentation
. preserve

. rename new_c1 norm1

. rename new_c3 norm2

. rename new_c8 norm3

. 
. 
. reshape long norm ,i(id) j(pr_id)
(note: j = 1 2 3)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                      448   ->    1344
Number of variables                 458   ->     457
j variable (3 values)                     ->   pr_id
xij variables:
                      norm1 norm2 norm3   ->   norm
-----------------------------------------------------------------------------

. label define pr1 1 "Group voting" 2 "Elections" 3 "Inclusive"

. label values pr_id pr1

. 
. cibar norm, over1(types) over2(pr_id) bargap(0) gap(80) barlabel(on) blpos(11) blgap(0.01) blfmt(%9.1f) graphopts(legend() xsize(4) ysize(2) yla(1(1)5)
>   ytitle("Mean") note("{bf: Group voting}='For important decisions members of a group should be allowed to vote.'" "{bf: Elections}='Democratic electio
> ns in this village ensure that the elected authorities act in the interest of their people.'" "{bf: Inclusive}='A leader hast to serve all people inclu
> ding those who did not vote for him/her or are not friends.'")) ciopts(lpattern(dash) lcolor(black))

. gr save "$working_ANALYSIS/results/intermediate/figure1_normative_expectations.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure1_normative_expectations.
> gph saved)

. gr export "$working_ANALYSIS/results/figures/figure1_normative_expectations.tif", replace width(3465)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure1_normative_expectations.tif w
> ritten in TIFF format)

. restore

. 
. ttest new_c1 if types!= 2, by(types)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
Villager |     384    4.117188    .0727191    1.424997    3.974209    4.260166
Intrinsi |      35    3.685714    .3142857    1.859339    3.047009     4.32442
---------+--------------------------------------------------------------------
combined |     419    4.081146     .071734    1.468359    3.940141     4.22215
---------+--------------------------------------------------------------------
    diff |            .4314732    .2587118               -.0770686     .940015
------------------------------------------------------------------------------
    diff = mean(Villager) - mean(Intrinsi)                        t =   1.6678
Ho: diff = 0                                     degrees of freedom =      417

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9519         Pr(|T| > |t|) = 0.0961          Pr(T > t) = 0.0481

. ranksum new_c1 if types!= 1, by(types)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

       types |      obs    rank sum    expected
-------------+---------------------------------
    Villager |      384       81341       79488
Extrinsic le |       29        4150        6003
-------------+---------------------------------
    combined |      413       85491       85491

unadjusted variance   384192.00
adjustment for ties  -110872.43
                     ----------
adjusted variance     273319.57

Ho: new_c1(types==Villager) = new_c1(types==Extrinsic leader)
             z =   3.544
    Prob > |z| =   0.0004

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

. ranksum new_c1 if types!= 0, by(types)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

       types |      obs    rank sum    expected
-------------+---------------------------------
Intrinsic le |       35      1259.5      1137.5
Extrinsic le |       29       820.5       942.5
-------------+---------------------------------
    combined |       64        2080        2080

unadjusted variance     5497.92
adjustment for ties    -1346.28
                     ----------
adjusted variance       4151.63

Ho: new_c1(types==Intrinsic leader) = new_c1(types==Extrinsic leader)
             z =   1.893
    Prob > |z| =   0.0583
    Exact Prob =   0.0707

. reg new_c1 i.types

      Source |       SS           df       MS      Number of obs   =       448
-------------+----------------------------------   F(2, 445)       =     11.23
       Model |  50.9697275         2  25.4848638   Prob > F        =    0.0000
    Residual |  1010.02804       445  2.26972593   R-squared       =    0.0480
-------------+----------------------------------   Adj R-squared   =    0.0438
       Total |  1060.99777       447   2.3735968   Root MSE        =    1.5066

-----------------------------------------------------------------------------------
           new_c1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |  -.4314732   .2660076    -1.62   0.106    -.9542605     .091314
Extrinsic leader  |  -1.324084    .290133    -4.56   0.000    -1.894285    -.753883
                  |
            _cons |   4.117188   .0768814    53.55   0.000     3.966092    4.268283
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    5.57
            Prob > F =    0.0187

. reg new_c3 i.types, vce(hc3)

Linear regression                               Number of obs     =        448
                                                F(2, 445)         =      19.56
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1286
                                                Root MSE          =     1.3309

-----------------------------------------------------------------------------------
                  |             Robust HC3
           new_c3 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |   -.652753   .3228877    -2.02   0.044    -1.287327   -.0181788
Extrinsic leader  |  -1.999551   .3337905    -5.99   0.000    -2.655552    -1.34355
                  |
            _cons |   4.309896   .0633192    68.07   0.000     4.185454    4.434338
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    8.74
            Prob > F =    0.0033

. reg new_c8 i.types, vce(hc3)

Linear regression                               Number of obs     =        448
                                                F(2, 445)         =      16.19
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1495
                                                Root MSE          =     1.2404

-----------------------------------------------------------------------------------
                  |             Robust HC3
           new_c8 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |  -.9443452   .3349403    -2.82   0.005    -1.602606    -.286084
Extrinsic leader  |  -1.917744   .3828851    -5.01   0.000    -2.670232   -1.165257
                  |
            _cons |   4.572917   .0551377    82.94   0.000     4.464554    4.681279
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    3.75
            Prob > F =    0.0535

. 
. 
. *normative expecation related to group voting by leader baseline choice
. reg new_c1 i.rule_base3 if villager==1, vce(hc3)

Linear regression                               Number of obs     =        384
                                                F(1, 382)         =       4.87
                                                Prob > F          =     0.0279
                                                R-squared         =     0.0087
                                                Root MSE          =     1.4207

------------------------------------------------------------------------------
             |             Robust HC3
      new_c1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
1.rule_base3 |   .3808081   .1725629     2.21   0.028     .0415161    .7201001
       _cons |   4.063636   .0807426    50.33   0.000     3.904881    4.222392
------------------------------------------------------------------------------

. 
. 
. 
. 
. *Figure 2.      Preference for democratic governance in study region
. clear

. use "$working_ANALYSIS/data/afro_r6.dta"

. keep if COUNTRY==22
(52,735 observations deleted)

. rename *, lower

. 
. 
. gen ohangwena= 0

. replace ohangwena = 1 if region == 588
(120 real changes made)

. lab def ohang 0 "Rest of Namibia" 1 "Ohangwena", replace

. lab val ohangwena ohang

. *SUPPORT FOR DEMOCRACY
. tab q30, nolab

       Q30. |
Support for |
  democracy |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        192       16.00       16.00
          2 |         96        8.00       24.00
          3 |        884       73.67       97.67
          9 |         28        2.33      100.00
------------+-----------------------------------
      Total |      1,200      100.00

. lab def democracy 1 "Does't matter for someone like me" 2 "Sometimes non-democratic preferable" 3 "Always democracy preferable", replace 

. lab val q30 democracy

. foreach x of varlist q30 q52b q52j q52k q68d q71a {
  2.         replace `x'=. if `x'==9
  3. }
(28 real changes made, 28 to missing)
(31 real changes made, 31 to missing)
(11 real changes made, 11 to missing)
(27 real changes made, 27 to missing)
(68 real changes made, 68 to missing)
(11 real changes made, 11 to missing)

. encode location_level_1, gen(constituency)

. gen demo_pref= 1 if q30==3
(316 missing values generated)

. replace demo_pref = 0 if q30<3
(288 real changes made)

. 
. ttest q52b, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,050    2.117143    .0287843    .9327182    2.060661    2.173624
Ohangwen |     119    2.327731    .0810391     .884032    2.167252    2.488211
---------+--------------------------------------------------------------------
combined |   1,169     2.13858    .0271916    .9296993     2.08523     2.19193
---------+--------------------------------------------------------------------
    diff |           -.2105882    .0897523               -.3866822   -.0344943
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =  -2.3463
Ho: diff = 0                                     degrees of freedom =     1167

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.0096         Pr(|T| > |t|) = 0.0191          Pr(T > t) = 0.9904

. ttest q52j, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,070    2.080374    .0272134     .890175    2.026976    2.133772
Ohangwen |     119     1.87395    .0822994    .8977809    1.710974    2.036925
---------+--------------------------------------------------------------------
combined |   1,189    2.059714    .0258893    .8927129     2.00892    2.110508
---------+--------------------------------------------------------------------
    diff |            .2064243    .0860936                .0375116    .3753369
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   2.3977
Ho: diff = 0                                     degrees of freedom =     1187

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9917         Pr(|T| > |t|) = 0.0167          Pr(T > t) = 0.0083

. ttest q52k, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,053      2.1415    .0276339    .8967179    2.087277    2.195724
Ohangwen |     120    2.008333    .0771479    .8451128    1.855573    2.161094
---------+--------------------------------------------------------------------
combined |   1,173    2.127877    .0260487    .8921436     2.07677    2.178984
---------+--------------------------------------------------------------------
    diff |            .1331671    .0859051                -.035378    .3017123
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   1.5502
Ho: diff = 0                                     degrees of freedom =     1171

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9393         Pr(|T| > |t|) = 0.1214          Pr(T > t) = 0.0607

. ttest q68d, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,030    2.976699    .0226438    .7267222    2.932266    3.021132
Ohangwen |     102    2.911765    .0871282    .8799521    2.738926    3.084604
---------+--------------------------------------------------------------------
combined |   1,132    2.970848    .0220421    .7416127      2.9276    3.014096
---------+--------------------------------------------------------------------
    diff |            .0649343    .0769905               -.0861261    .2159947
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   0.8434
Ho: diff = 0                                     degrees of freedom =     1130

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.8004         Pr(|T| > |t|) = 0.3992          Pr(T > t) = 0.1996

. ttest q71a, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,069    3.727783    .0394163    1.288739    3.650441    3.805125
Ohangwen |     120    3.391667     .130875    1.433664    3.132521    3.650812
---------+--------------------------------------------------------------------
combined |   1,189     3.69386    .0379148    1.307375    3.619473    3.768248
---------+--------------------------------------------------------------------
    diff |            .3361163    .1255415                .0898084    .5824242
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   2.6773
Ho: diff = 0                                     degrees of freedom =     1187

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9962         Pr(|T| > |t|) = 0.0075          Pr(T > t) = 0.0038

.  
. gen com_member = 0

. replace com_member = 1 if q19b==3 | q19b==2
(169 real changes made)

. 
. *Democracy is preferable to any other kind of government.
. gen study_sites = 0

. replace study_sites = 1 if ohangwena==1
(120 real changes made)

. replace study_sites = 2 if constituency==9 | constituency==43 | constituency==71
(40 real changes made)

. lab def studies 0 "Rest of Namibia (n=1058)" 1 "Rest of Ohangwena (n=76)" 2 "Study sites (n=38)", replace

. lab val study_sites studies

. catplot q30, over(study_sites) asyvars stack horizontal recast(bar) yla(0(20)100, nogrid) percent(study_sites) bargap(10) blabel(bar, format(%9.0f) pos
> (center)  gap(0.1)) title("Which of these three statements is closest to your own opinion?")  b1title("") legend(ring(1) pos(6) rows(3))

. gr save  "$working_ANALYSIS/results/intermediate/support_dem_namibia.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/support_dem_namibia.gph saved)

. gr export "$working_ANALYSIS/results/figures/afro_support_democracy.tif", replace width(4000)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/afro_support_democracy.tif written i
> n TIFF format)

. ranksum q30 if study_sites!=1, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Nami |     1058    581626.5      580313
Study sites  |       38     19529.5       20843
-------------+---------------------------------
    combined |     1096      601156      601156

unadjusted variance  3675315.67
adjustment for ties   -1.60e+06
                     ----------
adjusted variance    2073385.02

Ho: q30(study_~s==Rest of Namibia (n=1058)) = q30(study_~s==Study sites (n=38))
             z =   0.912
    Prob > |z| =   0.3617

. ranksum q30 if study_sites!=0, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Ohan |       76      4414.5        4370
Study sites  |       38      2140.5        2185
-------------+---------------------------------
    combined |      114        6555        6555

unadjusted variance    27676.67
adjustment for ties   -11049.14
                     ----------
adjusted variance      16627.52

Ho: q30(study_~s==Rest of Ohangwena (n=76)) = q30(study_~s==Study sites (n=38))
             z =   0.345
    Prob > |z| =   0.7300
    Exact Prob =   0.7819

. 
. reg q52b i.study_sites, vce(hc3)

Linear regression                               Number of obs     =      1,169
                                                F(2, 1166)        =      11.40
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0144
                                                Root MSE          =     .92378

-------------------------------------------------------------------------------------------
                          |             Robust HC3
                     q52b |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
--------------------------+----------------------------------------------------------------
              study_sites |
Rest of Ohangwena (n=76)  |   .4145027    .091302     4.54   0.000     .2353682    .5936372
      Study sites (n=38)  |  -.1921429   .1581376    -1.22   0.225    -.5024089    .1181232
                          |
                    _cons |   2.117143    .028798    73.52   0.000     2.060641    2.173645
-------------------------------------------------------------------------------------------

. ranksum q52b if study_sites!=1, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Nami |     1050      575205      572775
Study sites  |       40       19390       21820
-------------+---------------------------------
    combined |     1090      594595      594595

unadjusted variance  3818500.00
adjustment for ties  -454608.43
                     ----------
adjusted variance    3363891.57

Ho: q52b(study_~s==Rest of Namibia (n=1058)) = q52b(study_~s==Study sites (n=38))
             z =   1.325
    Prob > |z| =   0.1852

. ranksum q71a if study_sites!=1, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Nami |     1069      596168      593295
Study sites  |       40       19327       22200
-------------+---------------------------------
    combined |     1109      615495      615495

unadjusted variance  3955300.00
adjustment for ties  -359561.61
                     ----------
adjusted variance    3595738.39

Ho: q71a(study_~s==Rest of Namibia (n=1058)) = q71a(study_~s==Study sites (n=38))
             z =   1.515
    Prob > |z| =   0.1297

. 
. 
. 
. * Load cleaned dataset (long-format)
. clear

. use "$working_ANALYSIS/processed/analysis_long.dta"

. 
. *set panel
. xtset id decision
       panel variable:  id (strongly balanced)
        time variable:  decision, 1 to 6, but with gaps
                delta:  1 unit

. 
. 
. *Figure 4.      Average treatment effects of payment
. *Panel A: Main treatment effects
. tab rule if decision<2

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         41       64.06       64.06
Pseudo-democratic |         14       21.88       85.94
       Autocratic |          9       14.06      100.00
------------------+-----------------------------------
            Total |         64      100.00

. bys TL: tab rule if decision<2

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> TL = 0

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         18       56.25       56.25
Pseudo-democratic |          8       25.00       81.25
       Autocratic |          6       18.75      100.00
------------------+-----------------------------------
            Total |         32      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> TL = 1

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         23       71.88       71.88
Pseudo-democratic |          6       18.75       90.63
       Autocratic |          3        9.38      100.00
------------------+-----------------------------------
            Total |         32      100.00


. prtest dem1 if decision<2, by(TL)

Two-sample test of proportions                     0: Number of obs =       32
                                                   1: Number of obs =       32
------------------------------------------------------------------------------
       Group |       Mean   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
           0 |      .5625   .0876951                      .3906208    .7343792
           1 |     .71875   .0794804                      .5629712    .8745288
-------------+----------------------------------------------------------------
        diff |    -.15625   .1183536                     -.3882187    .0757187
             |  under Ho:   .1199543    -1.30   0.193
------------------------------------------------------------------------------
        diff = prop(0) - prop(1)                                  z =  -1.3026
    Ho: diff = 0

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(Z < z) = 0.0964         Pr(|Z| > |z|) = 0.1927          Pr(Z > z) = 0.9036

. 
. 
. * Small and Large bonus seperately
. eststo reg_dem1: xtprobit dem bonus_2 bonus_3 , vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -125.38709  
Iteration 1:   log pseudolikelihood = -125.38709  

Fitting full model:

rho =  0.0     log pseudolikelihood = -125.38709
rho =  0.1     log pseudolikelihood = -120.97002
rho =  0.2     log pseudolikelihood = -117.59758
rho =  0.3     log pseudolikelihood = -115.02704
rho =  0.4     log pseudolikelihood = -113.13299
rho =  0.5     log pseudolikelihood = -111.87369
rho =  0.6     log pseudolikelihood = -111.29283
rho =  0.7     log pseudolikelihood = -111.58207

Iteration 0:   log pseudolikelihood = -111.29429  
Iteration 1:   log pseudolikelihood = -110.64933  
Iteration 2:   log pseudolikelihood = -110.63147  
Iteration 3:   log pseudolikelihood = -110.63147  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       0.00
Log pseudolikelihood  = -110.63147              Prob > chi2       =     0.9999

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .0038466   .2964481     0.01   0.990     -.577181    .5848743
     bonus_3 |   .0038466   .2964481     0.01   0.990     -.577181    .5848743
       _cons |   .5973239   .2794914     2.14   0.033     .0495309    1.145117
-------------+----------------------------------------------------------------
    /lnsig2u |   .5734665   .4495206                     -.3075777    1.454511
-------------+----------------------------------------------------------------
     sigma_u |   1.332069   .2993962                      .8574531    2.069393
         rho |   .6395627   .1036245                      .4237061    .8106917
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dem=1), predict(pr)
dy/dx w.r.t. : bonus_2 bonus_3

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .0008635   .0665514     0.01   0.990    -.1295748    .1313019
     bonus_3 |   .0008635   .0665514     0.01   0.990    -.1295749     .131302
------------------------------------------------------------------------------

. est store pr1

. eststo reg_fake1: xtprobit fake bonus_2 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =  -114.9984  
Iteration 1:   log pseudolikelihood = -113.09846  
Iteration 2:   log pseudolikelihood = -113.09531  
Iteration 3:   log pseudolikelihood = -113.09531  

Fitting full model:

rho =  0.0     log pseudolikelihood = -113.09531
rho =  0.1     log pseudolikelihood = -109.50028
rho =  0.2     log pseudolikelihood = -106.85965
rho =  0.3     log pseudolikelihood = -104.95446
rho =  0.4     log pseudolikelihood = -103.67659
rho =  0.5     log pseudolikelihood = -102.99775
rho =  0.6     log pseudolikelihood = -102.97063
rho =  0.7     log pseudolikelihood = -103.77414

Iteration 0:   log pseudolikelihood = -102.97557  
Iteration 1:   log pseudolikelihood = -101.54769  
Iteration 2:   log pseudolikelihood = -101.40994  
Iteration 3:   log pseudolikelihood = -101.40943  
Iteration 4:   log pseudolikelihood = -101.40943  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       3.97
Log pseudolikelihood  = -101.40943              Prob > chi2       =     0.2652

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .4614349   .3139349     1.47   0.142    -.1538663    1.076736
     bonus_3 |   .5327473   .3187649     1.67   0.095    -.0920204    1.157515
 bonus_order |   .3387109   .4152962     0.82   0.415    -.4752546    1.152676
       _cons |  -1.431821   .3832913    -3.74   0.000    -2.183058   -.6805835
-------------+----------------------------------------------------------------
    /lnsig2u |   .4616659   .4812244                     -.4815165    1.404848
-------------+----------------------------------------------------------------
     sigma_u |   1.259649   .3030868                      .7860316     2.01864
         rho |   .6134093   .1141167                      .3818941    .8029521
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(fake=1), predict(pr)
dy/dx w.r.t. : bonus_2 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .0961699    .063935     1.50   0.133    -.0291404    .2214802
     bonus_3 |   .1110324   .0645646     1.72   0.085    -.0155119    .2375767
 bonus_order |   .0705924   .0860772     0.82   0.412    -.0981159    .2393007
------------------------------------------------------------------------------

. est store pr2

. eststo reg_dic1: xtprobit dic bonus_2 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -50.134837  
Iteration 1:   log pseudolikelihood = -46.751419  
Iteration 2:   log pseudolikelihood = -46.668355  
Iteration 3:   log pseudolikelihood = -46.668238  
Iteration 4:   log pseudolikelihood = -46.668238  

Fitting full model:

rho =  0.0     log pseudolikelihood = -46.668238
rho =  0.1     log pseudolikelihood =  -46.34144
rho =  0.2     log pseudolikelihood = -46.487345

Iteration 0:   log pseudolikelihood =  -46.34144  
Iteration 1:   log pseudolikelihood = -46.224904  
Iteration 2:   log pseudolikelihood = -45.725694  
Iteration 3:   log pseudolikelihood = -45.716321  
Iteration 4:   log pseudolikelihood = -45.716168  
Iteration 5:   log pseudolikelihood = -45.716168  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       5.89
Log pseudolikelihood  = -45.716168              Prob > chi2       =     0.1171

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |  -.7685142   .3654187    -2.10   0.035    -1.484722   -.0523066
     bonus_3 |  -.9802238   .4762269    -2.06   0.040    -1.913611   -.0468363
 bonus_order |  -.3149328   .3841314    -0.82   0.412    -1.067817    .4379509
       _cons |  -1.164717   .3813613    -3.05   0.002    -1.912172   -.4172627
-------------+----------------------------------------------------------------
    /lnsig2u |   -.664432   .8165016                     -2.264746    .9358817
-------------+----------------------------------------------------------------
     sigma_u |   .7173324   .2928515                      .3222677    1.596703
         rho |   .3397447   .1831562                      .0940851     .718267
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dic=1), predict(pr)
dy/dx w.r.t. : bonus_2 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |  -.0804475   .0394257    -2.04   0.041    -.1577204   -.0031745
     bonus_3 |  -.1026091   .0485981    -2.11   0.035    -.1978595   -.0073586
 bonus_order |  -.0329669   .0402543    -0.82   0.413    -.1118639    .0459301
------------------------------------------------------------------------------

. est store pr3

. 
. *test small versus large bonus 
. xtprobit dem bonus_1 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -125.38709  
Iteration 1:   log pseudolikelihood = -125.13711  
Iteration 2:   log pseudolikelihood =  -125.1371  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -125.1371
rho =  0.1     log pseudolikelihood = -120.75301
rho =  0.2     log pseudolikelihood = -117.40806
rho =  0.3     log pseudolikelihood = -114.86156
rho =  0.4     log pseudolikelihood = -112.98925
rho =  0.5     log pseudolikelihood = -111.75008
rho =  0.6     log pseudolikelihood = -111.18782
rho =  0.7     log pseudolikelihood = -111.49319

Iteration 0:   log pseudolikelihood = -111.19027  
Iteration 1:   log pseudolikelihood =  -110.5521  
Iteration 2:   log pseudolikelihood = -110.53321  
Iteration 3:   log pseudolikelihood = -110.53321  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       0.20
Log pseudolikelihood  = -110.53321              Prob > chi2       =     0.9783

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.0040703   .2964191    -0.01   0.989    -.5850411    .5769005
     bonus_3 |  -.0004308   .2642776    -0.00   0.999    -.5184054    .5175438
 bonus_order |  -.1862215   .4213684    -0.44   0.659    -1.012088    .6396453
       _cons |   .6984892   .3495222     2.00   0.046     .0134383     1.38354
-------------+----------------------------------------------------------------
    /lnsig2u |   .5654265   .4499982                     -.3165538    1.447407
-------------+----------------------------------------------------------------
     sigma_u |   1.326725   .2985119                      .8536134    2.062056
         rho |   .6377072   .1039661                      .4215158     .809599
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dem=1), predict(pr)
dy/dx w.r.t. : bonus_1 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.0009149    .066629    -0.01   0.989    -.1315053    .1296755
     bonus_3 |  -.0000968   .0594032    -0.00   0.999     -.116525    .1163313
 bonus_order |  -.0418581   .0944824    -0.44   0.658    -.2270401     .143324
------------------------------------------------------------------------------

. xtprobit fake bonus_1 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =  -114.9984  
Iteration 1:   log pseudolikelihood = -113.09846  
Iteration 2:   log pseudolikelihood = -113.09531  
Iteration 3:   log pseudolikelihood = -113.09531  

Fitting full model:

rho =  0.0     log pseudolikelihood = -113.09531
rho =  0.1     log pseudolikelihood = -109.50028
rho =  0.2     log pseudolikelihood = -106.85965
rho =  0.3     log pseudolikelihood = -104.95446
rho =  0.4     log pseudolikelihood = -103.67659
rho =  0.5     log pseudolikelihood = -102.99775
rho =  0.6     log pseudolikelihood = -102.97063
rho =  0.7     log pseudolikelihood = -103.77414

Iteration 0:   log pseudolikelihood = -102.97557  
Iteration 1:   log pseudolikelihood = -101.54769  
Iteration 2:   log pseudolikelihood = -101.40994  
Iteration 3:   log pseudolikelihood = -101.40943  
Iteration 4:   log pseudolikelihood = -101.40943  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       3.97
Log pseudolikelihood  = -101.40943              Prob > chi2       =     0.2652

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.4614349   .3139349    -1.47   0.142    -1.076736    .1538663
     bonus_3 |   .0713124   .2771217     0.26   0.797    -.4718362     .614461
 bonus_order |   .3387109   .4152962     0.82   0.415    -.4752546    1.152676
       _cons |  -.9703856   .3528396    -2.75   0.006    -1.661939   -.2788326
-------------+----------------------------------------------------------------
    /lnsig2u |   .4616659   .4812244                     -.4815165    1.404848
-------------+----------------------------------------------------------------
     sigma_u |   1.259649   .3030868                      .7860316     2.01864
         rho |   .6134093   .1141167                      .3818941    .8029521
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(fake=1), predict(pr)
dy/dx w.r.t. : bonus_1 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.0961699    .063935    -1.50   0.133    -.2214802    .0291404
     bonus_3 |   .0148626   .0577308     0.26   0.797    -.0982878    .1280129
 bonus_order |   .0705924   .0860772     0.82   0.412    -.0981159    .2393007
------------------------------------------------------------------------------

. xtprobit dic bonus_1 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -50.134837  
Iteration 1:   log pseudolikelihood = -46.751419  
Iteration 2:   log pseudolikelihood = -46.668355  
Iteration 3:   log pseudolikelihood = -46.668238  
Iteration 4:   log pseudolikelihood = -46.668238  

Fitting full model:

rho =  0.0     log pseudolikelihood = -46.668238
rho =  0.1     log pseudolikelihood =  -46.34144
rho =  0.2     log pseudolikelihood = -46.487345

Iteration 0:   log pseudolikelihood =  -46.34144  
Iteration 1:   log pseudolikelihood = -46.224904  
Iteration 2:   log pseudolikelihood = -45.725694  
Iteration 3:   log pseudolikelihood = -45.716321  
Iteration 4:   log pseudolikelihood = -45.716168  
Iteration 5:   log pseudolikelihood = -45.716168  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       5.89
Log pseudolikelihood  = -45.716168              Prob > chi2       =     0.1171

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |   .7685142   .3654187     2.10   0.035     .0523066    1.484722
     bonus_3 |  -.2117097   .4085308    -0.52   0.604    -1.012415    .5889961
 bonus_order |  -.3149328   .3841314    -0.82   0.412    -1.067817    .4379509
       _cons |  -1.933231   .4224659    -4.58   0.000    -2.761249   -1.105213
-------------+----------------------------------------------------------------
    /lnsig2u |   -.664432   .8165016                     -2.264746    .9358817
-------------+----------------------------------------------------------------
     sigma_u |   .7173324   .2928515                      .3222677    1.596703
         rho |   .3397447   .1831562                      .0940851     .718267
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dic=1), predict(pr)
dy/dx w.r.t. : bonus_1 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |   .0804475   .0394257     2.04   0.041     .0031745    .1577204
     bonus_3 |  -.0221616   .0421551    -0.53   0.599    -.1047841    .0604609
 bonus_order |  -.0329669   .0402543    -0.82   0.413    -.1118639    .0459301
------------------------------------------------------------------------------

. 
. *pooled bonus
. eststo reg_dem2: xtprobit dem bonus bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -125.38709  
Iteration 1:   log pseudolikelihood = -125.13711  
Iteration 2:   log pseudolikelihood =  -125.1371  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -125.1371
rho =  0.1     log pseudolikelihood = -120.75302
rho =  0.2     log pseudolikelihood = -117.40806
rho =  0.3     log pseudolikelihood = -114.86156
rho =  0.4     log pseudolikelihood = -112.98925
rho =  0.5     log pseudolikelihood = -111.75008
rho =  0.6     log pseudolikelihood = -111.18782
rho =  0.7     log pseudolikelihood =  -111.4932

Iteration 0:   log pseudolikelihood = -111.19027  
Iteration 1:   log pseudolikelihood =  -110.5521  
Iteration 2:   log pseudolikelihood = -110.53321  
Iteration 3:   log pseudolikelihood = -110.53321  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       0.20
Log pseudolikelihood  = -110.53321              Prob > chi2       =     0.9069

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .0038548   .2653135     0.01   0.988      -.51615    .5238597
 bonus_order |  -.1862194   .4213702    -0.44   0.659     -1.01209    .6396511
       _cons |   .6944178   .3408885     2.04   0.042     .0262886    1.362547
-------------+----------------------------------------------------------------
    /lnsig2u |   .5654267   .4499981                     -.3165533    1.447407
-------------+----------------------------------------------------------------
     sigma_u |   1.326725   .2985118                      .8536136    2.062056
         rho |   .6377072   .1039661                       .421516     .809599
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dem=1), predict(pr)
dy/dx w.r.t. : bonus bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .0008665   .0596371     0.01   0.988    -.1160202    .1177531
 bonus_order |  -.0418576   .0944827    -0.44   0.658    -.2270403    .1433252
------------------------------------------------------------------------------

. est store pr4

. eststo reg_fake2: xtprobit fake bonus bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =  -114.9984  
Iteration 1:   log pseudolikelihood = -113.11824  
Iteration 2:   log pseudolikelihood = -113.11513  
Iteration 3:   log pseudolikelihood = -113.11513  

Fitting full model:

rho =  0.0     log pseudolikelihood = -113.11513
rho =  0.1     log pseudolikelihood = -109.52127
rho =  0.2     log pseudolikelihood = -106.88185
rho =  0.3     log pseudolikelihood = -104.97786
rho =  0.4     log pseudolikelihood =  -103.7012
rho =  0.5     log pseudolikelihood = -103.02356
rho =  0.6     log pseudolikelihood = -102.99767
rho =  0.7     log pseudolikelihood = -103.80249

Iteration 0:   log pseudolikelihood = -103.00256  
Iteration 1:   log pseudolikelihood = -101.57872  
Iteration 2:   log pseudolikelihood = -101.44091  
Iteration 3:   log pseudolikelihood = -101.44039  
Iteration 4:   log pseudolikelihood = -101.44039  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       3.88
Log pseudolikelihood  = -101.44039              Prob > chi2       =     0.1435

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .4971642   .2842203     1.75   0.080    -.0598972    1.054226
 bonus_order |   .3385349   .4151405     0.82   0.415    -.4751255    1.152195
       _cons |  -1.431149   .3832357    -3.73   0.000    -2.182278   -.6800211
-------------+----------------------------------------------------------------
    /lnsig2u |   .4601208    .481087                     -.4827923    1.403034
-------------+----------------------------------------------------------------
     sigma_u |   1.258676   .3027663                      .7855304     2.01681
         rho |   .6130428   .1141241                       .381593    .8026649
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(fake=1), predict(pr)
dy/dx w.r.t. : bonus bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .1036855   .0574167     1.81   0.071    -.0088492    .2162201
 bonus_order |   .0706027   .0860697     0.82   0.412    -.0980907    .2392962
------------------------------------------------------------------------------

. est store pr5

. eststo reg_dic2: xtprobit dic bonus bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -50.134837  
Iteration 1:   log pseudolikelihood = -46.837592  
Iteration 2:   log pseudolikelihood = -46.766968  
Iteration 3:   log pseudolikelihood =  -46.76692  
Iteration 4:   log pseudolikelihood =  -46.76692  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -46.76692
rho =  0.1     log pseudolikelihood = -46.438292
rho =  0.2     log pseudolikelihood = -46.586174

Iteration 0:   log pseudolikelihood = -46.438292  
Iteration 1:   log pseudolikelihood = -46.303056  
Iteration 2:   log pseudolikelihood = -45.823896  
Iteration 3:   log pseudolikelihood = -45.814007  
Iteration 4:   log pseudolikelihood = -45.813838  
Iteration 5:   log pseudolikelihood = -45.813838  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       6.02
Log pseudolikelihood  = -45.813838              Prob > chi2       =     0.0493

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.8653539   .3619556    -2.39   0.017    -1.574774   -.1559341
 bonus_order |  -.3153426   .3830241    -0.82   0.410    -1.066056    .4353707
       _cons |  -1.162901   .3801173    -3.06   0.002    -1.907917   -.4178845
-------------+----------------------------------------------------------------
    /lnsig2u |  -.6719679   .8021689                      -2.24419    .9002543
-------------+----------------------------------------------------------------
     sigma_u |   .7146346   .2866288                      .3255969    1.568512
         rho |   .3380563   .1795048                      .0958518    .7110018
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dic=1), predict(pr)
dy/dx w.r.t. : bonus bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.0908287   .0383611    -2.37   0.018     -.166015   -.0156423
 bonus_order |  -.0330988   .0403304    -0.82   0.412    -.1121449    .0459473
------------------------------------------------------------------------------

. est store pr6

. 
. 
. *plot marginal effects for bonus treatment
. coefplot (pr1, offset(0.2) msymbol(D)) (pr2, offset(0) msymbol(S)) (pr3, offset(-0.2) msymbol(O)) (pr4, offset(0.2) msymbol(D) mcolor("100 143 255") ci
> opts(lwidth(0.3 1) lcolor("100 143 255*.8" "100 143 255*.2")  recast(rcap))) (pr5, offset(0) msymbol(S) mcolor("120 94 240") ciopts(lwidth(0.3 1) color
> ("120 94 240*.8" "120 94 240*.2")  recast(rcap)))  (pr6, offset(-0.2) msymbol(O) mcolor("220 38 127") ciopts(lwidth(0.3 1) color("220 38 127*.8" "220 3
> 8 127*.2")  recast(rcap))), keep(bonus_2 bonus_3 bonus) coeflabels(bonus = "Pooled Bonus" bonus_2 = "Small bonus" bonus_3="Large bonus") xline(0, lpatt
> ern(dash) lcolor(gs3)) xtitle("Regression estimated impact relative to baseline in pp") msize(3pt) xla(-0.3(0.1)0.3, nogrid) grid(none) levels(95 90) c
> iopts(lwidth(0.3 1) lcolor(*.8 *.2) recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", "") )))  mlabsize(7pt)  mlabp
> osition(12) mlabgap(-0.1)  legend(order(3 "Democratic" 6 "Pseudo-democratic" 9 "Autocratic") pos(6) ring(1) rows(1) bmargin(small)) graphregion(margin(
> tiny))  xsize(3.465) ysize(2) scale(1.2)
(note:  named style medthin not found in class linestyle, default attributes used)

. gr save "$working_ANALYSIS/results/intermediate/figure2.gph", replace 
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure2.gph saved)

. gr export "$working_ANALYSIS/results/figures/figure2.tif", replace width(4000)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure2.tif written in TIFF format)

. 
. *Table S5.      Main effects of bonus payment 
. esttab reg_dem1 reg_fake1 reg_dic1 reg_dem2 reg_fake2 reg_dic2 using "$working_ANALYSIS\results\Tables\tableS5_main_effects.rtf",  ci transform(ln*: ex
> p(@) exp(@))mtitles("Democratic" "Pseudo-democratic" "Dictator" "Democratic" "Pseudo-democratic" "Dictator") b(%4.2f) eqlabels("" "lnsig2u", none) stat
> s(N N_g sigma_u rho chi2 p, labels("N" "Individuals" "sigma_u" "rho" "Wald Chi2" "p" ) fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(
> ,elist(weight:_cons "{break}{hline @width}")) replace 
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS5_main_effects.rtf
> )

. 
. 
. 
. 
. *Table 2.       Observed crowding effects of conditional monetary incentives in the experiment.
. *created in word, descriptives are calculated here
. 
. tab rule type if round==2, column

+-------------------+
| Key               |
|-------------------|
|     frequency     |
| column percentage |
+-------------------+

                  |                    type
             rule |     Box I    Box III     Box II     Box IV |     Total
------------------+--------------------------------------------+----------
       Democratic |         2          7         16         15 |        40 
                  |     16.67      63.64      69.57      83.33 |     62.50 
------------------+--------------------------------------------+----------
Pseudo-democratic |         9          4          6          3 |        22 
                  |     75.00      36.36      26.09      16.67 |     34.38 
------------------+--------------------------------------------+----------
       Autocratic |         1          0          1          0 |         2 
                  |      8.33       0.00       4.35       0.00 |      3.13 
------------------+--------------------------------------------+----------
            Total |        12         11         23         18 |        64 
                  |    100.00     100.00     100.00     100.00 |    100.00 

. 
. 
. 
. *Figure 5.      Likelihood to choose democratic rule across subgroups
. eststo sub1: xtmixed dem i.bonus bonus_order  || id: if type==1,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -18.564637  
Iteration 1:   log restricted-likelihood = -18.564241  
Iteration 2:   log restricted-likelihood = -18.564241  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         36
Group variable: id                              Number of groups  =         12

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =       5.90
Log restricted-likelihood = -18.564241          Prob > chi2       =     0.0522

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |   .2916667   .1200719     2.43   0.015       .05633    .5270033
          bonus_order |  -.0095238   .1622964    -0.06   0.953     -.327619    .3085714
                _cons |   .0055556   .1475559     0.04   0.970    -.2836488    .2947599
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .1959065   .0923388      .0777754    .4934637
-----------------------------+------------------------------------------------
                sd(Residual) |   .3396147   .0500735      .2543804    .4534082
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 1.80          Prob >= chibar2 = 0.0899

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "12"

. eststo sub2: xtmixed dem i.bonus bonus_order  || id: if type==2,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -19.596737  
Iteration 1:   log restricted-likelihood = -19.596494  
Iteration 2:   log restricted-likelihood = -19.596494  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         33
Group variable: id                              Number of groups  =         11

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =      14.05
Log restricted-likelihood = -19.596494          Prob > chi2       =     0.0009

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |         .5   .1356402     3.69   0.000     .2341501    .7658499
          bonus_order |  -.1309524   .1920815    -0.68   0.495    -.5074253    .2455205
                _cons |   .0833333   .1779209     0.47   0.640    -.2653852    .4320519
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .2212279   .1048617      .0873719    .5601549
-----------------------------+------------------------------------------------
                sd(Residual) |   .3673154    .056678      .2714538    .4970298
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 1.85          Prob >= chibar2 = 0.0870

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals' 

added macro:
        e(individuals) : "11"

. eststo sub3: xtmixed dem i.bonus bonus_order  || id: if type==3,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -29.466679  
Iteration 1:   log restricted-likelihood = -29.466581  
Iteration 2:   log restricted-likelihood = -29.466581  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         69
Group variable: id                              Number of groups  =         23

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =      11.38
Log restricted-likelihood = -29.466581          Prob > chi2       =     0.0034

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |  -.2608696   .0788491    -3.31   0.001     -.415411   -.1063282
          bonus_order |   .0732323   .1114045     0.66   0.511    -.1451165    .2915812
                _cons |   .9617918    .096117    10.01   0.000      .773406    1.150178
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .1986239   .0578471      .1122349    .3515078
-----------------------------+------------------------------------------------
                sd(Residual) |   .3087557   .0325457      .2511253    .3796117
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 5.02          Prob >= chibar2 = 0.0125

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "23"

. eststo sub4: xtmixed dem i.bonus bonus_order  || id: if type==4,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -17.148897  
Iteration 1:   log restricted-likelihood = -17.135095  
Iteration 2:   log restricted-likelihood = -17.135079  
Iteration 3:   log restricted-likelihood = -17.135079  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         54
Group variable: id                              Number of groups  =         18

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =       4.16
Log restricted-likelihood = -17.135079          Prob > chi2       =     0.1249

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |  -.1666667   .0845154    -1.97   0.049    -.3323139   -.0010195
          bonus_order |        .05   .0960143     0.52   0.603    -.1381846    .2381846
                _cons |   .9777778    .085275    11.47   0.000     .8106419    1.144914
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .1113588   .0719082      .0314105    .3947978
-----------------------------+------------------------------------------------
                sd(Residual) |     .29277   .0349927      .2316267    .3700536
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 0.74          Prob >= chibar2 = 0.1944

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "18"

. 
. 
. coefplot (sub1, label (Box I)) (sub2, label (Box III))  (sub3, label (Box II))  (sub4, label (Box IV)) , keep(1.bonus) coeflabels(1.bonus = "Pooled Bon
> us")  byopts(xrescale) xline(0, lpattern(dash) lcolor(gs3)) xtitle("Regression estimated impact relative to baseline in pp") grid(none) levels(95 90) c
> iopts(lwidth(0.8 2)  lcolor(*1 *.3) recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", "")))) msize(3pt) msymbol(D) 
> mlabsize(8pt) mlabposition(1) mlabgap(-0.4) subtitle(, size(6pt) lstyle(none) margin(medium) nobox justification(left)  bmargin(top))  xla(-50(25)75, n
> ogrid)  xsize(3.465) ysize(2) scale(1.2)

. gr_edit style.editstyle margin(vsmall) editcopy

. gr save  "$working_ANALYSIS\results\intermediate\figure5_boxes_subgroups.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\intermediate\figure5_boxes_subgroups.gph sav
> ed)

. gr export "$working_ANALYSIS\results\figures\figure5_boxes_subgroups.tif", replace width(4000) 
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\figures\figure5_boxes_subgroups.tif written 
> in TIFF format)

. 
. 
. *Table S9.      Subsample treatment effects on democratic rule choices
. esttab sub1 sub2 sub3 sub4 using "$working_ANALYSIS\results\tables\tableS9_social_norms_boxes_democratic.rtf",  label se(%4.3f)  transform(ln*: exp(@) 
> exp(@)) mgroups("Democratic Rule (=1)", pattern(1 0 0))   mtitles("Box 1" "Box 2" "Box 3" "Box 4") b(%4.3f) stats(N individuals chi2 p, labels("N" "Ind
> ividuals" "Wald Chi2" "p" ) fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(weight:_cons "{break}{hline @width}")) nonotes addno
> tes("Notes: Estimates are from multilevel panel regressions that account for the grouping structure of the data at the individual level (random interce
> pt). Standard errors with stars indicating the following significant levels: * p < 0.10, ** p < 0.05, *** p < 0.01") replace 
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\tables\tableS9_social_norms_box
> es_democratic.rtf)

. 
. *Figure 6.      Villagers' satisfaction with their leader’s performance outside the lab
. preserve

. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. 
. bysort group_leader_type: sum satisfaction_leader

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = True-democrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |        246    3.827134    .6666073       1.75          5

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Pseudo-democrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         54    3.626852    .7306603        2.2        4.6

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Paternalist

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         30    3.844167    .5952282        2.6       4.75

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Autocrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         36       3.725    .5777419        2.6        4.5

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Benevolent-Autocrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         18    3.816667    .7085611        1.4        4.5


. reg z_satisfaction leader_type2 leader_type3 leader_type4 leader_type5 i.village, vce(robust)

Linear regression                               Number of obs     =        384
                                                F(35, 348)        =       1.58
                                                Prob > F          =     0.0230
                                                R-squared         =     0.1271
                                                Root MSE          =     .98017

------------------------------------------------------------------------------------
                   |               Robust
    z_satisfaction |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------------+----------------------------------------------------------------
      leader_type2 |  -.6611698    .208875    -3.17   0.002    -1.071986   -.2503536
      leader_type3 |  -.2920114    .214623    -1.36   0.175    -.7141328    .1301101
      leader_type4 |  -.4457453    .220525    -2.02   0.044    -.8794748   -.0120157
      leader_type5 |   -.568856   .3146655    -1.81   0.071    -1.187741    .0500294
                   |
           village |
            Ehafo  |   .2816941   .4406489     0.64   0.523     -.584976    1.148364
           Endola  |   .1647852   .4608402     0.36   0.721    -.7415971    1.071168
        Epatululo  |   .5070494   .4781111     1.06   0.290    -.4333015      1.4474
            Epuku  |  -.2703627   .4603237    -0.59   0.557    -1.175729     .635004
            Etale  |  -.2734926   .5295272    -0.52   0.606    -1.314969    .7679837
         Etilashi  |   .0657285   .5410536     0.12   0.903    -.9984181    1.129875
           Etomba  |  -.3036037   .4349979    -0.70   0.486     -1.15916     .551952
        Ohangwena  |   .3807507   .4368951     0.87   0.384    -.4785364    1.240038
       Oipapakane  |   .3098634   .4577618     0.68   0.499    -.5904644    1.210191
          Okadiwa  |   .5539985   .4237442     1.31   0.192    -.2794234     1.38742
          Okafitu  |   .2875579   .4625024     0.62   0.535    -.6220938     1.19721
           Okakwa  |   .2336439   .4366642     0.54   0.593    -.6251892    1.092477
         Okangudi  |   .5778497   .4702996     1.23   0.220    -.3471375    1.502837
        Okapundja  |     .66628   .4807188     1.39   0.167    -.2791997     1.61176
          Okatale  |    .200963   .4460237     0.45   0.653    -.6762783    1.078204
         Okelemba  |   .2190954   .4276179     0.51   0.609    -.6219453    1.060136
         Omahenge  |   .4006316   .4696826     0.85   0.394    -.5231421    1.324405
         Omakango  |  -.0594688   .4918662    -0.12   0.904    -1.026873    .9079357
         Omalyata  |   .3449401    .460573     0.75   0.454    -.5609169    1.250797
          Omaputo  |  -.1502369   .4760151    -0.32   0.752    -1.086466    .7859916
          Omukuve  |   .3574597   .4513268     0.79   0.429    -.5302117    1.245131
Omutwe Oshimbungu  |   .1752763   .4832945     0.36   0.717    -.7752695    1.125822
         Onangwhe  |   .7987806   .4775939     1.67   0.095    -.1405532    1.738114
    Onekwaya East  |   .7645445   .4521417     1.69   0.092    -.1247297    1.653819
    Onekwaya West  |  -.3536827   .5304743    -0.67   0.505    -1.397022    .6896564
         Onengali  |   .8570611   .4781265     1.79   0.074    -.0833201    1.797442
          Ongonga  |   .3030627   .5027781     0.60   0.547    -.6858034    1.291929
        Onheleiwa  |   1.259779    .452481     2.78   0.006     .3698379    2.149721
      Oshikwiyu 1  |   .9679903   .4408178     2.20   0.029     .1009881    1.834993
      Oshikwiyu 2  |    .046949   .4978082     0.09   0.925    -.9321423     1.02604
          Ouhongo  |   .7186967   .4882986     1.47   0.142     -.241691    1.679084
                   |
             _cons |  -.1293054     .36416    -0.36   0.723    -.8455369    .5869261
------------------------------------------------------------------------------------

. eststo reg_satisfaction: reg satisfaction_leader rule_base2 rule_base3 i.village, vce(robust)

Linear regression                               Number of obs     =        384
                                                F(33, 350)        =       1.62
                                                Prob > F          =     0.0193
                                                R-squared         =     0.1226
                                                Root MSE          =     .65223

------------------------------------------------------------------------------------
                   |               Robust
satisfaction_lea~r |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------------+----------------------------------------------------------------
        rule_base2 |   -.358179   .1199986    -2.98   0.003    -.5941881   -.1221699
        rule_base3 |  -.2967078   .1229121    -2.41   0.016     -.538447   -.0549687
                   |
           village |
            Ehafo  |   .1874999   .2924635     0.64   0.522    -.3877071     .762707
           Endola  |   .1915895   .3034727     0.63   0.528      -.40527     .788449
        Epatululo  |      .3375   .3173276     1.06   0.288    -.2866089    .9616089
            Epuku  |  -.2209105   .3065403    -0.72   0.472    -.8238032    .3819822
            Etale  |  -.2229939   .3493882    -0.64   0.524    -.9101583    .4641706
         Etilashi  |   .0437499   .3591033     0.12   0.903    -.6625218    .7500217
           Etomba  |  -.2020834   .2887129    -0.70   0.484    -.7699139    .3657471
        Ohangwena  |   .3353394   .2888458     1.16   0.246    -.2327523    .9034312
       Oipapakane  |   .2062499   .3038216     0.68   0.498    -.3912957    .8037955
          Okadiwa  |     .36875   .2812437     1.31   0.191    -.1843903    .9218902
          Okafitu  |   .1504372   .3234825     0.47   0.642    -.4857769    .7866513
           Okakwa  |   .2374228   .2795042     0.85   0.396    -.3122963     .787142
         Okangudi  |   .3436728   .3049252     1.13   0.260    -.2560434     .943389
        Okapundja  |   .4025205   .2978602     1.35   0.177    -.1833004    .9883415
          Okatale  |   .1337705   .2947688     0.45   0.650    -.4459704    .7135114
         Okelemba  |   .1458333   .2838147     0.51   0.608    -.4123636    .7040302
         Omahenge  |   .2666666   .3117335     0.86   0.393      -.34644    .8797731
         Omakango  |  -.0395834   .3264571    -0.12   0.904    -.6816477    .6024809
         Omalyata  |   .2296039   .3002282     0.76   0.445    -.3608743    .8200822
          Omaputo  |        -.1   .3159365    -0.32   0.752    -.7213729    .5213728
          Omukuve  |   .2379372    .298702     0.80   0.426    -.3495395    .8254139
Omutwe Oshimbungu  |   .1166666   .3207679     0.36   0.716    -.5142085    .7475418
         Onangwhe  |   .5316872   .3109826     1.71   0.088    -.0799425    1.143317
    Onekwaya East  |   .5498457   .3088478     1.78   0.076    -.0575854    1.157277
    Onekwaya West  |  -.2354167   .3520817    -0.67   0.504    -.9278786    .4570452
         Onengali  |   .5295267   .3106328     1.70   0.089    -.0814151    1.140468
          Ongonga  |   .1607767   .3359346     0.48   0.633    -.4999276    .8214811
        Onheleiwa  |     .75661   .2810407     2.69   0.007      .203869    1.309351
      Oshikwiyu 1  |   .6852623   .3040821     2.25   0.025     .0872042     1.28332
      Oshikwiyu 2  |     .03125   .3304008     0.09   0.925    -.6185708    .6810707
          Ouhongo  |   .4374228    .320296     1.37   0.173    -.1925242     1.06737
                   |
             _cons |   3.704167    .241697    15.33   0.000     3.228805    4.179528
------------------------------------------------------------------------------------

. est store satisfaction

. 
. coefplot (satisfaction), keep(rule_base2 rule_base3) coeflabels(rule_base2 = "Baseline: Pseudo-democratic rule" rule_base3 = "Baseline: Autocratic rule
> ") xline(0, lpattern(dash) lcolor(gs3))  xtitle("Regression estimated imppact relative to 'Baseline: Democratic rule'") xla(-1(0.25)0.25, nogrid) grid(
> none) levels(95 90) ciopts(lwidth(0.3 1) lcolor(*.8 *.2)   recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", ""))))
>  mlabsize(9pt) mlabposition(12) mlabgap(-0.1) 
(note:  named style medthin not found in class linestyle, default attributes used)

. gr save "$working_ANALYSIS/results/intermediate/figure6_satisfaction_villagers.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure6_satisfaction_villagers.
> gph saved)

. gr export "$working_ANALYSIS/results/figures/figure6_satisfaction_villagers.tif", replace width(3465)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure6_satisfaction_villagers.tif w
> ritten in TIFF format)

. 
. restore

. 
. 
. 
. 
. 
. *--------------------------------------------------------------
. * Analysis for supplementary online materials (SOM)
. *--------------------------------------------------------------
. *Table S1.      Time schedule of field implementation
. *created in word
. 
. 
. * Figure S1.    Minimal detectable effect size: Within-subject design
. *power analysis: MDES with 80% power
. power pairedproportions 0.64, corr(0.39) diff(0(0.01)0.2) alpha(0.05 0.1) n(64)

Estimated power for a two-sample paired-proportions test
Large-sample McNemar's test
Ho: p+1 = p1+  versus  Ha: p+1 != p1+

  +-----------------------------------------------------------------+
  |   alpha   power       N   delta  pmarg1  pmarg2    corr    diff |
  |-----------------------------------------------------------------|
  |     .05       .       .       .     .64     .64     .39       0 |
  |     .05  .05259      64     .01     .64     .65     .39     .01 |
  |     .05  .06045      64     .02     .64     .66     .39     .02 |
  |     .05   .0738      64     .03     .64     .67     .39     .03 |
  |     .05   .0929      64     .04     .64     .68     .39     .04 |
  |     .05    .118      64     .05     .64     .69     .39     .05 |
  |     .05   .1494      64     .06     .64      .7     .39     .06 |
  |     .05    .187      64     .07     .64     .71     .39     .07 |
  |     .05    .231      64     .08     .64     .72     .39     .08 |
  |     .05   .2808      64     .09     .64     .73     .39     .09 |
  |     .05   .3359      64      .1     .64     .74     .39      .1 |
  |     .05   .3953      64     .11     .64     .75     .39     .11 |
  |     .05   .4578      64     .12     .64     .76     .39     .12 |
  |     .05    .522      64     .13     .64     .77     .39     .13 |
  |     .05   .5862      64     .14     .64     .78     .39     .14 |
  |     .05   .6487      64     .15     .64     .79     .39     .15 |
  |     .05   .7081      64     .16     .64      .8     .39     .16 |
  |     .05   .7628      64     .17     .64     .81     .39     .17 |
  |     .05   .8118      64     .18     .64     .82     .39     .18 |
  |     .05   .8545      64     .19     .64     .83     .39     .19 |
  |     .05   .8905      64      .2     .64     .84     .39      .2 |
  |     .05       .      64       .     .64     .64     .39       0 |
  |      .1   .1038      64     .01     .64     .65     .39     .01 |
  |      .1   .1154      64     .02     .64     .66     .39     .02 |
  |      .1   .1346      64     .03     .64     .67     .39     .03 |
  |      .1   .1616      64     .04     .64     .68     .39     .04 |
  |      .1    .196      64     .05     .64     .69     .39     .05 |
  |      .1   .2376      64     .06     .64      .7     .39     .06 |
  |      .1   .2857      64     .07     .64     .71     .39     .07 |
  |      .1   .3395      64     .08     .64     .72     .39     .08 |
  |      .1   .3979      64     .09     .64     .73     .39     .09 |
  |      .1   .4595      64      .1     .64     .74     .39      .1 |
  |      .1   .5229      64     .11     .64     .75     .39     .11 |
  |      .1   .5864      64     .12     .64     .76     .39     .12 |
  |      .1   .6484      64     .13     .64     .77     .39     .13 |
  |      .1   .7072      64     .14     .64     .78     .39     .14 |
  |      .1   .7615      64     .15     .64     .79     .39     .15 |
  |      .1   .8104      64     .16     .64      .8     .39     .16 |
  |      .1   .8529      64     .17     .64     .81     .39     .17 |
  |      .1   .8889      64     .18     .64     .82     .39     .18 |
  |      .1   .9184      64     .19     .64     .83     .39     .19 |
  |      .1   .9419      64      .2     .64     .84     .39      .2 |
  +-----------------------------------------------------------------+
   Warning: some of the computations failed; execute each computation separately to see the specific error

. *MDES alpha 0.05 --> d=0.18, alpha 0.1 --> d=0.16
. 
. power pairedproportions 0.64, corr(0.39) diff(0(0.01)0.2) n(64) table(alpha power beta N delta:"Difference in proportion to select democratic rule") gr
> aph(ytitle(Effect size) xline(0.8, lcolor(538b) lpattern(dash)) yline(0.178, lpattern(dash)) title("") legend(ring(1) rows(1) pos(6)) xdimension(power)
>  xla(0(0.1)1, nogrid) yla(0(0.02)0.2, nogrid) ydimension(diff)) 

Estimated power for a two-sample paired-proportions test
Large-sample McNemar's test
Ho: p+1 = p1+  versus  Ha: p+1 != p1+

  +------------------------------------------------------------------------------------+
  |   alpha   power    beta       N Difference in proportion to select democratic rule |
  |------------------------------------------------------------------------------------|
  |     .05       .       .       .                                                  . |
  |     .05  .05259   .9474      64                                                .01 |
  |     .05  .06045   .9396      64                                                .02 |
  |     .05   .0738   .9262      64                                                .03 |
  |     .05   .0929   .9071      64                                                .04 |
  |     .05    .118    .882      64                                                .05 |
  |     .05   .1494   .8506      64                                                .06 |
  |     .05    .187    .813      64                                                .07 |
  |     .05    .231    .769      64                                                .08 |
  |     .05   .2808   .7192      64                                                .09 |
  |     .05   .3359   .6641      64                                                 .1 |
  |     .05   .3953   .6047      64                                                .11 |
  |     .05   .4578   .5422      64                                                .12 |
  |     .05    .522    .478      64                                                .13 |
  |     .05   .5862   .4138      64                                                .14 |
  |     .05   .6487   .3513      64                                                .15 |
  |     .05   .7081   .2919      64                                                .16 |
  |     .05   .7628   .2372      64                                                .17 |
  |     .05   .8118   .1882      64                                                .18 |
  |     .05   .8545   .1455      64                                                .19 |
  |     .05   .8905   .1095      64                                                 .2 |
  +------------------------------------------------------------------------------------+
   Warning: some of the computations failed; execute each computation separately to see the specific error
(note:  named style 538b not found in class color, default attributes used)

. gr save  "$working_ANALYSIS/results/intermediate/figureS1_MDES.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figureS1_MDES.gph saved)

. gr export "$working_ANALYSIS/results/figures/figureS1_MDES.tif", replace width(4000)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figureS1_MDES.tif written in TIFF fo
> rmat)

. 
. 
. *Figure S2.     Equivalence tests
. *created in R with the openly accessible  package ‘TOSTER’ by Caldwell (2022).
. 
. 
. preserve

. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. 
. 
. * Table S2.     Participants characteristics
. global controls2 male age education rootedness pca_wealth d3a d3c 

. iebaltab $controls2, grpvar(id1) rowvarlabels format(%9.2f) stdev ftest fmissok tblnonote save("$working_ANALYSIS/results/tables/tableS2_sample_charact
> eristics.xlsx") replace
    Balance table saved to: C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for
        democracy\analysis/results/tables/tableS2_sample_characteristics.xlsx

. prtest male, by(villager)

Two-sample test of proportions                     0: Number of obs =       64
                                                   1: Number of obs =      383
------------------------------------------------------------------------------
       Group |       Mean   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
           0 |     .71875   .0562012                      .6085978    .8289022
           1 |    .381201   .0248172                      .3325603    .4298418
-------------+----------------------------------------------------------------
        diff |    .337549   .0614366                      .2171353    .4579626
             |  under Ho:   .0668463     5.05   0.000
------------------------------------------------------------------------------
        diff = prop(0) - prop(1)                                  z =   5.0496
    Ho: diff = 0

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(Z < z) = 1.0000         Pr(|Z| > |z|) = 0.0000          Pr(Z > z) = 0.0000

. foreach x of varlist age education rootedness pca_wealth d3a d3c {
  2.         ranksum `x', by(villager)
  3.         }

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64       21611       14336
           1 |      383       78517       85792
-------------+---------------------------------
    combined |      447      100128      100128

unadjusted variance   915114.67
adjustment for ties     -459.84
                     ----------
adjusted variance     914654.83

Ho: age(villager==0) = age(villager==1)
             z =   7.607
    Prob > |z| =   0.0000

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       63     12355.5       14049
           1 |      382     86879.5       85186
-------------+---------------------------------
    combined |      445       99235       99235

unadjusted variance   894453.00
adjustment for ties   -19195.80
                     ----------
adjusted variance     875257.20

Ho: educat~n(villager==0) = educat~n(villager==1)
             z =  -1.810
    Prob > |z| =   0.0703

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64       11164       14368
           1 |      384       89412       86208
-------------+---------------------------------
    combined |      448      100576      100576

unadjusted variance   919552.00
adjustment for ties  -239244.82
                     ----------
adjusted variance     680307.18

Ho: rooted~s(villager==0) = rooted~s(villager==1)
             z =  -3.885
    Prob > |z| =   0.0001

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64     18992.5       13824
           1 |      367     74103.5       79272
-------------+---------------------------------
    combined |      431       93096       93096

unadjusted variance   845568.00
adjustment for ties    -2070.36
                     ----------
adjusted variance     843497.64

Ho: pca_we~h(villager==0) = pca_we~h(villager==1)
             z =   5.628
    Prob > |z| =   0.0000

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64       18709       14176
           1 |      378       79194       83727
-------------+---------------------------------
    combined |      442       97903       97903

unadjusted variance   893088.00
adjustment for ties   -66216.48
                     ----------
adjusted variance     826871.52

Ho: d3a(villager==0) = d3a(villager==1)
             z =   4.985
    Prob > |z| =   0.0000

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64     17714.5       14176
           1 |      378     80188.5       83727
-------------+---------------------------------
    combined |      442       97903       97903

unadjusted variance   893088.00
adjustment for ties   -29599.40
                     ----------
adjusted variance     863488.60

Ho: d3c(villager==0) = d3c(villager==1)
             z =   3.808
    Prob > |z| =   0.0001

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

. reg id1 $controls2 if id1 !=0 // chiefs vs villagers

      Source |       SS           df       MS      Number of obs   =       394
-------------+----------------------------------   F(7, 386)       =     29.30
       Model |  10.2010544         7  1.45729349   Prob > F        =    0.0000
    Residual |  19.1999608       386  .049740831   R-squared       =    0.3470
-------------+----------------------------------   Adj R-squared   =    0.3351
       Total |  29.4010152       393  .074811744   Root MSE        =    .22303

------------------------------------------------------------------------------
         id1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        male |  -.1296617   .0236755    -5.48   0.000    -.1762108   -.0831127
         age |  -.0066006   .0007591    -8.69   0.000    -.0080931    -.005108
   education |  -.0078332   .0040656    -1.93   0.055    -.0158267    .0001603
  rootedness |   .0907614    .039103     2.32   0.021     .0138798     .167643
  pca_wealth |  -.0293369   .0074095    -3.96   0.000     -.043905   -.0147688
         d3a |    .000388   .0006738     0.58   0.565    -.0009367    .0017128
         d3c |    -.00293   .0008376    -3.50   0.001    -.0045769   -.0012831
       _cons |   2.269217   .0634849    35.74   0.000     2.144398    2.394037
------------------------------------------------------------------------------

. reg id1 $controls2 if id1 !=1 // DEL vs villagers

      Source |       SS           df       MS      Number of obs   =       393
-------------+----------------------------------   F(7, 385)       =      4.80
       Model |  9.17075049         7  1.31010721   Prob > F        =    0.0000
    Residual |  105.048079       385  .272852153   R-squared       =    0.0803
-------------+----------------------------------   Adj R-squared   =    0.0636
       Total |   114.21883       392  .291374565   Root MSE        =    .52235

------------------------------------------------------------------------------
         id1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        male |  -.0322257   .0555344    -0.58   0.562    -.1414145    .0769631
         age |  -.0097613   .0019009    -5.13   0.000    -.0134988   -.0060238
   education |  -.0229965    .009749    -2.36   0.019    -.0421644   -.0038286
  rootedness |   .1147954   .0918885     1.25   0.212    -.0658707    .2954616
  pca_wealth |   -.039424   .0183658    -2.15   0.032    -.0755339   -.0033141
         d3a |   .0002838   .0016126     0.18   0.860    -.0028868    .0034543
         d3c |  -.0012367   .0024103    -0.51   0.608    -.0059757    .0035024
       _cons |   2.337824   .1550281    15.08   0.000     2.033017    2.642632
------------------------------------------------------------------------------

. * Leaders only
. global controls1 male age education rootedness pca_wealth d3a d3c  married experience motivation helpauthentic

. iebaltab $controls1, grpvar(TL) rowvarlabels format(%9.2f) stdev ftest fmissok tblnonote save("$working_ANALYSIS/results/tables/tableS2_leaders_charact
> eristics.xlsx") replace
    Balance table saved to: C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for
        democracy\analysis/results/tables/tableS2_leaders_characteristics.xlsx

. reg TL $controls1

      Source |       SS           df       MS      Number of obs   =        63
-------------+----------------------------------   F(11, 51)       =      4.42
       Model |  7.68364189        11  .698512899   Prob > F        =    0.0001
    Residual |  8.06238986        51  .158086076   R-squared       =    0.4880
-------------+----------------------------------   Adj R-squared   =    0.3775
       Total |  15.7460317        62  .253968254   Root MSE        =     .3976

-------------------------------------------------------------------------------
           TL |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
--------------+----------------------------------------------------------------
         male |   .5756709   .1515165     3.80   0.000     .2714888    .8798529
          age |  -.0013323    .004849    -0.27   0.785    -.0110671    .0084025
    education |   .0115139   .0171882     0.67   0.506    -.0229929    .0460208
   rootedness |  -.3209752    .192027    -1.67   0.101    -.7064855    .0645352
   pca_wealth |   .0641615   .0340908     1.88   0.066    -.0042786    .1326016
          d3a |  -.0022809   .0048669    -0.47   0.641    -.0120516    .0074897
          d3c |   .0026512     .00324     0.82   0.417    -.0038534    .0091558
      married |  -.1502687   .1648473    -0.91   0.366    -.4812135     .180676
   experience |   .0104446   .0052226     2.00   0.051    -.0000402    .0209294
   motivation |  -.1329139   .1301428    -1.02   0.312    -.3941865    .1283587
helpauthentic |  -.0045327   .0140829    -0.32   0.749    -.0328052    .0237399
        _cons |   .3461321   .3151008     1.10   0.277    -.2864591    .9787234
-------------------------------------------------------------------------------

. 
. 
. *Table S3.      Summary statistics of  main outcomes for leaders
. * Stage 1 rule choices by leaders
. estpost tabulate rule1 

       rule1 |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
  Democratic |        41    64.0625    64.0625 
Pseudo-dem~c |        14     21.875    85.9375 
  Autocratic |         9    14.0625        100 
-------------+---------------------------------
       Total |        64        100            

. esttab using "$output\tableS3_outcome-variables.rtf", cell("b pct(fmt(0)) cumpct(fmt(0))") unstack noobs replace
(output written to \tableS3_outcome-variables.rtf)

. estpost tabulate rule5

       rule5 |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
  Democratic |        41    64.0625    64.0625 
Pseudo-dem~c |        20      31.25    95.3125 
  Autocratic |         3     4.6875        100 
-------------+---------------------------------
       Total |        64        100            

. esttab using "$output\tableS3_outcome-variables.rtf", cell("b pct(fmt(0)) cumpct(fmt(0))") unstack noobs append
(output written to \tableS3_outcome-variables.rtf)

. estpost tabulate rule6

       rule6 |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
  Democratic |        41    64.0625    64.0625 
Pseudo-dem~c |        21    32.8125     96.875 
  Autocratic |         2      3.125        100 
-------------+---------------------------------
       Total |        64        100            

. esttab using "$output\tableS3_outcome-variables.rtf", cell("b pct(fmt(0)) cumpct(fmt(0))") unstack noobs append
(output written to \tableS3_outcome-variables.rtf)

. 
. * Stage 2 distribution decisions by leaders
. estpost tabulate  vote1  if id <65 & rule1==1

       vote1 |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
Distributi~A |        19   46.34146   46.34146 
Distributi~B |        22   53.65854        100 
-------------+---------------------------------
       Total |        41        100            

. bysort rule1: tab vote1 if id <65

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule1 = Democratic

    Benefit to |
 leader at the |
    expense of |
     villagers |      Freq.     Percent        Cum.
---------------+-----------------------------------
Distribution A |         19       46.34       46.34
Distribution B |         22       53.66      100.00
---------------+-----------------------------------
         Total |         41      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule1 = Pseudo-democratic

    Benefit to |
 leader at the |
    expense of |
     villagers |      Freq.     Percent        Cum.
---------------+-----------------------------------
Distribution A |          9       64.29       64.29
Distribution B |          5       35.71      100.00
---------------+-----------------------------------
         Total |         14      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule1 = Autocratic

    Benefit to |
 leader at the |
    expense of |
     villagers |      Freq.     Percent        Cum.
---------------+-----------------------------------
Distribution A |          6       66.67       66.67
Distribution B |          3       33.33      100.00
---------------+-----------------------------------
         Total |          9      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule1 = .
no observations


. bysort rule5: tab vote5 if id <65

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule5 = Democratic

Small bonus |
  (+10) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |         17       41.46       41.46
    Chose B |         24       58.54      100.00
------------+-----------------------------------
      Total |         41      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule5 = Pseudo-democratic

Small bonus |
  (+10) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |         15       75.00       75.00
    Chose B |          5       25.00      100.00
------------+-----------------------------------
      Total |         20      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule5 = Autocratic

Small bonus |
  (+10) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |          2       66.67       66.67
    Chose B |          1       33.33      100.00
------------+-----------------------------------
      Total |          3      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule5 = .
no observations


. bysort rule6: tab vote6 if id <65

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule6 = Democratic

  Big bonus |
 (+100) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |         23       56.10       56.10
    Chose B |         18       43.90      100.00
------------+-----------------------------------
      Total |         41      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule6 = Pseudo-democratic

  Big bonus |
 (+100) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |         14       66.67       66.67
    Chose B |          7       33.33      100.00
------------+-----------------------------------
      Total |         21      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule6 = Autocratic

  Big bonus |
 (+100) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |          1       50.00       50.00
    Chose B |          1       50.00      100.00
------------+-----------------------------------
      Total |          2      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule6 = .
no observations


. 
. restore

. 
. 
. *Figure S3.     Order effects on rule choice in bonus rounds
. bysort bonus_size bonus_order: tab rule

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Baseline, bonus_order = Base-Large-Small

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         21       70.00       70.00
Pseudo-democratic |          4       13.33       83.33
       Autocratic |          5       16.67      100.00
------------------+-----------------------------------
            Total |         30      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Baseline, bonus_order = Base-Small-Large

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         20       58.82       58.82
Pseudo-democratic |         10       29.41       88.24
       Autocratic |          4       11.76      100.00
------------------+-----------------------------------
            Total |         34      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Small Bonus, bonus_order = Base-Large-Small

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         20       66.67       66.67
Pseudo-democratic |          8       26.67       93.33
       Autocratic |          2        6.67      100.00
------------------+-----------------------------------
            Total |         30      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Small Bonus, bonus_order = Base-Small-Large

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         21       61.76       61.76
Pseudo-democratic |         12       35.29       97.06
       Autocratic |          1        2.94      100.00
------------------+-----------------------------------
            Total |         34      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Large Bonus, bonus_order = Base-Large-Small

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         19       63.33       63.33
Pseudo-democratic |         10       33.33       96.67
       Autocratic |          1        3.33      100.00
------------------+-----------------------------------
            Total |         30      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Large Bonus, bonus_order = Base-Small-Large

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         22       64.71       64.71
Pseudo-democratic |         11       32.35       97.06
       Autocratic |          1        2.94      100.00
------------------+-----------------------------------
            Total |         34      100.00


. catplot rule bonus_order if decision > 1, over(bonus_size) percent(bonus_order bonus_size ) asyvar recast(bar) yla(0(20)100) blabel(bar, format(%9.0f) 
> pos(center)  gap(0.1)) b1title("") legend(ring(0) pos(12) rows(1))

. gr export "$working_ANALYSIS/results/figures/figureS3_order_effects.tif", replace width(5800)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figureS3_order_effects.tif written i
> n TIFF format)

. 
. tab rule bonus_order if decision > 1, chi2 exact

Enumerating sample-space combinations:
stage 3:  enumerations = 1
stage 2:  enumerations = 2
stage 1:  enumerations = 0

                  |      bonus_order
             rule | Base-Larg  Base-Smal |     Total
------------------+----------------------+----------
       Democratic |        39         43 |        82 
Pseudo-democratic |        18         23 |        41 
       Autocratic |         3          2 |         5 
------------------+----------------------+----------
            Total |        60         68 |       128 

          Pearson chi2(2) =   0.5069   Pr = 0.776
           Fisher's exact =                 0.811

. *no significant differences between the two randomization (small or large bonus round played first)
. 
. 
. *Table S4.      Sample splits by order of conditional payments
. *Order 1: Base-Large-Small
. eststo reg_time1: xtreg dem i.round if bonus_order==0, vce(robust)

Random-effects GLS regression                   Number of obs     =         90
Group variable: id                              Number of groups  =         30

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0033                                         max =          3

                                                Wald chi2(2)      =       0.39
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.8227

                                    (Std. Err. adjusted for 30 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |  -.0666667   .1077112    -0.62   0.536    -.2777768    .1444435
          3  |  -.0333333   .1026813    -0.32   0.745    -.2345849    .1679183
             |
       _cons |         .7   .0860689     8.13   0.000     .5313081    .8686919
-------------+----------------------------------------------------------------
     sigma_u |  .28432888
     sigma_e |  .38506605
         rho |  .35284281   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.14
         Prob > chi2 =    0.7127

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .71265666

. eststo reg_time2: xtreg fake i.round if bonus_order==0, vce(robust)

Random-effects GLS regression                   Number of obs     =         90
Group variable: id                              Number of groups  =         30

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0374                                         max =          3

                                                Wald chi2(2)      =       5.22
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.0735

                                    (Std. Err. adjusted for 30 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |         .2   .0894191     2.24   0.025     .0247418    .3752582
          3  |   .1333333   .0936999     1.42   0.155    -.0503151    .3169818
             |
       _cons |   .1333333   .0638457     2.09   0.037      .008198    .2584686
-------------+----------------------------------------------------------------
     sigma_u |  .23812808
     sigma_e |  .35665539
         rho |  .30833333   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.48
         Prob > chi2 =    0.4882

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .48820502

. eststo reg_time3: xtreg dic i.round if bonus_order==0, vce(robust)

Random-effects GLS regression                   Number of obs     =         90
Group variable: id                              Number of groups  =         30

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0396                                         max =          3

                                                Wald chi2(2)      =       2.82
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.2441

                                    (Std. Err. adjusted for 30 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |  -.1333333   .0801746    -1.66   0.096    -.2904728    .0238061
          3  |        -.1   .0743404    -1.35   0.179    -.2457044    .0457044
             |
       _cons |   .1666667   .0699955     2.38   0.017      .029478    .3038553
-------------+----------------------------------------------------------------
     sigma_u |  .07057509
     sigma_e |  .27473428
         rho |  .06190476   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.32
         Prob > chi2 =    0.5725

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .5724982

. 
. *Order 2: Base-Small-Large
. eststo reg_time4: xtreg dem i.round if bonus_order==1, vce(robust)

Random-effects GLS regression                   Number of obs     =        102
Group variable: id                              Number of groups  =         34

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0024                                         max =          3

                                                Wald chi2(2)      =       0.49
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.7814

                                    (Std. Err. adjusted for 34 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |   .0294118   .0903144     0.33   0.745    -.1476013    .2064248
          3  |   .0588235   .0846593     0.69   0.487    -.1071056    .2247527
             |
       _cons |   .5882353   .0865339     6.80   0.000      .418632    .7578386
-------------+----------------------------------------------------------------
     sigma_u |  .34985779
     sigma_e |  .34687297
         rho |  .50428397   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.14
         Prob > chi2 =    0.7118

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .71180246

. eststo reg_time5: xtreg fake i.round if bonus_order==1, vce(robust)

Random-effects GLS regression                   Number of obs     =        102
Group variable: id                              Number of groups  =         34

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0026                                         max =          3

                                                Wald chi2(2)      =       0.49
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.7814

                                    (Std. Err. adjusted for 34 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |   .0588235   .0846593     0.69   0.487    -.1071056    .2247527
          3  |   .0294118   .0903144     0.33   0.745    -.1476013    .2064248
             |
       _cons |   .2941176   .0801148     3.67   0.000     .1370955    .4511398
-------------+----------------------------------------------------------------
     sigma_u |  .32338083
     sigma_e |  .34687297
         rho |  .46499339   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.14
         Prob > chi2 =    0.7118

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .71180246

. eststo reg_time6: xtreg dic i.round if bonus_order==1, vce(robust)

Random-effects GLS regression                   Number of obs     =        102
Group variable: id                              Number of groups  =         34

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0313                                         max =          3

                                                Wald chi2(1)      =          .
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =          .

                                    (Std. Err. adjusted for 34 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |  -.0882353   .0656176    -1.34   0.179    -.2168434    .0403728
          3  |  -.0882353   .0656176    -1.34   0.179    -.2168434    .0403728
             |
       _cons |   .1176471   .0566497     2.08   0.038     .0066156    .2286785
-------------+----------------------------------------------------------------
     sigma_u |  .08618128
     sigma_e |  .21870357
         rho |   .1344086   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0
       Constraint 1 dropped

           chi2(  0) =       .
         Prob > chi2 =         .

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .

. 
. esttab reg_time1 reg_time2 reg_time3 reg_time4 reg_time5 reg_time6 using "$working_ANALYSIS\results\Tables\tableS4_order_effects.rtf", keep(2.round 3.r
> ound _cons) label se(%4.3f)  transform(ln*: exp(@) exp(@)) mgroups("Order 1: Base-Large-Small" "Order 2: Base-Small-Large", pattern(1 0 0 1 0 0)) mtitl
> es("Democratic" "Pseudo-democratic" "Dictator" "Democratic" "Pseudo-democratic" "Dictator") b(%4.3f) stats(N N_clust r2_o joint_test, fmt(0 0 3 3) labe
> ls("Observations" "Cluster" "Overall R-squared" "Test: Round 2 = Round 3 (chi2)" )) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(weight:_cons "{break
> }{hline @width}")) nonotes addnotes("Notes: Robust standard errors in brackets: * p < 0.10, ** p < 0.05, *** p < 0.01.") replace 
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS4_order_effects.rt
> f)

. 
. 
. *Table S5. Main treatment effects
. *stored before in main analysis
. 
. *Table S6.      Treatment effects seperately for chiefs and DELs
. *DEL only
. eststo reg_del1: xtprobit dem bonus bonus_order if TL==0, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =   -64.8446  
Iteration 1:   log pseudolikelihood = -64.702192  
Iteration 2:   log pseudolikelihood = -64.702189  

Fitting full model:

rho =  0.0     log pseudolikelihood = -64.702189
rho =  0.1     log pseudolikelihood = -61.662199
rho =  0.2     log pseudolikelihood = -59.214166
rho =  0.3     log pseudolikelihood = -57.207376
rho =  0.4     log pseudolikelihood =  -55.55525
rho =  0.5     log pseudolikelihood = -54.213309
rho =  0.6     log pseudolikelihood = -53.173382
rho =  0.7     log pseudolikelihood = -52.477597
rho =  0.8     log pseudolikelihood = -52.351833

Iteration 0:   log pseudolikelihood = -52.490192  
Iteration 1:   log pseudolikelihood = -52.001292  
Iteration 2:   log pseudolikelihood = -51.992761  
Iteration 3:   log pseudolikelihood = -51.992729  
Iteration 4:   log pseudolikelihood =  -51.99272  
Iteration 5:   log pseudolikelihood =  -51.99272  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =         96
Group variable: id                              Number of groups  =         32

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       0.39
Log pseudolikelihood  =  -51.99272              Prob > chi2       =     0.8215

                                    (Std. Err. adjusted for 32 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .2605404   .4349219     0.60   0.549    -.5918909    1.112972
 bonus_order |   .1143122   .8257757     0.14   0.890    -1.504178    1.732803
       _cons |    .289949   .6199466     0.47   0.640     -.925124    1.505022
-------------+----------------------------------------------------------------
    /lnsig2u |   1.297737     .65285                      .0181742    2.577299
-------------+----------------------------------------------------------------
     sigma_u |   1.913374   .6245732                      1.009129    3.627884
         rho |   .7854538   .1100157                      .5045434    .9293862
------------------------------------------------------------------------------

. eststo reg_del2: xtprobit fake bonus bonus_order if TL==0, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -58.811442  
Iteration 1:   log pseudolikelihood = -58.454962  
Iteration 2:   log pseudolikelihood = -58.454765  
Iteration 3:   log pseudolikelihood = -58.454765  

Fitting full model:

rho =  0.0     log pseudolikelihood = -58.454765
rho =  0.1     log pseudolikelihood = -56.253096
rho =  0.2     log pseudolikelihood = -54.581638
rho =  0.3     log pseudolikelihood =  -53.30674
rho =  0.4     log pseudolikelihood =  -52.35816
rho =  0.5     log pseudolikelihood = -51.709141
rho =  0.6     log pseudolikelihood = -51.378996
rho =  0.7     log pseudolikelihood = -51.476689

Iteration 0:   log pseudolikelihood = -51.370448  
Iteration 1:   log pseudolikelihood = -50.644871  
Iteration 2:   log pseudolikelihood = -50.611279  
Iteration 3:   log pseudolikelihood = -50.611225  
Iteration 4:   log pseudolikelihood = -50.611225  (backed up)

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =         96
Group variable: id                              Number of groups  =         32

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       1.05
Log pseudolikelihood  = -50.611225              Prob > chi2       =     0.5905

                                    (Std. Err. adjusted for 32 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .4046395    .406516     1.00   0.320    -.3921172    1.201396
 bonus_order |   .1025418   .6656078     0.15   0.878    -1.202026    1.407109
       _cons |  -1.224443   .5532215    -2.21   0.027    -2.308737   -.1401485
-------------+----------------------------------------------------------------
    /lnsig2u |   .7566546   .7113321                     -.6375307     2.15084
-------------+----------------------------------------------------------------
     sigma_u |   1.459841   .5192158                      .7270461    2.931224
         rho |    .680627    .154625                      .3458049    .8957472
------------------------------------------------------------------------------

. eststo reg_del3: xtprobit dic bonus bonus_order if TL==0, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -32.077708  
Iteration 1:   log pseudolikelihood = -30.077896  
Iteration 2:   log pseudolikelihood = -30.052602  
Iteration 3:   log pseudolikelihood = -30.052593  
Iteration 4:   log pseudolikelihood = -30.052593  

Fitting full model:

rho =  0.0     log pseudolikelihood = -30.052593
rho =  0.1     log pseudolikelihood = -29.725734
rho =  0.2     log pseudolikelihood = -29.680977
rho =  0.3     log pseudolikelihood = -29.882437

Iteration 0:   log pseudolikelihood = -29.680977  
Iteration 1:   log pseudolikelihood =  -29.18367  
Iteration 2:   log pseudolikelihood = -29.179457  
Iteration 3:   log pseudolikelihood = -29.179445  
Iteration 4:   log pseudolikelihood = -29.179445  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =         96
Group variable: id                              Number of groups  =         32

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       3.12
Log pseudolikelihood  = -29.179445              Prob > chi2       =     0.2098

                                    (Std. Err. adjusted for 32 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.8455278   .4834548    -1.75   0.080    -1.793082    .1020262
 bonus_order |  -.4412828   .5355935    -0.82   0.410    -1.491027    .6084612
       _cons |   -.904483   .4873957    -1.86   0.063    -1.859761     .050795
-------------+----------------------------------------------------------------
    /lnsig2u |  -.5058839   .7638826                     -2.003066    .9912985
-------------+----------------------------------------------------------------
     sigma_u |    .776513   .2965824                      .3673159    1.641564
         rho |   .3761589   .1792553                      .1188814    .7293443
------------------------------------------------------------------------------

. *TL only
. eststo reg_tl1: xtprobit dem bonus bonus_order if TL==1, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -59.624292  
Iteration 1:   log pseudolikelihood = -58.587478  
Iteration 2:   log pseudolikelihood = -58.586665  
Iteration 3:   log pseudolikelihood = -58.586665  

Fitting full model:

rho =  0.0     log pseudolikelihood = -58.586665
rho =  0.1     log pseudolikelihood = -57.430605
rho =  0.2     log pseudolikelihood = -56.694152
rho =  0.3     log pseudolikelihood = -56.296625
rho =  0.4     log pseudolikelihood = -56.205965
rho =  0.5     log pseudolikelihood = -56.428391

Iteration 0:   log pseudolikelihood = -56.206124  
Iteration 1:   log pseudolikelihood = -55.968731  
Iteration 2:   log pseudolikelihood = -55.963474  
Iteration 3:   log pseudolikelihood = -55.963468  
Iteration 4:   log pseudolikelihood = -55.963468  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =         96
Group variable: id                              Number of groups  =         32

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       1.34
Log pseudolikelihood  = -55.963468              Prob > chi2       =     0.5119

                                    (Std. Err. adjusted for 32 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.1729246    .349092    -0.50   0.620    -.8571324    .5112831
 bonus_order |   -.440891   .4305836    -1.02   0.306    -1.284819    .4030373
       _cons |   .9955562   .3871534     2.57   0.010     .2367494    1.754363
-------------+----------------------------------------------------------------
    /lnsig2u |  -.3566518   .7894161                     -1.903879    1.190575
-------------+----------------------------------------------------------------
     sigma_u |   .8366697   .3302403                      .3859917    1.813553
         rho |   .4117703   .1912088                      .1296701     .766844
------------------------------------------------------------------------------

. eststo reg_tl2: xtprobit fake bonus bonus_order if TL==1, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -56.072249  
Iteration 1:   log pseudolikelihood = -54.089786  
Iteration 2:   log pseudolikelihood =  -54.08234  
Iteration 3:   log pseudolikelihood =  -54.08234  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -54.08234
rho =  0.1     log pseudolikelihood = -52.725849
rho =  0.2     log pseudolikelihood = -51.796432
rho =  0.3     log pseudolikelihood = -51.206613
rho =  0.4     log pseudolikelihood = -50.917774
rho =  0.5     log pseudolikelihood = -50.927762

Iteration 0:   log pseudolikelihood = -50.917925  
Iteration 1:   log pseudolikelihood = -50.222479  
Iteration 2:   log pseudolikelihood = -50.221022  
Iteration 3:   log pseudolikelihood = -50.221022  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =         96
Group variable: id                              Number of groups  =         32

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       3.24
Log pseudolikelihood  = -50.221022              Prob > chi2       =     0.1979

                                    (Std. Err. adjusted for 32 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .5793174   .4072181     1.42   0.155    -.2188153     1.37745
 bonus_order |    .565667   .5143773     1.10   0.271    -.4424939    1.573828
       _cons |  -1.617239   .5380111    -3.01   0.003    -2.671722   -.5627569
-------------+----------------------------------------------------------------
    /lnsig2u |   .0973398   .7137629                      -1.30161    1.496289
-------------+----------------------------------------------------------------
     sigma_u |   1.049874   .3746805                      .5216257    2.113076
         rho |   .5243158   .1780187                      .2138942    .8170204
------------------------------------------------------------------------------

. eststo reg_tl3: xtprobit dic bonus bonus_order if TL==1, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =   -16.6277  
Iteration 1:   log pseudolikelihood = -15.147065  
Iteration 2:   log pseudolikelihood = -15.070779  
Iteration 3:   log pseudolikelihood = -15.070512  
Iteration 4:   log pseudolikelihood = -15.070512  

Fitting full model:

rho =  0.0     log pseudolikelihood = -15.070512
rho =  0.1     log pseudolikelihood = -15.193619

Iteration 0:   log pseudolikelihood = -15.193619  
Iteration 1:   log pseudolikelihood = -15.108766  
Iteration 2:   log pseudolikelihood = -15.092512  
Iteration 3:   log pseudolikelihood = -15.074223  
Iteration 4:   log pseudolikelihood = -15.071547  
Iteration 5:   log pseudolikelihood = -15.070758  
Iteration 6:   log pseudolikelihood = -15.070561  
Iteration 7:   log pseudolikelihood = -15.070521  
Iteration 8:   log pseudolikelihood = -15.070514  
Iteration 9:   log pseudolikelihood = -15.070514  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =         96
Group variable: id                              Number of groups  =         32

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       2.32
Log pseudolikelihood  = -15.070514              Prob > chi2       =     0.3134

                                    (Std. Err. adjusted for 32 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.8492874    .751461    -1.13   0.258    -2.322124     .623549
 bonus_order |   -.132417   .4375285    -0.30   0.762    -.9899572    .7251231
       _cons |  -1.246383    .847516    -1.47   0.141    -2.907483    .4147182
-------------+----------------------------------------------------------------
    /lnsig2u |  -12.88138   369894.7                     -724993.1    724967.3
-------------+----------------------------------------------------------------
     sigma_u |   .0015953   295.0476                             0           .
         rho |   2.54e-06   .9413778                             0           .
------------------------------------------------------------------------------

. 
. esttab reg_del1 reg_del2 reg_del3 reg_tl1 reg_tl2 reg_tl3 using "$working_ANALYSIS\results\Tables\tableS6_chiefs_DEL.rtf",  ci transform(ln*: exp(@) ex
> p(@))mtitles("Democratic" "Pseudo-democratic" "Dictator" "Democratic" "Pseudo-democratic" "Dictator") b(%4.2f) eqlabels("" "lnsig2u", none) stats(N N_g
>  sigma_u rho chi2 p, labels("N" "Individuals" "sigma_u" "rho" "Wald Chi2" "p" ) fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(
> weight:_cons "{break}{hline @width}")) replace 
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS6_chiefs_DEL.rtf)

. 
. 
. *Table S7.      Robustness check – Mixed effects regression
. * Treating participant as a random factor or use a simple linear model
. eststo reg_rb1: xtmixed dem bonus_2 bonus_3 bonus_order || id:, reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -122.20159  
Iteration 1:   log restricted-likelihood = -122.20159  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =        192
Group variable: id                              Number of groups  =         64

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(3)      =       0.26
Log restricted-likelihood = -122.20159          Prob > chi2       =     0.9674

------------------------------------------------------------------------------
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   3.05e-16   .0642931     0.00   1.000    -.1260121    .1260121
     bonus_3 |   1.94e-16   .0642931     0.00   1.000    -.1260121    .1260121
 bonus_order |  -.0490196   .0961789    -0.51   0.610    -.2375267    .1394875
       _cons |   .6666667   .0793229     8.40   0.000     .5111966    .8221367
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .3214593   .0420819      .2487116    .4154855
-----------------------------+------------------------------------------------
                sd(Residual) |   .3636965   .0229107      .3214537    .4114904
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 32.81         Prob >= chibar2 = 0.0000

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'´

added macro:
        e(individuals) : "64´"

. eststo reg_rb2: xtmixed fake bonus_2 bonus_3 bonus_order || id:,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -112.31687  
Iteration 1:   log restricted-likelihood = -112.31686  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =        192
Group variable: id                              Number of groups  =         64

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(3)      =       4.44
Log restricted-likelihood = -112.31686          Prob > chi2       =     0.2180

------------------------------------------------------------------------------
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |     .09375   .0621061     1.51   0.131    -.0279756    .2154756
     bonus_3 |    .109375   .0621061     1.76   0.078    -.0123506    .2311006
 bonus_order |    .079085   .0879801     0.90   0.369    -.0933529    .2515229
       _cons |   .1767361   .0734702     2.41   0.016     .0327373     .320735
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .2867424   .0396787      .2186275     .376079
-----------------------------+------------------------------------------------
                sd(Residual) |    .351325   .0221314      .3105191    .3974932
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 27.09         Prob >= chibar2 = 0.0000

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'´

added macro:
        e(individuals) : "64´"

. eststo reg_rb3: xtmixed dic bonus_2 bonus_3 bonus_order || id:,  reml 

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -19.252893  
Iteration 1:   log restricted-likelihood = -19.173457  
Iteration 2:   log restricted-likelihood =  -19.17325  
Iteration 3:   log restricted-likelihood =  -19.17325  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =        192
Group variable: id                              Number of groups  =         64

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(3)      =       8.02
Log restricted-likelihood =  -19.17325          Prob > chi2       =     0.0457

------------------------------------------------------------------------------
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |    -.09375   .0432786    -2.17   0.030    -.1785745   -.0089255
     bonus_3 |   -.109375   .0432786    -2.53   0.011    -.1941995   -.0245505
 bonus_order |  -.0300654   .0408055    -0.74   0.461    -.1100427    .0499119
       _cons |   .1565972   .0388449     4.03   0.000     .0804627    .2327318
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .0809833    .033279      .0361914    .1812114
-----------------------------+------------------------------------------------
                sd(Residual) |   .2448207   .0154223      .2163852     .276993
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 1.72          Prob >= chibar2 = 0.0946

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'´

added macro:
        e(individuals) : "64´"

. 
. esttab reg_rb1 reg_rb2 reg_rb3 using "$working_ANALYSIS\results\Tables\tableS7_rc_xtmixed.rtf",  ci transform(ln*: exp(@) exp(@))mtitles("Democratic" "
> Pseudo-democratic" "Dictator") b(%4.2f) eqlabels("" "sd(_cons)" "sd(Residual)", none) stats(N individuals chi2 p, labels("N" "Individuals" "Wald Chi2" 
> "p" ) fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(weight:_cons "{break}{hline @width}"))  replace 
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS7_rc_xtmixed.rtf)

. 
. 
. *Table S8.      Effects of bonus payments – Multinomial probit
. mprobit rule bonus_2 bonus_3 bonus_order, cluster(id)

Iteration 0:   log pseudolikelihood = -155.96029  
Iteration 1:   log pseudolikelihood =  -155.4905  
Iteration 2:   log pseudolikelihood = -155.48258  
Iteration 3:   log pseudolikelihood = -155.48257  

Multinomial probit regression                   Number of obs     =        192
                                                Wald chi2(6)      =       7.17
Log pseudolikelihood = -155.48257               Prob > chi2       =     0.3050

                                         (Std. Err. adjusted for 64 clusters in id)
-----------------------------------------------------------------------------------
                  |               Robust
             rule |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
Democratic        |  (base outcome)
------------------+----------------------------------------------------------------
Pseudo_democratic |
          bonus_2 |   .2766687   .2639683     1.05   0.295    -.2406998    .7940371
          bonus_3 |   .3177508   .2620714     1.21   0.225    -.1958997    .8314014
      bonus_order |   .3023284     .37056     0.82   0.415    -.4239558    1.028613
            _cons |  -1.060319   .3026821    -3.50   0.000    -1.653565   -.4670735
------------------+----------------------------------------------------------------
Autocratic        |
          bonus_2 |  -.6893181   .4174503    -1.65   0.099    -1.507506    .1288693
          bonus_3 |  -.9087708   .4965233    -1.83   0.067    -1.881939    .0643971
      bonus_order |  -.2001093   .4532496    -0.44   0.659    -1.088462    .6882436
            _cons |  -1.092758   .3556707    -3.07   0.002     -1.78986   -.3956564
-----------------------------------------------------------------------------------

. margins, dydx(bonus_2 bonus_3) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

dy/dx w.r.t. : bonus_2 bonus_3
1._predict   : Pr(rule==Democratic), predict(pr outcome(1))
2._predict   : Pr(rule==Pseudo-democratic), predict(pr outcome(2))
3._predict   : Pr(rule==Autocratic), predict(pr outcome(3))

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
bonus_2      |
    _predict |
          1  |  -.0132312   .0669098    -0.20   0.843    -.1443719    .1179095
          2  |   .0919615   .0625273     1.47   0.141    -.0305897    .2145127
          3  |  -.0787303   .0392565    -2.01   0.045    -.1556715   -.0017891
-------------+----------------------------------------------------------------
bonus_3      |
    _predict |
          1  |  -.0074632   .0664854    -0.11   0.911    -.1377722    .1228458
          2  |   .1096425   .0639036     1.72   0.086    -.0156063    .2348912
          3  |  -.1021792   .0486804    -2.10   0.036     -.197591   -.0067675
------------------------------------------------------------------------------

. est store bonus1

. outreg2 using  "$working_ANALYSIS/results/tables/tableS8_multi_probit", drop() addstat(Pseudo R-squared, e(r2_p))  adec(3) dec(3) word  replace
check eret list for the existence of e(r2_p)
C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/tables/tableS8_multi_probit.rtf
dir : seeout

. mprobit rule bonus bonus_order, cluster(id) level(90)

Iteration 0:   log pseudolikelihood = -156.05588  
Iteration 1:   log pseudolikelihood = -155.59802  
Iteration 2:   log pseudolikelihood = -155.59245  
Iteration 3:   log pseudolikelihood = -155.59245  

Multinomial probit regression                   Number of obs     =        192
                                                Wald chi2(4)      =       7.06
Log pseudolikelihood = -155.59245               Prob > chi2       =     0.1327

                                         (Std. Err. adjusted for 64 clusters in id)
-----------------------------------------------------------------------------------
                  |               Robust
             rule |      Coef.   Std. Err.      z    P>|z|     [90% Conf. Interval]
------------------+----------------------------------------------------------------
Democratic        |  (base outcome)
------------------+----------------------------------------------------------------
Pseudo_democratic |
            bonus |   .2975364   .2353973     1.26   0.206    -.0896577    .6847306
      bonus_order |   .3016971   .3706743     0.81   0.416    -.3080079     .911402
            _cons |  -1.059987   .3027227    -3.50   0.000    -1.557921   -.5620521
------------------+----------------------------------------------------------------
Autocratic        |
            bonus |  -.7899665   .4054291    -1.95   0.051    -1.456838    -.123095
      bonus_order |  -.2020001    .453668    -0.45   0.656    -.9482176    .5442174
            _cons |  -1.091828    .356129    -3.07   0.002    -1.677608   -.5060479
-----------------------------------------------------------------------------------

. margins, dydx(bonus) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

dy/dx w.r.t. : bonus
1._predict   : Pr(rule==Democratic), predict(pr outcome(1))
2._predict   : Pr(rule==Pseudo-democratic), predict(pr outcome(2))
3._predict   : Pr(rule==Autocratic), predict(pr outcome(3))

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
bonus        |
    _predict |
          1  |  -.0109626   .0598247    -0.18   0.855     -.128217    .1062917
          2  |    .100676    .056045     1.80   0.072    -.0091703    .2105222
          3  |  -.0897134   .0386461    -2.32   0.020    -.1654584   -.0139683
------------------------------------------------------------------------------

. est store bonus2

. outreg2 using "$working_ANALYSIS/results/tables/tableS8_multi_probit", drop() addstat(Pseudo R-squared, e(r2_p))  adec(3) dec(3) word  append
check eret list for the existence of e(r2_p)
C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/tables/tableS8_multi_probit.rtf
dir : seeout

. 
. 
. 
. *Table S9.      Subsample treatment effects on democratic rule choices
. *stored before under main analysis
. 
. 
. *Table S10.     Robustness check: Authentic leadership score median split
. 
. eststo sub1_rc: xtmixed dem i.bonus bonus_order  || id: if type_AL==1,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -17.699032  
Iteration 1:   log restricted-likelihood = -17.699018  
Iteration 2:   log restricted-likelihood = -17.699018  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         33
Group variable: id                              Number of groups  =         11

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =       8.82
Log restricted-likelihood = -17.699018          Prob > chi2       =     0.0122

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |   .3636364   .1238882     2.94   0.003     .1208199    .6064528
          bonus_order |  -.1111111   .2456759    -0.45   0.651    -.5926271    .3704048
                _cons |   .0909091   .2370742     0.38   0.701    -.3737478     .555566
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .2474821   .0969293      .1148578    .5332453
-----------------------------+------------------------------------------------
                sd(Residual) |   .3354909   .0517674      .2479348    .4539666
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 3.25          Prob >= chibar2 = 0.0358

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "11"

. eststo sub2_rc: xtmixed dem i.bonus bonus_order  || id: if type_AL==2,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -21.508732  
Iteration 1:   log restricted-likelihood = -21.507408  
Iteration 2:   log restricted-likelihood = -21.507408  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         36
Group variable: id                              Number of groups  =         12

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =       9.76
Log restricted-likelihood = -21.507408          Prob > chi2       =     0.0076

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |   .4166667   .1334691     3.12   0.002      .155072    .6782614
          bonus_order |  -.0190476   .1707925    -0.11   0.911    -.3537947    .3156995
                _cons |   .0079365    .141674     0.06   0.955    -.2697395    .2856125
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .1938436   .1045827      .0673302    .5580753
-----------------------------+------------------------------------------------
                sd(Residual) |   .3775077   .0556605      .2827633    .5039978
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 1.26          Prob >= chibar2 = 0.1306

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals' 

added macro:
        e(individuals) : "12"

. eststo sub3_rc: xtmixed dem i.bonus bonus_order  || id: if type_AL==3,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood =   -25.8423  
Iteration 1:   log restricted-likelihood = -25.842247  
Iteration 2:   log restricted-likelihood = -25.842247  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         69
Group variable: id                              Number of groups  =         23

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =      12.62
Log restricted-likelihood = -25.842247          Prob > chi2       =     0.0018

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |  -.2391304   .0741117    -3.23   0.001    -.3843867   -.0938742
          bonus_order |   .1590909   .1070566     1.49   0.137    -.0507361     .368918
                _cons |    .916996   .0917651     9.99   0.000     .7371397    1.096852
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .1941747   .0544467      .1120767    .3364108
-----------------------------+------------------------------------------------
                sd(Residual) |   .2902051   .0305903      .2360372    .3568039
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 5.60          Prob >= chibar2 = 0.0090

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "23"

. eststo sub4_rc: xtmixed dem i.bonus bonus_order  || id: if type_AL==4,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -20.369588  
Iteration 1:   log restricted-likelihood = -20.329371  
Iteration 2:   log restricted-likelihood = -20.329371  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         54
Group variable: id                              Number of groups  =         18

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =       4.94
Log restricted-likelihood = -20.329371          Prob > chi2       =     0.0844

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |  -.1944444   .0918889    -2.12   0.034    -.3745433   -.0143456
          bonus_order |  -.0666667   .0976281    -0.68   0.495    -.2580143    .1246809
                _cons |    1.02963   .0893801    11.52   0.000     .8544478    1.204811
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .0926653   .0918057      .0132927    .6459847
-----------------------------+------------------------------------------------
                sd(Residual) |   .3183123   .0380456      .2518346    .4023384
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 0.29          Prob >= chibar2 = 0.2953

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "18"

. 
. 
. esttab sub1_rc sub2_rc sub3_rc sub4_rc using "$working_ANALYSIS\results\tables\tableS10_social_norms_boxes_democratic_rc.rtf",  label se(%4.3f)  transf
> orm(ln*: exp(@) exp(@)) mgroups("Democratic Rule (=1)", pattern(1 0 0))   mtitles("Box 1" "Box 2" "Box 3" "Box 4") b(%4.3f) stats(N individuals chi2 p,
>  labels("N" "Individuals" "Wald Chi2" "p" ) fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(weight:_cons "{break}{hline @width}"
> )) nonotes addnotes("Notes: Estimates are from multilevel panel regressions that account for the grouping structure of the data at the individual level
>  (random intercept). Standard errors with stars indicating the following significant levels: * p < 0.10, ** p < 0.05, *** p < 0.01") replace 
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\tables\tableS10_social_norms_bo
> xes_democratic_rc.rtf)

. 
. 
. *Figure S4.     Subsample treatment effects: Robustness check with authentic leadership
. coefplot (sub1_rc, label (Box I)) (sub2_rc, label (Box III))  (sub3_rc, label (Box II))  (sub4_rc, label (Box IV)) , keep(1.bonus) coeflabels(1.bonus =
>  "Pooled Bonus")  byopts(xrescale) xline(0, lpattern(dash) lcolor(gs3)) xtitle("Regression estimated impact relative to baseline in pp") grid(none) lev
> els(95 90) ciopts(lwidth(0.8 2)  lcolor(*1 *.3) recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", "")))) msize(3pt)
>  msymbol(D) mlabsize(8pt) mlabposition(1) mlabgap(-0.4) subtitle(, size(6pt) lstyle(none) margin(medium) nobox justification(left)  bmargin(top))  xla(
> -50(25)75, nogrid)  xsize(3.465) ysize(2) scale(1.2)
(note:  named style medthin not found in class linestyle, default attributes used)

. gr_edit style.editstyle margin(vsmall) editcopy

. gr save  "$working_ANALYSIS\results\intermediate\figureS4_subsample_democratic.gph", replace
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\intermediate\figureS4_subsample_democr
> atic.gph not found)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\intermediate\figureS4_subsample_democratic.g
> ph saved)

. gr export "$working_ANALYSIS\results\figures\figureS4_subsample_democratic.tif", replace width(4000) 
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\figures\figureS4_subsample_democratic.
> tif not found)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\figures\figureS4_subsample_democratic.tif wr
> itten in TIFF format)

. 
. 
. *Table S11.     Villager satisfaction with different leader types
. esttab reg_satisfaction using "$working_ANALYSIS\results\Tables\tableS11.rtf", keep(leader_type2 leader_type3 leader_type4 leader_type5) ci transform(l
> n*: exp(@) exp(@))mtitles("Satisfaction") b(%4.2f) eqlabels("" "lnsig2u", none) stats(N N_g r2 r2_a , labels("N" "Individuals" "R-squared" "Adjusted R-
> squared") fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(weight:_cons "{break}{hline @width}")) replace 
estimation result reg_satisfaction not found
r(111);

end of do-file

r(111);

. do "C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\scripts\03_analysis.do"

. *--------------------------------------------------------------------
. * SCRIPT: 03_analysis.do
. * PURPOSE: replicates the tables and figures and saves the results
. *--------------------------------------------------------------------
. 
. *--------------------------------------------------
. * STRUCTURE OF THE DO-FILE
. /*
> 
>         1) Analysis for main paper
>         2) Analysis for supplementary online materials
> */
. *--------------------------------------------------
. 
. 
. *--------------------------------------------------
. * (1) Analysis for main paper
. *--------------------------------------------------
. 
. 
. *Figure 1.      Normative expectations regarding group decision-making
. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. * Please indicate for each of the statement whether you disagree strongly, disagree a little, neither agree nor disagree, agree a little, or strongly a
> gree
.  global dem_norm c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12

.  foreach var of varlist $dem_norm {
  2.         replace `var'=0 if `var'==. 
  3.         }
(51 real changes made)
(53 real changes made)
(49 real changes made)
(113 real changes made)
(23 real changes made)
(61 real changes made)
(86 real changes made)
(26 real changes made)
(63 real changes made)
(52 real changes made)
(36 real changes made)
(32 real changes made)

.         
. foreach var of varlist $dem_norm {
  2.         gen new_`var'=1 if `var'==1
  3.         replace new_`var'=2 if `var'==2 
  4.         replace new_`var'=3 if `var'==0 
  5.         replace new_`var'=4 if `var'==3
  6.         replace new_`var'=5 if `var'==4
  7.         }
(372 missing values generated)
(8 real changes made)
(51 real changes made)
(19 real changes made)
(294 real changes made)
(353 missing values generated)
(20 real changes made)
(53 real changes made)
(43 real changes made)
(237 real changes made)
(390 missing values generated)
(10 real changes made)
(49 real changes made)
(30 real changes made)
(301 real changes made)
(353 missing values generated)
(22 real changes made)
(113 real changes made)
(30 real changes made)
(188 real changes made)
(399 missing values generated)
(4 real changes made)
(23 real changes made)
(9 real changes made)
(363 real changes made)
(191 missing values generated)
(13 real changes made)
(61 real changes made)
(24 real changes made)
(93 real changes made)
(284 missing values generated)
(45 real changes made)
(86 real changes made)
(34 real changes made)
(119 real changes made)
(397 missing values generated)
(6 real changes made)
(26 real changes made)
(6 real changes made)
(359 real changes made)
(153 missing values generated)
(11 real changes made)
(63 real changes made)
(12 real changes made)
(67 real changes made)
(334 missing values generated)
(38 real changes made)
(52 real changes made)
(71 real changes made)
(173 real changes made)
(307 missing values generated)
(40 real changes made)
(36 real changes made)
(55 real changes made)
(176 real changes made)
(375 missing values generated)
(21 real changes made)
(32 real changes made)
(61 real changes made)
(261 real changes made)

. lab var new_c1 "For important decisions members of a group should be allowed to vote."

. lab var new_c2 "Most people can learn to be leaders, it is not a matter of birth."

. lab var new_c3 "Democratic elections in this village ensure that the elected authorities act in the interest of their people."
note: label truncated to 80 characters

. lab var new_c4 "In most cases, failures in this village are traceable to bad cicumstances and not bad leadership."
note: label truncated to 80 characters

. lab var new_c5 "Schools and parents schould teach children to obey authority."

. lab var new_c6 "Favouring friends, relatives or supporters over others in the course of ones duties as a leader is sometimes justified."
note: label truncated to 80 characters

. lab var new_c7 "On the whole, men make better political leaders than women do."

. lab var new_c8 "A leader hast to serve all people including those who did not vote for him/her or are not friends."
note: label truncated to 80 characters

. lab var new_c9 "Accepting a bribe in the course of ones duties is sometimes justified."

. lab var new_c10 "Most people in this village can be trusted."

. lab var new_c11 "On the whole, more educated people make better political leaders than the less educated do."
note: label truncated to 80 characters

. lab var new_c12 "On the whole, elders make better political leaders than the youth do."

.         
. gen new_c6r = 6- new_c6

. gen new_c7r = 6- new_c7 

. gen new_c9r = 6- new_c9

. alpha new_c1 new_c3 new_c8 new_c9r 

Test scale = mean(unstandardized items)

Average interitem covariance:     .9378221
Number of items in the scale:            4
Scale reliability coefficient:      0.7613

. 
. gen types = 0 if villager==1
(64 missing values generated)

. replace types = 1 if extrinsic_leader==0
(35 real changes made)

. replace types = 2 if extrinsic_leader==1
(29 real changes made)

. lab def villy1 0 "Villager" 1 "Intrinsic leader" 2 "Extrinsic leader", replace

. lab val types villy1

. 
. *graphical presentation
. preserve

. rename new_c1 norm1

. rename new_c3 norm2

. rename new_c8 norm3

. 
. 
. reshape long norm ,i(id) j(pr_id)
(note: j = 1 2 3)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                      448   ->    1344
Number of variables                 458   ->     457
j variable (3 values)                     ->   pr_id
xij variables:
                      norm1 norm2 norm3   ->   norm
-----------------------------------------------------------------------------

. label define pr1 1 "Group voting" 2 "Elections" 3 "Inclusive"

. label values pr_id pr1

. 
. cibar norm, over1(types) over2(pr_id) bargap(0) gap(80) barlabel(on) blpos(11) blgap(0.01) blfmt(%9.1f) graphopts(legend() xsize(4) ysize(2) yla(1(1)5)
>   ytitle("Mean") note("{bf: Group voting}='For important decisions members of a group should be allowed to vote.'" "{bf: Elections}='Democratic electio
> ns in this village ensure that the elected authorities act in the interest of their people.'" "{bf: Inclusive}='A leader hast to serve all people inclu
> ding those who did not vote for him/her or are not friends.'")) ciopts(lpattern(dash) lcolor(black))

. gr save "$working_ANALYSIS/results/intermediate/figure1_normative_expectations.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure1_normative_expectations.
> gph saved)

. gr export "$working_ANALYSIS/results/figures/figure1_normative_expectations.tif", replace width(3465)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure1_normative_expectations.tif w
> ritten in TIFF format)

. restore

. 
. ttest new_c1 if types!= 2, by(types)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
Villager |     384    4.117188    .0727191    1.424997    3.974209    4.260166
Intrinsi |      35    3.685714    .3142857    1.859339    3.047009     4.32442
---------+--------------------------------------------------------------------
combined |     419    4.081146     .071734    1.468359    3.940141     4.22215
---------+--------------------------------------------------------------------
    diff |            .4314732    .2587118               -.0770686     .940015
------------------------------------------------------------------------------
    diff = mean(Villager) - mean(Intrinsi)                        t =   1.6678
Ho: diff = 0                                     degrees of freedom =      417

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9519         Pr(|T| > |t|) = 0.0961          Pr(T > t) = 0.0481

. ranksum new_c1 if types!= 1, by(types)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

       types |      obs    rank sum    expected
-------------+---------------------------------
    Villager |      384       81341       79488
Extrinsic le |       29        4150        6003
-------------+---------------------------------
    combined |      413       85491       85491

unadjusted variance   384192.00
adjustment for ties  -110872.43
                     ----------
adjusted variance     273319.57

Ho: new_c1(types==Villager) = new_c1(types==Extrinsic leader)
             z =   3.544
    Prob > |z| =   0.0004

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

. ranksum new_c1 if types!= 0, by(types)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

       types |      obs    rank sum    expected
-------------+---------------------------------
Intrinsic le |       35      1259.5      1137.5
Extrinsic le |       29       820.5       942.5
-------------+---------------------------------
    combined |       64        2080        2080

unadjusted variance     5497.92
adjustment for ties    -1346.28
                     ----------
adjusted variance       4151.63

Ho: new_c1(types==Intrinsic leader) = new_c1(types==Extrinsic leader)
             z =   1.893
    Prob > |z| =   0.0583
    Exact Prob =   0.0707

. reg new_c1 i.types

      Source |       SS           df       MS      Number of obs   =       448
-------------+----------------------------------   F(2, 445)       =     11.23
       Model |  50.9697275         2  25.4848638   Prob > F        =    0.0000
    Residual |  1010.02804       445  2.26972593   R-squared       =    0.0480
-------------+----------------------------------   Adj R-squared   =    0.0438
       Total |  1060.99777       447   2.3735968   Root MSE        =    1.5066

-----------------------------------------------------------------------------------
           new_c1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |  -.4314732   .2660076    -1.62   0.106    -.9542605     .091314
Extrinsic leader  |  -1.324084    .290133    -4.56   0.000    -1.894285    -.753883
                  |
            _cons |   4.117188   .0768814    53.55   0.000     3.966092    4.268283
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    5.57
            Prob > F =    0.0187

. reg new_c3 i.types, vce(hc3)

Linear regression                               Number of obs     =        448
                                                F(2, 445)         =      19.56
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1286
                                                Root MSE          =     1.3309

-----------------------------------------------------------------------------------
                  |             Robust HC3
           new_c3 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |   -.652753   .3228877    -2.02   0.044    -1.287327   -.0181788
Extrinsic leader  |  -1.999551   .3337905    -5.99   0.000    -2.655552    -1.34355
                  |
            _cons |   4.309896   .0633192    68.07   0.000     4.185454    4.434338
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    8.74
            Prob > F =    0.0033

. reg new_c8 i.types, vce(hc3)

Linear regression                               Number of obs     =        448
                                                F(2, 445)         =      16.19
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1495
                                                Root MSE          =     1.2404

-----------------------------------------------------------------------------------
                  |             Robust HC3
           new_c8 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |  -.9443452   .3349403    -2.82   0.005    -1.602606    -.286084
Extrinsic leader  |  -1.917744   .3828851    -5.01   0.000    -2.670232   -1.165257
                  |
            _cons |   4.572917   .0551377    82.94   0.000     4.464554    4.681279
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    3.75
            Prob > F =    0.0535

. 
. 
. *normative expecation related to group voting by leader baseline choice
. reg new_c1 i.rule_base3 if villager==1, vce(hc3)

Linear regression                               Number of obs     =        384
                                                F(1, 382)         =       4.87
                                                Prob > F          =     0.0279
                                                R-squared         =     0.0087
                                                Root MSE          =     1.4207

------------------------------------------------------------------------------
             |             Robust HC3
      new_c1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
1.rule_base3 |   .3808081   .1725629     2.21   0.028     .0415161    .7201001
       _cons |   4.063636   .0807426    50.33   0.000     3.904881    4.222392
------------------------------------------------------------------------------

. 
. 
. 
. 
. *Figure 2.      Preference for democratic governance in study region
. clear

. use "$working_ANALYSIS/data/afro_r6.dta"

. keep if COUNTRY==22
(52,735 observations deleted)

. rename *, lower

. 
. 
. gen ohangwena= 0

. replace ohangwena = 1 if region == 588
(120 real changes made)

. lab def ohang 0 "Rest of Namibia" 1 "Ohangwena", replace

. lab val ohangwena ohang

. *SUPPORT FOR DEMOCRACY
. tab q30, nolab

       Q30. |
Support for |
  democracy |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        192       16.00       16.00
          2 |         96        8.00       24.00
          3 |        884       73.67       97.67
          9 |         28        2.33      100.00
------------+-----------------------------------
      Total |      1,200      100.00

. lab def democracy 1 "Does't matter for someone like me" 2 "Sometimes non-democratic preferable" 3 "Always democracy preferable", replace 

. lab val q30 democracy

. foreach x of varlist q30 q52b q52j q52k q68d q71a {
  2.         replace `x'=. if `x'==9
  3. }
(28 real changes made, 28 to missing)
(31 real changes made, 31 to missing)
(11 real changes made, 11 to missing)
(27 real changes made, 27 to missing)
(68 real changes made, 68 to missing)
(11 real changes made, 11 to missing)

. encode location_level_1, gen(constituency)

. gen demo_pref= 1 if q30==3
(316 missing values generated)

. replace demo_pref = 0 if q30<3
(288 real changes made)

. 
. ttest q52b, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,050    2.117143    .0287843    .9327182    2.060661    2.173624
Ohangwen |     119    2.327731    .0810391     .884032    2.167252    2.488211
---------+--------------------------------------------------------------------
combined |   1,169     2.13858    .0271916    .9296993     2.08523     2.19193
---------+--------------------------------------------------------------------
    diff |           -.2105882    .0897523               -.3866822   -.0344943
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =  -2.3463
Ho: diff = 0                                     degrees of freedom =     1167

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.0096         Pr(|T| > |t|) = 0.0191          Pr(T > t) = 0.9904

. ttest q52j, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,070    2.080374    .0272134     .890175    2.026976    2.133772
Ohangwen |     119     1.87395    .0822994    .8977809    1.710974    2.036925
---------+--------------------------------------------------------------------
combined |   1,189    2.059714    .0258893    .8927129     2.00892    2.110508
---------+--------------------------------------------------------------------
    diff |            .2064243    .0860936                .0375116    .3753369
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   2.3977
Ho: diff = 0                                     degrees of freedom =     1187

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9917         Pr(|T| > |t|) = 0.0167          Pr(T > t) = 0.0083

. ttest q52k, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,053      2.1415    .0276339    .8967179    2.087277    2.195724
Ohangwen |     120    2.008333    .0771479    .8451128    1.855573    2.161094
---------+--------------------------------------------------------------------
combined |   1,173    2.127877    .0260487    .8921436     2.07677    2.178984
---------+--------------------------------------------------------------------
    diff |            .1331671    .0859051                -.035378    .3017123
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   1.5502
Ho: diff = 0                                     degrees of freedom =     1171

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9393         Pr(|T| > |t|) = 0.1214          Pr(T > t) = 0.0607

. ttest q68d, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,030    2.976699    .0226438    .7267222    2.932266    3.021132
Ohangwen |     102    2.911765    .0871282    .8799521    2.738926    3.084604
---------+--------------------------------------------------------------------
combined |   1,132    2.970848    .0220421    .7416127      2.9276    3.014096
---------+--------------------------------------------------------------------
    diff |            .0649343    .0769905               -.0861261    .2159947
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   0.8434
Ho: diff = 0                                     degrees of freedom =     1130

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.8004         Pr(|T| > |t|) = 0.3992          Pr(T > t) = 0.1996

. ttest q71a, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,069    3.727783    .0394163    1.288739    3.650441    3.805125
Ohangwen |     120    3.391667     .130875    1.433664    3.132521    3.650812
---------+--------------------------------------------------------------------
combined |   1,189     3.69386    .0379148    1.307375    3.619473    3.768248
---------+--------------------------------------------------------------------
    diff |            .3361163    .1255415                .0898084    .5824242
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   2.6773
Ho: diff = 0                                     degrees of freedom =     1187

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9962         Pr(|T| > |t|) = 0.0075          Pr(T > t) = 0.0038

.  
. gen com_member = 0

. replace com_member = 1 if q19b==3 | q19b==2
(169 real changes made)

. 
. *Democracy is preferable to any other kind of government.
. gen study_sites = 0

. replace study_sites = 1 if ohangwena==1
(120 real changes made)

. replace study_sites = 2 if constituency==9 | constituency==43 | constituency==71
(40 real changes made)

. lab def studies 0 "Rest of Namibia (n=1058)" 1 "Rest of Ohangwena (n=76)" 2 "Study sites (n=38)", replace

. lab val study_sites studies

. catplot q30, over(study_sites) asyvars stack horizontal recast(bar) yla(0(20)100, nogrid) percent(study_sites) bargap(10) blabel(bar, format(%9.0f) pos
> (center)  gap(0.1)) title("Which of these three statements is closest to your own opinion?")  b1title("") legend(ring(1) pos(6) rows(3))

. gr save  "$working_ANALYSIS/results/intermediate/support_dem_namibia.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/support_dem_namibia.gph saved)

. gr export "$working_ANALYSIS/results/figures/afro_support_democracy.tif", replace width(4000)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/afro_support_democracy.tif written i
> n TIFF format)

. ranksum q30 if study_sites!=1, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Nami |     1058    581626.5      580313
Study sites  |       38     19529.5       20843
-------------+---------------------------------
    combined |     1096      601156      601156

unadjusted variance  3675315.67
adjustment for ties   -1.60e+06
                     ----------
adjusted variance    2073385.02

Ho: q30(study_~s==Rest of Namibia (n=1058)) = q30(study_~s==Study sites (n=38))
             z =   0.912
    Prob > |z| =   0.3617

. ranksum q30 if study_sites!=0, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Ohan |       76      4414.5        4370
Study sites  |       38      2140.5        2185
-------------+---------------------------------
    combined |      114        6555        6555

unadjusted variance    27676.67
adjustment for ties   -11049.14
                     ----------
adjusted variance      16627.52

Ho: q30(study_~s==Rest of Ohangwena (n=76)) = q30(study_~s==Study sites (n=38))
             z =   0.345
    Prob > |z| =   0.7300
    Exact Prob =   0.7819

. 
. reg q52b i.study_sites, vce(hc3)

Linear regression                               Number of obs     =      1,169
                                                F(2, 1166)        =      11.40
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0144
                                                Root MSE          =     .92378

-------------------------------------------------------------------------------------------
                          |             Robust HC3
                     q52b |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
--------------------------+----------------------------------------------------------------
              study_sites |
Rest of Ohangwena (n=76)  |   .4145027    .091302     4.54   0.000     .2353682    .5936372
      Study sites (n=38)  |  -.1921429   .1581376    -1.22   0.225    -.5024089    .1181232
                          |
                    _cons |   2.117143    .028798    73.52   0.000     2.060641    2.173645
-------------------------------------------------------------------------------------------

. ranksum q52b if study_sites!=1, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Nami |     1050      575205      572775
Study sites  |       40       19390       21820
-------------+---------------------------------
    combined |     1090      594595      594595

unadjusted variance  3818500.00
adjustment for ties  -454608.43
                     ----------
adjusted variance    3363891.57

Ho: q52b(study_~s==Rest of Namibia (n=1058)) = q52b(study_~s==Study sites (n=38))
             z =   1.325
    Prob > |z| =   0.1852

. ranksum q71a if study_sites!=1, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Nami |     1069      596168      593295
Study sites  |       40       19327       22200
-------------+---------------------------------
    combined |     1109      615495      615495

unadjusted variance  3955300.00
adjustment for ties  -359561.61
                     ----------
adjusted variance    3595738.39

Ho: q71a(study_~s==Rest of Namibia (n=1058)) = q71a(study_~s==Study sites (n=38))
             z =   1.515
    Prob > |z| =   0.1297

. 
. 
. 
. * Load cleaned dataset (long-format)
. clear

. use "$working_ANALYSIS/processed/analysis_long.dta"

. 
. *set panel
. xtset id decision
       panel variable:  id (strongly balanced)
        time variable:  decision, 1 to 6, but with gaps
                delta:  1 unit

. 
. 
. *Figure 4.      Average treatment effects of payment
. *Panel A: Main treatment effects
. tab rule if decision<2

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         41       64.06       64.06
Pseudo-democratic |         14       21.88       85.94
       Autocratic |          9       14.06      100.00
------------------+-----------------------------------
            Total |         64      100.00

. bys TL: tab rule if decision<2

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> TL = 0

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         18       56.25       56.25
Pseudo-democratic |          8       25.00       81.25
       Autocratic |          6       18.75      100.00
------------------+-----------------------------------
            Total |         32      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> TL = 1

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         23       71.88       71.88
Pseudo-democratic |          6       18.75       90.63
       Autocratic |          3        9.38      100.00
------------------+-----------------------------------
            Total |         32      100.00


. prtest dem1 if decision<2, by(TL)

Two-sample test of proportions                     0: Number of obs =       32
                                                   1: Number of obs =       32
------------------------------------------------------------------------------
       Group |       Mean   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
           0 |      .5625   .0876951                      .3906208    .7343792
           1 |     .71875   .0794804                      .5629712    .8745288
-------------+----------------------------------------------------------------
        diff |    -.15625   .1183536                     -.3882187    .0757187
             |  under Ho:   .1199543    -1.30   0.193
------------------------------------------------------------------------------
        diff = prop(0) - prop(1)                                  z =  -1.3026
    Ho: diff = 0

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(Z < z) = 0.0964         Pr(|Z| > |z|) = 0.1927          Pr(Z > z) = 0.9036

. 
. 
. * Small and Large bonus seperately
. eststo reg_dem1: xtprobit dem bonus_2 bonus_3 , vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -125.38709  
Iteration 1:   log pseudolikelihood = -125.38709  

Fitting full model:

rho =  0.0     log pseudolikelihood = -125.38709
rho =  0.1     log pseudolikelihood = -120.97002
rho =  0.2     log pseudolikelihood = -117.59758
rho =  0.3     log pseudolikelihood = -115.02704
rho =  0.4     log pseudolikelihood = -113.13299
rho =  0.5     log pseudolikelihood = -111.87369
rho =  0.6     log pseudolikelihood = -111.29283
rho =  0.7     log pseudolikelihood = -111.58207

Iteration 0:   log pseudolikelihood = -111.29429  
Iteration 1:   log pseudolikelihood = -110.64933  
Iteration 2:   log pseudolikelihood = -110.63147  
Iteration 3:   log pseudolikelihood = -110.63147  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       0.00
Log pseudolikelihood  = -110.63147              Prob > chi2       =     0.9999

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .0038466   .2964481     0.01   0.990     -.577181    .5848743
     bonus_3 |   .0038466   .2964481     0.01   0.990     -.577181    .5848743
       _cons |   .5973239   .2794914     2.14   0.033     .0495309    1.145117
-------------+----------------------------------------------------------------
    /lnsig2u |   .5734665   .4495206                     -.3075777    1.454511
-------------+----------------------------------------------------------------
     sigma_u |   1.332069   .2993962                      .8574531    2.069393
         rho |   .6395627   .1036245                      .4237061    .8106917
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dem=1), predict(pr)
dy/dx w.r.t. : bonus_2 bonus_3

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .0008635   .0665514     0.01   0.990    -.1295748    .1313019
     bonus_3 |   .0008635   .0665514     0.01   0.990    -.1295748    .1313019
------------------------------------------------------------------------------

. est store pr1

. eststo reg_fake1: xtprobit fake bonus_2 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =  -114.9984  
Iteration 1:   log pseudolikelihood = -113.09846  
Iteration 2:   log pseudolikelihood = -113.09531  
Iteration 3:   log pseudolikelihood = -113.09531  

Fitting full model:

rho =  0.0     log pseudolikelihood = -113.09531
rho =  0.1     log pseudolikelihood = -109.50028
rho =  0.2     log pseudolikelihood = -106.85965
rho =  0.3     log pseudolikelihood = -104.95446
rho =  0.4     log pseudolikelihood = -103.67659
rho =  0.5     log pseudolikelihood = -102.99775
rho =  0.6     log pseudolikelihood = -102.97063
rho =  0.7     log pseudolikelihood = -103.77414

Iteration 0:   log pseudolikelihood = -102.97557  
Iteration 1:   log pseudolikelihood = -101.54769  
Iteration 2:   log pseudolikelihood = -101.40994  
Iteration 3:   log pseudolikelihood = -101.40943  
Iteration 4:   log pseudolikelihood = -101.40943  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       3.97
Log pseudolikelihood  = -101.40943              Prob > chi2       =     0.2652

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .4614349   .3139349     1.47   0.142    -.1538663    1.076736
     bonus_3 |   .5327473   .3187649     1.67   0.095    -.0920204    1.157515
 bonus_order |   .3387109   .4152962     0.82   0.415    -.4752546    1.152676
       _cons |  -1.431821   .3832913    -3.74   0.000    -2.183058   -.6805835
-------------+----------------------------------------------------------------
    /lnsig2u |   .4616659   .4812244                     -.4815165    1.404848
-------------+----------------------------------------------------------------
     sigma_u |   1.259649   .3030868                      .7860316     2.01864
         rho |   .6134093   .1141167                      .3818941    .8029521
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(fake=1), predict(pr)
dy/dx w.r.t. : bonus_2 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .0961699    .063935     1.50   0.133    -.0291404    .2214802
     bonus_3 |   .1110324   .0645646     1.72   0.085    -.0155119    .2375767
 bonus_order |   .0705924   .0860772     0.82   0.412    -.0981159    .2393007
------------------------------------------------------------------------------

. est store pr2

. eststo reg_dic1: xtprobit dic bonus_2 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -50.134837  
Iteration 1:   log pseudolikelihood = -46.751419  
Iteration 2:   log pseudolikelihood = -46.668355  
Iteration 3:   log pseudolikelihood = -46.668238  
Iteration 4:   log pseudolikelihood = -46.668238  

Fitting full model:

rho =  0.0     log pseudolikelihood = -46.668238
rho =  0.1     log pseudolikelihood =  -46.34144
rho =  0.2     log pseudolikelihood = -46.487345

Iteration 0:   log pseudolikelihood =  -46.34144  
Iteration 1:   log pseudolikelihood = -46.224904  
Iteration 2:   log pseudolikelihood = -45.725694  
Iteration 3:   log pseudolikelihood = -45.716321  
Iteration 4:   log pseudolikelihood = -45.716168  
Iteration 5:   log pseudolikelihood = -45.716168  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       5.89
Log pseudolikelihood  = -45.716168              Prob > chi2       =     0.1171

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |  -.7685142   .3654187    -2.10   0.035    -1.484722   -.0523066
     bonus_3 |  -.9802238   .4762269    -2.06   0.040    -1.913611   -.0468363
 bonus_order |  -.3149328   .3841314    -0.82   0.412    -1.067817    .4379509
       _cons |  -1.164717   .3813613    -3.05   0.002    -1.912172   -.4172627
-------------+----------------------------------------------------------------
    /lnsig2u |   -.664432   .8165016                     -2.264746    .9358817
-------------+----------------------------------------------------------------
     sigma_u |   .7173324   .2928515                      .3222677    1.596703
         rho |   .3397447   .1831562                      .0940851     .718267
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dic=1), predict(pr)
dy/dx w.r.t. : bonus_2 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |  -.0804475   .0394257    -2.04   0.041    -.1577204   -.0031745
     bonus_3 |  -.1026091   .0485981    -2.11   0.035    -.1978595   -.0073586
 bonus_order |  -.0329669   .0402543    -0.82   0.413    -.1118639    .0459301
------------------------------------------------------------------------------

. est store pr3

. 
. *test small versus large bonus 
. xtprobit dem bonus_1 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -125.38709  
Iteration 1:   log pseudolikelihood = -125.13711  
Iteration 2:   log pseudolikelihood =  -125.1371  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -125.1371
rho =  0.1     log pseudolikelihood = -120.75301
rho =  0.2     log pseudolikelihood = -117.40806
rho =  0.3     log pseudolikelihood = -114.86156
rho =  0.4     log pseudolikelihood = -112.98925
rho =  0.5     log pseudolikelihood = -111.75008
rho =  0.6     log pseudolikelihood = -111.18782
rho =  0.7     log pseudolikelihood = -111.49319

Iteration 0:   log pseudolikelihood = -111.19027  
Iteration 1:   log pseudolikelihood =  -110.5521  
Iteration 2:   log pseudolikelihood = -110.53321  
Iteration 3:   log pseudolikelihood = -110.53321  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       0.20
Log pseudolikelihood  = -110.53321              Prob > chi2       =     0.9783

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.0040703   .2964191    -0.01   0.989    -.5850411    .5769005
     bonus_3 |  -.0004308   .2642776    -0.00   0.999    -.5184054    .5175438
 bonus_order |  -.1862215   .4213684    -0.44   0.659    -1.012088    .6396453
       _cons |   .6984892   .3495222     2.00   0.046     .0134383     1.38354
-------------+----------------------------------------------------------------
    /lnsig2u |   .5654265   .4499982                     -.3165538    1.447407
-------------+----------------------------------------------------------------
     sigma_u |   1.326725   .2985119                      .8536134    2.062056
         rho |   .6377072   .1039661                      .4215158     .809599
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dem=1), predict(pr)
dy/dx w.r.t. : bonus_1 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.0009149    .066629    -0.01   0.989    -.1315054    .1296756
     bonus_3 |  -.0000968   .0594032    -0.00   0.999     -.116525    .1163313
 bonus_order |  -.0418581   .0944824    -0.44   0.658    -.2270401     .143324
------------------------------------------------------------------------------

. xtprobit fake bonus_1 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =  -114.9984  
Iteration 1:   log pseudolikelihood = -113.09846  
Iteration 2:   log pseudolikelihood = -113.09531  
Iteration 3:   log pseudolikelihood = -113.09531  

Fitting full model:

rho =  0.0     log pseudolikelihood = -113.09531
rho =  0.1     log pseudolikelihood = -109.50028
rho =  0.2     log pseudolikelihood = -106.85965
rho =  0.3     log pseudolikelihood = -104.95446
rho =  0.4     log pseudolikelihood = -103.67659
rho =  0.5     log pseudolikelihood = -102.99775
rho =  0.6     log pseudolikelihood = -102.97063
rho =  0.7     log pseudolikelihood = -103.77414

Iteration 0:   log pseudolikelihood = -102.97557  
Iteration 1:   log pseudolikelihood = -101.54769  
Iteration 2:   log pseudolikelihood = -101.40994  
Iteration 3:   log pseudolikelihood = -101.40943  
Iteration 4:   log pseudolikelihood = -101.40943  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       3.97
Log pseudolikelihood  = -101.40943              Prob > chi2       =     0.2652

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.4614349   .3139349    -1.47   0.142    -1.076736    .1538663
     bonus_3 |   .0713124   .2771217     0.26   0.797    -.4718362     .614461
 bonus_order |   .3387109   .4152962     0.82   0.415    -.4752546    1.152676
       _cons |  -.9703856   .3528396    -2.75   0.006    -1.661939   -.2788326
-------------+----------------------------------------------------------------
    /lnsig2u |   .4616659   .4812244                     -.4815165    1.404848
-------------+----------------------------------------------------------------
     sigma_u |   1.259649   .3030868                      .7860316     2.01864
         rho |   .6134093   .1141167                      .3818941    .8029521
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(fake=1), predict(pr)
dy/dx w.r.t. : bonus_1 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.0961699    .063935    -1.50   0.133    -.2214802    .0291404
     bonus_3 |   .0148626   .0577308     0.26   0.797    -.0982878    .1280129
 bonus_order |   .0705924   .0860772     0.82   0.412    -.0981159    .2393007
------------------------------------------------------------------------------

. xtprobit dic bonus_1 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -50.134837  
Iteration 1:   log pseudolikelihood = -46.751419  
Iteration 2:   log pseudolikelihood = -46.668355  
Iteration 3:   log pseudolikelihood = -46.668238  
Iteration 4:   log pseudolikelihood = -46.668238  

Fitting full model:

rho =  0.0     log pseudolikelihood = -46.668238
rho =  0.1     log pseudolikelihood =  -46.34144
rho =  0.2     log pseudolikelihood = -46.487345

Iteration 0:   log pseudolikelihood =  -46.34144  
Iteration 1:   log pseudolikelihood = -46.224904  
Iteration 2:   log pseudolikelihood = -45.725694  
Iteration 3:   log pseudolikelihood = -45.716321  
Iteration 4:   log pseudolikelihood = -45.716168  
Iteration 5:   log pseudolikelihood = -45.716168  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       5.89
Log pseudolikelihood  = -45.716168              Prob > chi2       =     0.1171

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |   .7685142   .3654187     2.10   0.035     .0523066    1.484722
     bonus_3 |  -.2117097   .4085308    -0.52   0.604    -1.012415    .5889961
 bonus_order |  -.3149328   .3841314    -0.82   0.412    -1.067817    .4379509
       _cons |  -1.933231   .4224659    -4.58   0.000    -2.761249   -1.105213
-------------+----------------------------------------------------------------
    /lnsig2u |   -.664432   .8165016                     -2.264746    .9358817
-------------+----------------------------------------------------------------
     sigma_u |   .7173324   .2928515                      .3222677    1.596703
         rho |   .3397447   .1831562                      .0940851     .718267
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dic=1), predict(pr)
dy/dx w.r.t. : bonus_1 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |   .0804475   .0394257     2.04   0.041     .0031745    .1577204
     bonus_3 |  -.0221616   .0421551    -0.53   0.599    -.1047841    .0604609
 bonus_order |  -.0329669   .0402543    -0.82   0.413    -.1118639    .0459301
------------------------------------------------------------------------------

. 
. *pooled bonus
. eststo reg_dem2: xtprobit dem bonus bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -125.38709  
Iteration 1:   log pseudolikelihood = -125.13711  
Iteration 2:   log pseudolikelihood =  -125.1371  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -125.1371
rho =  0.1     log pseudolikelihood = -120.75302
rho =  0.2     log pseudolikelihood = -117.40806
rho =  0.3     log pseudolikelihood = -114.86156
rho =  0.4     log pseudolikelihood = -112.98925
rho =  0.5     log pseudolikelihood = -111.75008
rho =  0.6     log pseudolikelihood = -111.18782
rho =  0.7     log pseudolikelihood =  -111.4932

Iteration 0:   log pseudolikelihood = -111.19027  
Iteration 1:   log pseudolikelihood =  -110.5521  
Iteration 2:   log pseudolikelihood = -110.53321  
Iteration 3:   log pseudolikelihood = -110.53321  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       0.20
Log pseudolikelihood  = -110.53321              Prob > chi2       =     0.9069

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .0038548   .2653135     0.01   0.988      -.51615    .5238597
 bonus_order |  -.1862194   .4213702    -0.44   0.659     -1.01209    .6396511
       _cons |   .6944178   .3408885     2.04   0.042     .0262886    1.362547
-------------+----------------------------------------------------------------
    /lnsig2u |   .5654267   .4499981                     -.3165533    1.447407
-------------+----------------------------------------------------------------
     sigma_u |   1.326725   .2985118                      .8536136    2.062056
         rho |   .6377072   .1039661                       .421516     .809599
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dem=1), predict(pr)
dy/dx w.r.t. : bonus bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .0008665   .0596371     0.01   0.988    -.1160202    .1177531
 bonus_order |  -.0418576   .0944827    -0.44   0.658    -.2270403    .1433252
------------------------------------------------------------------------------

. est store pr4

. eststo reg_fake2: xtprobit fake bonus bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =  -114.9984  
Iteration 1:   log pseudolikelihood = -113.11824  
Iteration 2:   log pseudolikelihood = -113.11513  
Iteration 3:   log pseudolikelihood = -113.11513  

Fitting full model:

rho =  0.0     log pseudolikelihood = -113.11513
rho =  0.1     log pseudolikelihood = -109.52127
rho =  0.2     log pseudolikelihood = -106.88185
rho =  0.3     log pseudolikelihood = -104.97786
rho =  0.4     log pseudolikelihood =  -103.7012
rho =  0.5     log pseudolikelihood = -103.02356
rho =  0.6     log pseudolikelihood = -102.99767
rho =  0.7     log pseudolikelihood = -103.80249

Iteration 0:   log pseudolikelihood = -103.00256  
Iteration 1:   log pseudolikelihood = -101.57872  
Iteration 2:   log pseudolikelihood = -101.44091  
Iteration 3:   log pseudolikelihood = -101.44039  
Iteration 4:   log pseudolikelihood = -101.44039  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       3.88
Log pseudolikelihood  = -101.44039              Prob > chi2       =     0.1435

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .4971642   .2842203     1.75   0.080    -.0598972    1.054226
 bonus_order |   .3385349   .4151405     0.82   0.415    -.4751255    1.152195
       _cons |  -1.431149   .3832357    -3.73   0.000    -2.182278   -.6800211
-------------+----------------------------------------------------------------
    /lnsig2u |   .4601208    .481087                     -.4827923    1.403034
-------------+----------------------------------------------------------------
     sigma_u |   1.258676   .3027663                      .7855304     2.01681
         rho |   .6130428   .1141241                       .381593    .8026649
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(fake=1), predict(pr)
dy/dx w.r.t. : bonus bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .1036855   .0574167     1.81   0.071    -.0088492    .2162201
 bonus_order |   .0706027   .0860697     0.82   0.412    -.0980907    .2392962
------------------------------------------------------------------------------

. est store pr5

. eststo reg_dic2: xtprobit dic bonus bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -50.134837  
Iteration 1:   log pseudolikelihood = -46.837592  
Iteration 2:   log pseudolikelihood = -46.766968  
Iteration 3:   log pseudolikelihood =  -46.76692  
Iteration 4:   log pseudolikelihood =  -46.76692  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -46.76692
rho =  0.1     log pseudolikelihood = -46.438292
rho =  0.2     log pseudolikelihood = -46.586174

Iteration 0:   log pseudolikelihood = -46.438292  
Iteration 1:   log pseudolikelihood = -46.303056  
Iteration 2:   log pseudolikelihood = -45.823896  
Iteration 3:   log pseudolikelihood = -45.814007  
Iteration 4:   log pseudolikelihood = -45.813838  
Iteration 5:   log pseudolikelihood = -45.813838  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       6.02
Log pseudolikelihood  = -45.813838              Prob > chi2       =     0.0493

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.8653539   .3619556    -2.39   0.017    -1.574774   -.1559341
 bonus_order |  -.3153426   .3830241    -0.82   0.410    -1.066056    .4353707
       _cons |  -1.162901   .3801173    -3.06   0.002    -1.907917   -.4178845
-------------+----------------------------------------------------------------
    /lnsig2u |  -.6719679   .8021689                      -2.24419    .9002543
-------------+----------------------------------------------------------------
     sigma_u |   .7146346   .2866288                      .3255969    1.568512
         rho |   .3380563   .1795048                      .0958518    .7110018
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dic=1), predict(pr)
dy/dx w.r.t. : bonus bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.0908287   .0383611    -2.37   0.018     -.166015   -.0156423
 bonus_order |  -.0330988   .0403304    -0.82   0.412    -.1121449    .0459473
------------------------------------------------------------------------------

. est store pr6

. 
. 
. *plot marginal effects for bonus treatment
. coefplot (pr1, offset(0.2) msymbol(D)) (pr2, offset(0) msymbol(S)) (pr3, offset(-0.2) msymbol(O)) (pr4, offset(0.2) msymbol(D) mcolor("100 143 255") ci
> opts(lwidth(0.3 1) lcolor("100 143 255*.8" "100 143 255*.2")  recast(rcap))) (pr5, offset(0) msymbol(S) mcolor("120 94 240") ciopts(lwidth(0.3 1) color
> ("120 94 240*.8" "120 94 240*.2")  recast(rcap)))  (pr6, offset(-0.2) msymbol(O) mcolor("220 38 127") ciopts(lwidth(0.3 1) color("220 38 127*.8" "220 3
> 8 127*.2")  recast(rcap))), keep(bonus_2 bonus_3 bonus) coeflabels(bonus = "Pooled Bonus" bonus_2 = "Small bonus" bonus_3="Large bonus") xline(0, lpatt
> ern(dash) lcolor(gs3)) xtitle("Regression estimated impact relative to baseline in pp") msize(3pt) xla(-0.3(0.1)0.3, nogrid) grid(none) levels(95 90) c
> iopts(lwidth(0.3 1) lcolor(*.8 *.2) recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", "") )))  mlabsize(7pt)  mlabp
> osition(12) mlabgap(-0.1)  legend(order(3 "Democratic" 6 "Pseudo-democratic" 9 "Autocratic") pos(6) ring(1) rows(1) bmargin(small)) graphregion(margin(
> tiny))  xsize(3.465) ysize(2) scale(1.2)
(note:  named style medthin not found in class linestyle, default attributes used)

. gr save "$working_ANALYSIS/results/intermediate/figure2.gph", replace 
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure2.gph saved)

. gr export "$working_ANALYSIS/results/figures/figure2.tif", replace width(4000)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure2.tif written in TIFF format)

. 
. *Table S5.      Main effects of bonus payment 
. esttab reg_dem1 reg_fake1 reg_dic1 reg_dem2 reg_fake2 reg_dic2 using "$working_ANALYSIS\results\Tables\tableS5_main_effects.rtf",  ci transform(ln*: ex
> p(@) exp(@))mtitles("Democratic" "Pseudo-democratic" "Dictator" "Democratic" "Pseudo-democratic" "Dictator") b(%4.2f) eqlabels("" "lnsig2u", none) stat
> s(N N_g sigma_u rho chi2 p, labels("N" "Individuals" "sigma_u" "rho" "Wald Chi2" "p" ) fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(
> ,elist(weight:_cons "{break}{hline @width}")) replace 
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS5_main_effects.rtf
> )

. 
. 
. 
. 
. *Table 2.       Observed crowding effects of conditional monetary incentives in the experiment.
. *created in word, descriptives are calculated here
. 
. tab rule type if round==2, column

+-------------------+
| Key               |
|-------------------|
|     frequency     |
| column percentage |
+-------------------+

                  |                    type
             rule |     Box I    Box III     Box II     Box IV |     Total
------------------+--------------------------------------------+----------
       Democratic |         2          7         16         15 |        40 
                  |     16.67      63.64      69.57      83.33 |     62.50 
------------------+--------------------------------------------+----------
Pseudo-democratic |         9          4          6          3 |        22 
                  |     75.00      36.36      26.09      16.67 |     34.38 
------------------+--------------------------------------------+----------
       Autocratic |         1          0          1          0 |         2 
                  |      8.33       0.00       4.35       0.00 |      3.13 
------------------+--------------------------------------------+----------
            Total |        12         11         23         18 |        64 
                  |    100.00     100.00     100.00     100.00 |    100.00 

. 
. 
. 
. *Figure 5.      Likelihood to choose democratic rule across subgroups
. eststo sub1: xtmixed dem i.bonus bonus_order  || id: if type==1,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -18.564637  
Iteration 1:   log restricted-likelihood = -18.564241  
Iteration 2:   log restricted-likelihood = -18.564241  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         36
Group variable: id                              Number of groups  =         12

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =       5.90
Log restricted-likelihood = -18.564241          Prob > chi2       =     0.0522

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |   .2916667   .1200719     2.43   0.015       .05633    .5270033
          bonus_order |  -.0095238   .1622964    -0.06   0.953     -.327619    .3085714
                _cons |   .0055556   .1475559     0.04   0.970    -.2836488    .2947599
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .1959065   .0923388      .0777754    .4934637
-----------------------------+------------------------------------------------
                sd(Residual) |   .3396147   .0500735      .2543804    .4534082
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 1.80          Prob >= chibar2 = 0.0899

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "12"

. eststo sub2: xtmixed dem i.bonus bonus_order  || id: if type==2,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -19.596737  
Iteration 1:   log restricted-likelihood = -19.596494  
Iteration 2:   log restricted-likelihood = -19.596494  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         33
Group variable: id                              Number of groups  =         11

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =      14.05
Log restricted-likelihood = -19.596494          Prob > chi2       =     0.0009

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |         .5   .1356402     3.69   0.000     .2341501    .7658499
          bonus_order |  -.1309524   .1920815    -0.68   0.495    -.5074253    .2455205
                _cons |   .0833333   .1779209     0.47   0.640    -.2653852    .4320519
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .2212279   .1048617      .0873719    .5601549
-----------------------------+------------------------------------------------
                sd(Residual) |   .3673154    .056678      .2714538    .4970298
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 1.85          Prob >= chibar2 = 0.0870

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals' 

added macro:
        e(individuals) : "11"

. eststo sub3: xtmixed dem i.bonus bonus_order  || id: if type==3,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -29.466679  
Iteration 1:   log restricted-likelihood = -29.466581  
Iteration 2:   log restricted-likelihood = -29.466581  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         69
Group variable: id                              Number of groups  =         23

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =      11.38
Log restricted-likelihood = -29.466581          Prob > chi2       =     0.0034

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |  -.2608696   .0788491    -3.31   0.001     -.415411   -.1063282
          bonus_order |   .0732323   .1114045     0.66   0.511    -.1451165    .2915812
                _cons |   .9617918    .096117    10.01   0.000      .773406    1.150178
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .1986239   .0578471      .1122349    .3515078
-----------------------------+------------------------------------------------
                sd(Residual) |   .3087557   .0325457      .2511253    .3796117
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 5.02          Prob >= chibar2 = 0.0125

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "23"

. eststo sub4: xtmixed dem i.bonus bonus_order  || id: if type==4,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -17.148897  
Iteration 1:   log restricted-likelihood = -17.135094  
Iteration 2:   log restricted-likelihood = -17.135079  
Iteration 3:   log restricted-likelihood = -17.135079  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         54
Group variable: id                              Number of groups  =         18

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =       4.16
Log restricted-likelihood = -17.135079          Prob > chi2       =     0.1249

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |  -.1666667   .0845154    -1.97   0.049    -.3323139   -.0010195
          bonus_order |        .05   .0960143     0.52   0.603    -.1381846    .2381846
                _cons |   .9777778    .085275    11.47   0.000     .8106419    1.144914
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .1113588   .0719082      .0314105    .3947978
-----------------------------+------------------------------------------------
                sd(Residual) |     .29277   .0349927      .2316267    .3700536
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 0.74          Prob >= chibar2 = 0.1944

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "18"

. 
. 
. coefplot (sub1, label (Box I)) (sub2, label (Box III))  (sub3, label (Box II))  (sub4, label (Box IV)) , keep(1.bonus) coeflabels(1.bonus = "Pooled Bon
> us")  byopts(xrescale) xline(0, lpattern(dash) lcolor(gs3)) xtitle("Regression estimated impact relative to baseline in pp") grid(none) levels(95 90) c
> iopts(lwidth(0.8 2)  lcolor(*1 *.3) recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", "")))) msize(3pt) msymbol(D) 
> mlabsize(8pt) mlabposition(1) mlabgap(-0.4) subtitle(, size(6pt) lstyle(none) margin(medium) nobox justification(left)  bmargin(top))  xla(-50(25)75, n
> ogrid)  xsize(3.465) ysize(2) scale(1.2)

. gr_edit style.editstyle margin(vsmall) editcopy

. gr save  "$working_ANALYSIS\results\intermediate\figure5_boxes_subgroups.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\intermediate\figure5_boxes_subgroups.gph sav
> ed)

. gr export "$working_ANALYSIS\results\figures\figure5_boxes_subgroups.tif", replace width(4000) 
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\figures\figure5_boxes_subgroups.tif written 
> in TIFF format)

. 
. 
. *Table S9.      Subsample treatment effects on democratic rule choices
. esttab sub1 sub2 sub3 sub4 using "$working_ANALYSIS\results\tables\tableS9_social_norms_boxes_democratic.rtf",  label se(%4.3f)  transform(ln*: exp(@) 
> exp(@)) mgroups("Democratic Rule (=1)", pattern(1 0 0))   mtitles("Box 1" "Box 2" "Box 3" "Box 4") b(%4.3f) stats(N individuals chi2 p, labels("N" "Ind
> ividuals" "Wald Chi2" "p" ) fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(weight:_cons "{break}{hline @width}")) nonotes addno
> tes("Notes: Estimates are from multilevel panel regressions that account for the grouping structure of the data at the individual level (random interce
> pt). Standard errors with stars indicating the following significant levels: * p < 0.10, ** p < 0.05, *** p < 0.01") replace 
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\tables\tableS9_social_norms_box
> es_democratic.rtf)

. 
. *Figure 6.      Villagers' satisfaction with their leader’s performance outside the lab
. preserve

. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. 
. bysort group_leader_type: sum satisfaction_leader

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = True-democrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |        246    3.827134    .6666073       1.75          5

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Pseudo-democrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         54    3.626852    .7306603        2.2        4.6

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Paternalist

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         30    3.844167    .5952282        2.6       4.75

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Autocrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         36       3.725    .5777419        2.6        4.5

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Benevolent-Autocrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         18    3.816667    .7085611        1.4        4.5


. reg z_satisfaction leader_type2 leader_type3 leader_type4 leader_type5 i.village, vce(robust)

Linear regression                               Number of obs     =        384
                                                F(35, 348)        =       1.58
                                                Prob > F          =     0.0230
                                                R-squared         =     0.1271
                                                Root MSE          =     .98017

------------------------------------------------------------------------------------
                   |               Robust
    z_satisfaction |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------------+----------------------------------------------------------------
      leader_type2 |  -.6611698    .208875    -3.17   0.002    -1.071986   -.2503536
      leader_type3 |  -.2920114    .214623    -1.36   0.175    -.7141328    .1301101
      leader_type4 |  -.4457453    .220525    -2.02   0.044    -.8794748   -.0120157
      leader_type5 |   -.568856   .3146655    -1.81   0.071    -1.187741    .0500294
                   |
           village |
            Ehafo  |   .2816941   .4406489     0.64   0.523     -.584976    1.148364
           Endola  |   .1647852   .4608402     0.36   0.721    -.7415971    1.071168
        Epatululo  |   .5070494   .4781111     1.06   0.290    -.4333015      1.4474
            Epuku  |  -.2703627   .4603237    -0.59   0.557    -1.175729     .635004
            Etale  |  -.2734926   .5295272    -0.52   0.606    -1.314969    .7679837
         Etilashi  |   .0657285   .5410536     0.12   0.903    -.9984181    1.129875
           Etomba  |  -.3036037   .4349979    -0.70   0.486     -1.15916     .551952
        Ohangwena  |   .3807507   .4368951     0.87   0.384    -.4785364    1.240038
       Oipapakane  |   .3098634   .4577618     0.68   0.499    -.5904644    1.210191
          Okadiwa  |   .5539985   .4237442     1.31   0.192    -.2794234     1.38742
          Okafitu  |   .2875579   .4625024     0.62   0.535    -.6220938     1.19721
           Okakwa  |   .2336439   .4366642     0.54   0.593    -.6251892    1.092477
         Okangudi  |   .5778497   .4702996     1.23   0.220    -.3471375    1.502837
        Okapundja  |     .66628   .4807188     1.39   0.167    -.2791997     1.61176
          Okatale  |    .200963   .4460237     0.45   0.653    -.6762783    1.078204
         Okelemba  |   .2190954   .4276179     0.51   0.609    -.6219453    1.060136
         Omahenge  |   .4006316   .4696826     0.85   0.394    -.5231421    1.324405
         Omakango  |  -.0594688   .4918662    -0.12   0.904    -1.026873    .9079357
         Omalyata  |   .3449401    .460573     0.75   0.454    -.5609169    1.250797
          Omaputo  |  -.1502369   .4760151    -0.32   0.752    -1.086466    .7859916
          Omukuve  |   .3574597   .4513268     0.79   0.429    -.5302117    1.245131
Omutwe Oshimbungu  |   .1752763   .4832945     0.36   0.717    -.7752695    1.125822
         Onangwhe  |   .7987806   .4775939     1.67   0.095    -.1405532    1.738114
    Onekwaya East  |   .7645445   .4521417     1.69   0.092    -.1247297    1.653819
    Onekwaya West  |  -.3536827   .5304743    -0.67   0.505    -1.397022    .6896564
         Onengali  |   .8570611   .4781265     1.79   0.074    -.0833201    1.797442
          Ongonga  |   .3030627   .5027781     0.60   0.547    -.6858034    1.291929
        Onheleiwa  |   1.259779    .452481     2.78   0.006     .3698379    2.149721
      Oshikwiyu 1  |   .9679903   .4408178     2.20   0.029     .1009881    1.834993
      Oshikwiyu 2  |    .046949   .4978082     0.09   0.925    -.9321423     1.02604
          Ouhongo  |   .7186967   .4882986     1.47   0.142     -.241691    1.679084
                   |
             _cons |  -.1293054     .36416    -0.36   0.723    -.8455369    .5869261
------------------------------------------------------------------------------------

. eststo reg_satisfaction: reg satisfaction_leader rule_base2 rule_base3 i.village, vce(robust)

Linear regression                               Number of obs     =        384
                                                F(33, 350)        =       1.62
                                                Prob > F          =     0.0193
                                                R-squared         =     0.1226
                                                Root MSE          =     .65223

------------------------------------------------------------------------------------
                   |               Robust
satisfaction_lea~r |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------------+----------------------------------------------------------------
        rule_base2 |   -.358179   .1199986    -2.98   0.003    -.5941881   -.1221699
        rule_base3 |  -.2967078   .1229121    -2.41   0.016     -.538447   -.0549687
                   |
           village |
            Ehafo  |   .1874999   .2924635     0.64   0.522    -.3877071     .762707
           Endola  |   .1915895   .3034727     0.63   0.528      -.40527     .788449
        Epatululo  |      .3375   .3173276     1.06   0.288    -.2866089    .9616089
            Epuku  |  -.2209105   .3065403    -0.72   0.472    -.8238032    .3819822
            Etale  |  -.2229939   .3493882    -0.64   0.524    -.9101583    .4641706
         Etilashi  |   .0437499   .3591033     0.12   0.903    -.6625218    .7500217
           Etomba  |  -.2020834   .2887129    -0.70   0.484    -.7699139    .3657471
        Ohangwena  |   .3353394   .2888458     1.16   0.246    -.2327523    .9034312
       Oipapakane  |   .2062499   .3038216     0.68   0.498    -.3912957    .8037955
          Okadiwa  |     .36875   .2812437     1.31   0.191    -.1843903    .9218902
          Okafitu  |   .1504372   .3234825     0.47   0.642    -.4857769    .7866513
           Okakwa  |   .2374228   .2795042     0.85   0.396    -.3122963     .787142
         Okangudi  |   .3436728   .3049252     1.13   0.260    -.2560434     .943389
        Okapundja  |   .4025205   .2978602     1.35   0.177    -.1833004    .9883415
          Okatale  |   .1337705   .2947688     0.45   0.650    -.4459704    .7135114
         Okelemba  |   .1458333   .2838147     0.51   0.608    -.4123636    .7040302
         Omahenge  |   .2666666   .3117335     0.86   0.393      -.34644    .8797731
         Omakango  |  -.0395834   .3264571    -0.12   0.904    -.6816477    .6024809
         Omalyata  |   .2296039   .3002282     0.76   0.445    -.3608743    .8200822
          Omaputo  |        -.1   .3159365    -0.32   0.752    -.7213729    .5213728
          Omukuve  |   .2379372    .298702     0.80   0.426    -.3495395    .8254139
Omutwe Oshimbungu  |   .1166666   .3207679     0.36   0.716    -.5142085    .7475418
         Onangwhe  |   .5316872   .3109826     1.71   0.088    -.0799425    1.143317
    Onekwaya East  |   .5498457   .3088478     1.78   0.076    -.0575854    1.157277
    Onekwaya West  |  -.2354167   .3520817    -0.67   0.504    -.9278786    .4570452
         Onengali  |   .5295267   .3106328     1.70   0.089    -.0814151    1.140468
          Ongonga  |   .1607767   .3359346     0.48   0.633    -.4999276    .8214811
        Onheleiwa  |     .75661   .2810407     2.69   0.007      .203869    1.309351
      Oshikwiyu 1  |   .6852623   .3040821     2.25   0.025     .0872042     1.28332
      Oshikwiyu 2  |     .03125   .3304008     0.09   0.925    -.6185708    .6810707
          Ouhongo  |   .4374228    .320296     1.37   0.173    -.1925242     1.06737
                   |
             _cons |   3.704167    .241697    15.33   0.000     3.228805    4.179528
------------------------------------------------------------------------------------

. est store satisfaction

. 
. coefplot (satisfaction), keep(rule_base2 rule_base3) coeflabels(rule_base2 = "Baseline: Pseudo-democratic rule" rule_base3 = "Baseline: Autocratic rule
> ") xline(0, lpattern(dash) lcolor(gs3))  xtitle("Regression estimated imppact relative to 'Baseline: Democratic rule'") xla(-1(0.25)0.25, nogrid) grid(
> none) levels(95 90) ciopts(lwidth(0.3 1) lcolor(*.8 *.2)   recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", ""))))
>  mlabsize(9pt) mlabposition(12) mlabgap(-0.1) 
(note:  named style medthin not found in class linestyle, default attributes used)

. gr save "$working_ANALYSIS/results/intermediate/figure6_satisfaction_villagers.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure6_satisfaction_villagers.
> gph saved)

. gr export "$working_ANALYSIS/results/figures/figure6_satisfaction_villagers.tif", replace width(3465)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure6_satisfaction_villagers.tif w
> ritten in TIFF format)

. 
. *Table S11.     Villager satisfaction with different leader types
. esttab reg_satisfaction using "$working_ANALYSIS\results\Tables\tableS11.rtf", keep(leader_type2 leader_type3 leader_type4 leader_type5) ci transform(l
> n*: exp(@) exp(@))mtitles("Satisfaction") b(%4.2f) eqlabels("" "lnsig2u", none) stats(N N_g r2 r2_a , labels("N" "Individuals" "R-squared" "Adjusted R-
> squared") fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(weight:_cons "{break}{hline @width}")) replace 
coefficient leader_type2 not found
r(111);

end of do-file

r(111);

. do "C:\Users\istei\AppData\Local\Temp\STD3f80_000000.tmp"

. esttab reg_satisfaction using "$working_ANALYSIS\results\Tables\tableS11.rtf", keep(rule_base2 rule_base3) ci transform(ln*: exp(@) exp(@))mtitles("Sat
> isfaction") b(%4.2f) eqlabels("" "lnsig2u", none) stats(N N_g r2 r2_a , labels("N" "Individuals" "R-squared" "Adjusted R-squared") fmt(%4.0f %4.0f %4.2
> f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(weight:_cons "{break}{hline @width}")) replace 
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS11.rtf not found)
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS11.rtf)

. 
. 
end of do-file

. do "C:\Users\istei\AppData\Local\Temp\STD3f80_000000.tmp"

. 
. restore
nothing to restore
r(622);

end of do-file

r(622);

. do "C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\scripts\03_analysis.do"

. *--------------------------------------------------------------------
. * SCRIPT: 03_analysis.do
. * PURPOSE: replicates the tables and figures and saves the results
. *--------------------------------------------------------------------
. 
. *--------------------------------------------------
. * STRUCTURE OF THE DO-FILE
. /*
> 
>         1) Analysis for main paper
>         2) Analysis for supplementary online materials
> */
. *--------------------------------------------------
. 
. 
. *--------------------------------------------------
. * (1) Analysis for main paper
. *--------------------------------------------------
. 
. 
. *Figure 1.      Normative expectations regarding group decision-making
. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. * Please indicate for each of the statement whether you disagree strongly, disagree a little, neither agree nor disagree, agree a little, or strongly a
> gree
.  global dem_norm c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12

.  foreach var of varlist $dem_norm {
  2.         replace `var'=0 if `var'==. 
  3.         }
(51 real changes made)
(53 real changes made)
(49 real changes made)
(113 real changes made)
(23 real changes made)
(61 real changes made)
(86 real changes made)
(26 real changes made)
(63 real changes made)
(52 real changes made)
(36 real changes made)
(32 real changes made)

.         
. foreach var of varlist $dem_norm {
  2.         gen new_`var'=1 if `var'==1
  3.         replace new_`var'=2 if `var'==2 
  4.         replace new_`var'=3 if `var'==0 
  5.         replace new_`var'=4 if `var'==3
  6.         replace new_`var'=5 if `var'==4
  7.         }
(372 missing values generated)
(8 real changes made)
(51 real changes made)
(19 real changes made)
(294 real changes made)
(353 missing values generated)
(20 real changes made)
(53 real changes made)
(43 real changes made)
(237 real changes made)
(390 missing values generated)
(10 real changes made)
(49 real changes made)
(30 real changes made)
(301 real changes made)
(353 missing values generated)
(22 real changes made)
(113 real changes made)
(30 real changes made)
(188 real changes made)
(399 missing values generated)
(4 real changes made)
(23 real changes made)
(9 real changes made)
(363 real changes made)
(191 missing values generated)
(13 real changes made)
(61 real changes made)
(24 real changes made)
(93 real changes made)
(284 missing values generated)
(45 real changes made)
(86 real changes made)
(34 real changes made)
(119 real changes made)
(397 missing values generated)
(6 real changes made)
(26 real changes made)
(6 real changes made)
(359 real changes made)
(153 missing values generated)
(11 real changes made)
(63 real changes made)
(12 real changes made)
(67 real changes made)
(334 missing values generated)
(38 real changes made)
(52 real changes made)
(71 real changes made)
(173 real changes made)
(307 missing values generated)
(40 real changes made)
(36 real changes made)
(55 real changes made)
(176 real changes made)
(375 missing values generated)
(21 real changes made)
(32 real changes made)
(61 real changes made)
(261 real changes made)

. lab var new_c1 "For important decisions members of a group should be allowed to vote."

. lab var new_c2 "Most people can learn to be leaders, it is not a matter of birth."

. lab var new_c3 "Democratic elections in this village ensure that the elected authorities act in the interest of their people."
note: label truncated to 80 characters

. lab var new_c4 "In most cases, failures in this village are traceable to bad cicumstances and not bad leadership."
note: label truncated to 80 characters

. lab var new_c5 "Schools and parents schould teach children to obey authority."

. lab var new_c6 "Favouring friends, relatives or supporters over others in the course of ones duties as a leader is sometimes justified."
note: label truncated to 80 characters

. lab var new_c7 "On the whole, men make better political leaders than women do."

. lab var new_c8 "A leader hast to serve all people including those who did not vote for him/her or are not friends."
note: label truncated to 80 characters

. lab var new_c9 "Accepting a bribe in the course of ones duties is sometimes justified."

. lab var new_c10 "Most people in this village can be trusted."

. lab var new_c11 "On the whole, more educated people make better political leaders than the less educated do."
note: label truncated to 80 characters

. lab var new_c12 "On the whole, elders make better political leaders than the youth do."

.         
. gen new_c6r = 6- new_c6

. gen new_c7r = 6- new_c7 

. gen new_c9r = 6- new_c9

. alpha new_c1 new_c3 new_c8 new_c9r 

Test scale = mean(unstandardized items)

Average interitem covariance:     .9378221
Number of items in the scale:            4
Scale reliability coefficient:      0.7613

. 
. gen types = 0 if villager==1
(64 missing values generated)

. replace types = 1 if extrinsic_leader==0
(35 real changes made)

. replace types = 2 if extrinsic_leader==1
(29 real changes made)

. lab def villy1 0 "Villager" 1 "Intrinsic leader" 2 "Extrinsic leader", replace

. lab val types villy1

. 
. *graphical presentation
. preserve

. rename new_c1 norm1

. rename new_c3 norm2

. rename new_c8 norm3

. 
. 
. reshape long norm ,i(id) j(pr_id)
(note: j = 1 2 3)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                      448   ->    1344
Number of variables                 458   ->     457
j variable (3 values)                     ->   pr_id
xij variables:
                      norm1 norm2 norm3   ->   norm
-----------------------------------------------------------------------------

. label define pr1 1 "Group voting" 2 "Elections" 3 "Inclusive"

. label values pr_id pr1

. 
. cibar norm, over1(types) over2(pr_id) bargap(0) gap(80) barlabel(on) blpos(11) blgap(0.01) blfmt(%9.1f) graphopts(legend() xsize(4) ysize(2) yla(1(1)5)
>   ytitle("Mean") note("{bf: Group voting}='For important decisions members of a group should be allowed to vote.'" "{bf: Elections}='Democratic electio
> ns in this village ensure that the elected authorities act in the interest of their people.'" "{bf: Inclusive}='A leader hast to serve all people inclu
> ding those who did not vote for him/her or are not friends.'")) ciopts(lpattern(dash) lcolor(black))

. gr save "$working_ANALYSIS/results/intermediate/figure1_normative_expectations.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure1_normative_expectations.
> gph saved)

. gr export "$working_ANALYSIS/results/figures/figure1_normative_expectations.tif", replace width(3465)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure1_normative_expectations.tif w
> ritten in TIFF format)

. restore

. 
. ttest new_c1 if types!= 2, by(types)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
Villager |     384    4.117188    .0727191    1.424997    3.974209    4.260166
Intrinsi |      35    3.685714    .3142857    1.859339    3.047009     4.32442
---------+--------------------------------------------------------------------
combined |     419    4.081146     .071734    1.468359    3.940141     4.22215
---------+--------------------------------------------------------------------
    diff |            .4314732    .2587118               -.0770686     .940015
------------------------------------------------------------------------------
    diff = mean(Villager) - mean(Intrinsi)                        t =   1.6678
Ho: diff = 0                                     degrees of freedom =      417

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9519         Pr(|T| > |t|) = 0.0961          Pr(T > t) = 0.0481

. ranksum new_c1 if types!= 1, by(types)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

       types |      obs    rank sum    expected
-------------+---------------------------------
    Villager |      384       81341       79488
Extrinsic le |       29        4150        6003
-------------+---------------------------------
    combined |      413       85491       85491

unadjusted variance   384192.00
adjustment for ties  -110872.43
                     ----------
adjusted variance     273319.57

Ho: new_c1(types==Villager) = new_c1(types==Extrinsic leader)
             z =   3.544
    Prob > |z| =   0.0004

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

. ranksum new_c1 if types!= 0, by(types)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

       types |      obs    rank sum    expected
-------------+---------------------------------
Intrinsic le |       35      1259.5      1137.5
Extrinsic le |       29       820.5       942.5
-------------+---------------------------------
    combined |       64        2080        2080

unadjusted variance     5497.92
adjustment for ties    -1346.28
                     ----------
adjusted variance       4151.63

Ho: new_c1(types==Intrinsic leader) = new_c1(types==Extrinsic leader)
             z =   1.893
    Prob > |z| =   0.0583
    Exact Prob =   0.0707

. reg new_c1 i.types

      Source |       SS           df       MS      Number of obs   =       448
-------------+----------------------------------   F(2, 445)       =     11.23
       Model |  50.9697275         2  25.4848638   Prob > F        =    0.0000
    Residual |  1010.02804       445  2.26972593   R-squared       =    0.0480
-------------+----------------------------------   Adj R-squared   =    0.0438
       Total |  1060.99777       447   2.3735968   Root MSE        =    1.5066

-----------------------------------------------------------------------------------
           new_c1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |  -.4314732   .2660076    -1.62   0.106    -.9542605     .091314
Extrinsic leader  |  -1.324084    .290133    -4.56   0.000    -1.894285    -.753883
                  |
            _cons |   4.117188   .0768814    53.55   0.000     3.966092    4.268283
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    5.57
            Prob > F =    0.0187

. reg new_c3 i.types, vce(hc3)

Linear regression                               Number of obs     =        448
                                                F(2, 445)         =      19.56
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1286
                                                Root MSE          =     1.3309

-----------------------------------------------------------------------------------
                  |             Robust HC3
           new_c3 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |   -.652753   .3228877    -2.02   0.044    -1.287327   -.0181788
Extrinsic leader  |  -1.999551   .3337905    -5.99   0.000    -2.655552    -1.34355
                  |
            _cons |   4.309896   .0633192    68.07   0.000     4.185454    4.434338
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    8.74
            Prob > F =    0.0033

. reg new_c8 i.types, vce(hc3)

Linear regression                               Number of obs     =        448
                                                F(2, 445)         =      16.19
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1495
                                                Root MSE          =     1.2404

-----------------------------------------------------------------------------------
                  |             Robust HC3
           new_c8 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
            types |
Intrinsic leader  |  -.9443452   .3349403    -2.82   0.005    -1.602606    -.286084
Extrinsic leader  |  -1.917744   .3828851    -5.01   0.000    -2.670232   -1.165257
                  |
            _cons |   4.572917   .0551377    82.94   0.000     4.464554    4.681279
-----------------------------------------------------------------------------------

. testparm 1.types 2.types, equal

 ( 1)  - 1.types + 2.types = 0

       F(  1,   445) =    3.75
            Prob > F =    0.0535

. 
. 
. *normative expecation related to group voting by leader baseline choice
. reg new_c1 i.rule_base3 if villager==1, vce(hc3)

Linear regression                               Number of obs     =        384
                                                F(1, 382)         =       4.87
                                                Prob > F          =     0.0279
                                                R-squared         =     0.0087
                                                Root MSE          =     1.4207

------------------------------------------------------------------------------
             |             Robust HC3
      new_c1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
1.rule_base3 |   .3808081   .1725629     2.21   0.028     .0415161    .7201001
       _cons |   4.063636   .0807426    50.33   0.000     3.904881    4.222392
------------------------------------------------------------------------------

. 
. 
. 
. 
. *Figure 2.      Preference for democratic governance in study region
. clear

. use "$working_ANALYSIS/data/afro_r6.dta"

. keep if COUNTRY==22
(52,735 observations deleted)

. rename *, lower

. 
. 
. gen ohangwena= 0

. replace ohangwena = 1 if region == 588
(120 real changes made)

. lab def ohang 0 "Rest of Namibia" 1 "Ohangwena", replace

. lab val ohangwena ohang

. *SUPPORT FOR DEMOCRACY
. tab q30, nolab

       Q30. |
Support for |
  democracy |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        192       16.00       16.00
          2 |         96        8.00       24.00
          3 |        884       73.67       97.67
          9 |         28        2.33      100.00
------------+-----------------------------------
      Total |      1,200      100.00

. lab def democracy 1 "Does't matter for someone like me" 2 "Sometimes non-democratic preferable" 3 "Always democracy preferable", replace 

. lab val q30 democracy

. foreach x of varlist q30 q52b q52j q52k q68d q71a {
  2.         replace `x'=. if `x'==9
  3. }
(28 real changes made, 28 to missing)
(31 real changes made, 31 to missing)
(11 real changes made, 11 to missing)
(27 real changes made, 27 to missing)
(68 real changes made, 68 to missing)
(11 real changes made, 11 to missing)

. encode location_level_1, gen(constituency)

. gen demo_pref= 1 if q30==3
(316 missing values generated)

. replace demo_pref = 0 if q30<3
(288 real changes made)

. 
. ttest q52b, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,050    2.117143    .0287843    .9327182    2.060661    2.173624
Ohangwen |     119    2.327731    .0810391     .884032    2.167252    2.488211
---------+--------------------------------------------------------------------
combined |   1,169     2.13858    .0271916    .9296993     2.08523     2.19193
---------+--------------------------------------------------------------------
    diff |           -.2105882    .0897523               -.3866822   -.0344943
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =  -2.3463
Ho: diff = 0                                     degrees of freedom =     1167

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.0096         Pr(|T| > |t|) = 0.0191          Pr(T > t) = 0.9904

. ttest q52j, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,070    2.080374    .0272134     .890175    2.026976    2.133772
Ohangwen |     119     1.87395    .0822994    .8977809    1.710974    2.036925
---------+--------------------------------------------------------------------
combined |   1,189    2.059714    .0258893    .8927129     2.00892    2.110508
---------+--------------------------------------------------------------------
    diff |            .2064243    .0860936                .0375116    .3753369
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   2.3977
Ho: diff = 0                                     degrees of freedom =     1187

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9917         Pr(|T| > |t|) = 0.0167          Pr(T > t) = 0.0083

. ttest q52k, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,053      2.1415    .0276339    .8967179    2.087277    2.195724
Ohangwen |     120    2.008333    .0771479    .8451128    1.855573    2.161094
---------+--------------------------------------------------------------------
combined |   1,173    2.127877    .0260487    .8921436     2.07677    2.178984
---------+--------------------------------------------------------------------
    diff |            .1331671    .0859051                -.035378    .3017123
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   1.5502
Ho: diff = 0                                     degrees of freedom =     1171

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9393         Pr(|T| > |t|) = 0.1214          Pr(T > t) = 0.0607

. ttest q68d, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,030    2.976699    .0226438    .7267222    2.932266    3.021132
Ohangwen |     102    2.911765    .0871282    .8799521    2.738926    3.084604
---------+--------------------------------------------------------------------
combined |   1,132    2.970848    .0220421    .7416127      2.9276    3.014096
---------+--------------------------------------------------------------------
    diff |            .0649343    .0769905               -.0861261    .2159947
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   0.8434
Ho: diff = 0                                     degrees of freedom =     1130

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.8004         Pr(|T| > |t|) = 0.3992          Pr(T > t) = 0.1996

. ttest q71a, by(ohangwena)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
 Rest of |   1,069    3.727783    .0394163    1.288739    3.650441    3.805125
Ohangwen |     120    3.391667     .130875    1.433664    3.132521    3.650812
---------+--------------------------------------------------------------------
combined |   1,189     3.69386    .0379148    1.307375    3.619473    3.768248
---------+--------------------------------------------------------------------
    diff |            .3361163    .1255415                .0898084    .5824242
------------------------------------------------------------------------------
    diff = mean(Rest of) - mean(Ohangwen)                         t =   2.6773
Ho: diff = 0                                     degrees of freedom =     1187

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9962         Pr(|T| > |t|) = 0.0075          Pr(T > t) = 0.0038

.  
. gen com_member = 0

. replace com_member = 1 if q19b==3 | q19b==2
(169 real changes made)

. 
. *Democracy is preferable to any other kind of government.
. gen study_sites = 0

. replace study_sites = 1 if ohangwena==1
(120 real changes made)

. replace study_sites = 2 if constituency==9 | constituency==43 | constituency==71
(40 real changes made)

. lab def studies 0 "Rest of Namibia (n=1058)" 1 "Rest of Ohangwena (n=76)" 2 "Study sites (n=38)", replace

. lab val study_sites studies

. catplot q30, over(study_sites) asyvars stack horizontal recast(bar) yla(0(20)100, nogrid) percent(study_sites) bargap(10) blabel(bar, format(%9.0f) pos
> (center)  gap(0.1)) title("Which of these three statements is closest to your own opinion?")  b1title("") legend(ring(1) pos(6) rows(3))

. gr save  "$working_ANALYSIS/results/intermediate/support_dem_namibia.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/support_dem_namibia.gph saved)

. gr export "$working_ANALYSIS/results/figures/afro_support_democracy.tif", replace width(4000)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/afro_support_democracy.tif written i
> n TIFF format)

. ranksum q30 if study_sites!=1, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Nami |     1058    581626.5      580313
Study sites  |       38     19529.5       20843
-------------+---------------------------------
    combined |     1096      601156      601156

unadjusted variance  3675315.67
adjustment for ties   -1.60e+06
                     ----------
adjusted variance    2073385.02

Ho: q30(study_~s==Rest of Namibia (n=1058)) = q30(study_~s==Study sites (n=38))
             z =   0.912
    Prob > |z| =   0.3617

. ranksum q30 if study_sites!=0, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Ohan |       76      4414.5        4370
Study sites  |       38      2140.5        2185
-------------+---------------------------------
    combined |      114        6555        6555

unadjusted variance    27676.67
adjustment for ties   -11049.14
                     ----------
adjusted variance      16627.52

Ho: q30(study_~s==Rest of Ohangwena (n=76)) = q30(study_~s==Study sites (n=38))
             z =   0.345
    Prob > |z| =   0.7300
    Exact Prob =   0.7819

. 
. reg q52b i.study_sites, vce(hc3)

Linear regression                               Number of obs     =      1,169
                                                F(2, 1166)        =      11.40
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0144
                                                Root MSE          =     .92378

-------------------------------------------------------------------------------------------
                          |             Robust HC3
                     q52b |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
--------------------------+----------------------------------------------------------------
              study_sites |
Rest of Ohangwena (n=76)  |   .4145027    .091302     4.54   0.000     .2353682    .5936372
      Study sites (n=38)  |  -.1921429   .1581376    -1.22   0.225    -.5024089    .1181232
                          |
                    _cons |   2.117143    .028798    73.52   0.000     2.060641    2.173645
-------------------------------------------------------------------------------------------

. ranksum q52b if study_sites!=1, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Nami |     1050      575205      572775
Study sites  |       40       19390       21820
-------------+---------------------------------
    combined |     1090      594595      594595

unadjusted variance  3818500.00
adjustment for ties  -454608.43
                     ----------
adjusted variance    3363891.57

Ho: q52b(study_~s==Rest of Namibia (n=1058)) = q52b(study_~s==Study sites (n=38))
             z =   1.325
    Prob > |z| =   0.1852

. ranksum q71a if study_sites!=1, by(study_sites)

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

 study_sites |      obs    rank sum    expected
-------------+---------------------------------
Rest of Nami |     1069      596168      593295
Study sites  |       40       19327       22200
-------------+---------------------------------
    combined |     1109      615495      615495

unadjusted variance  3955300.00
adjustment for ties  -359561.61
                     ----------
adjusted variance    3595738.39

Ho: q71a(study_~s==Rest of Namibia (n=1058)) = q71a(study_~s==Study sites (n=38))
             z =   1.515
    Prob > |z| =   0.1297

. 
. 
. 
. * Load cleaned dataset (long-format)
. clear

. use "$working_ANALYSIS/processed/analysis_long.dta"

. 
. *set panel
. xtset id decision
       panel variable:  id (strongly balanced)
        time variable:  decision, 1 to 6, but with gaps
                delta:  1 unit

. 
. 
. *Figure 4.      Average treatment effects of payment
. *Panel A: Main treatment effects
. tab rule if decision<2

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         41       64.06       64.06
Pseudo-democratic |         14       21.88       85.94
       Autocratic |          9       14.06      100.00
------------------+-----------------------------------
            Total |         64      100.00

. bys TL: tab rule if decision<2

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> TL = 0

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         18       56.25       56.25
Pseudo-democratic |          8       25.00       81.25
       Autocratic |          6       18.75      100.00
------------------+-----------------------------------
            Total |         32      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> TL = 1

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         23       71.88       71.88
Pseudo-democratic |          6       18.75       90.63
       Autocratic |          3        9.38      100.00
------------------+-----------------------------------
            Total |         32      100.00


. prtest dem1 if decision<2, by(TL)

Two-sample test of proportions                     0: Number of obs =       32
                                                   1: Number of obs =       32
------------------------------------------------------------------------------
       Group |       Mean   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
           0 |      .5625   .0876951                      .3906208    .7343792
           1 |     .71875   .0794804                      .5629712    .8745288
-------------+----------------------------------------------------------------
        diff |    -.15625   .1183536                     -.3882187    .0757187
             |  under Ho:   .1199543    -1.30   0.193
------------------------------------------------------------------------------
        diff = prop(0) - prop(1)                                  z =  -1.3026
    Ho: diff = 0

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(Z < z) = 0.0964         Pr(|Z| > |z|) = 0.1927          Pr(Z > z) = 0.9036

. 
. 
. * Small and Large bonus seperately
. eststo reg_dem1: xtprobit dem bonus_2 bonus_3 , vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -125.38709  
Iteration 1:   log pseudolikelihood = -125.38709  

Fitting full model:

rho =  0.0     log pseudolikelihood = -125.38709
rho =  0.1     log pseudolikelihood = -120.97002
rho =  0.2     log pseudolikelihood = -117.59758
rho =  0.3     log pseudolikelihood = -115.02704
rho =  0.4     log pseudolikelihood = -113.13299
rho =  0.5     log pseudolikelihood = -111.87369
rho =  0.6     log pseudolikelihood = -111.29283
rho =  0.7     log pseudolikelihood = -111.58207

Iteration 0:   log pseudolikelihood = -111.29429  
Iteration 1:   log pseudolikelihood = -110.64933  
Iteration 2:   log pseudolikelihood = -110.63147  
Iteration 3:   log pseudolikelihood = -110.63147  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       0.00
Log pseudolikelihood  = -110.63147              Prob > chi2       =     0.9999

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .0038466   .2964481     0.01   0.990     -.577181    .5848743
     bonus_3 |   .0038466   .2964481     0.01   0.990     -.577181    .5848743
       _cons |   .5973239   .2794914     2.14   0.033     .0495309    1.145117
-------------+----------------------------------------------------------------
    /lnsig2u |   .5734665   .4495206                     -.3075777    1.454511
-------------+----------------------------------------------------------------
     sigma_u |   1.332069   .2993962                      .8574531    2.069393
         rho |   .6395627   .1036245                      .4237061    .8106917
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dem=1), predict(pr)
dy/dx w.r.t. : bonus_2 bonus_3

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .0008635   .0665514     0.01   0.990    -.1295748    .1313019
     bonus_3 |   .0008635   .0665514     0.01   0.990    -.1295749     .131302
------------------------------------------------------------------------------

. est store pr1

. eststo reg_fake1: xtprobit fake bonus_2 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =  -114.9984  
Iteration 1:   log pseudolikelihood = -113.09846  
Iteration 2:   log pseudolikelihood = -113.09531  
Iteration 3:   log pseudolikelihood = -113.09531  

Fitting full model:

rho =  0.0     log pseudolikelihood = -113.09531
rho =  0.1     log pseudolikelihood = -109.50028
rho =  0.2     log pseudolikelihood = -106.85965
rho =  0.3     log pseudolikelihood = -104.95446
rho =  0.4     log pseudolikelihood = -103.67659
rho =  0.5     log pseudolikelihood = -102.99775
rho =  0.6     log pseudolikelihood = -102.97063
rho =  0.7     log pseudolikelihood = -103.77414

Iteration 0:   log pseudolikelihood = -102.97557  
Iteration 1:   log pseudolikelihood = -101.54769  
Iteration 2:   log pseudolikelihood = -101.40994  
Iteration 3:   log pseudolikelihood = -101.40943  
Iteration 4:   log pseudolikelihood = -101.40943  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       3.97
Log pseudolikelihood  = -101.40943              Prob > chi2       =     0.2652

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .4614349   .3139349     1.47   0.142    -.1538663    1.076736
     bonus_3 |   .5327473   .3187649     1.67   0.095    -.0920204    1.157515
 bonus_order |   .3387109   .4152962     0.82   0.415    -.4752546    1.152676
       _cons |  -1.431821   .3832913    -3.74   0.000    -2.183058   -.6805835
-------------+----------------------------------------------------------------
    /lnsig2u |   .4616659   .4812244                     -.4815165    1.404848
-------------+----------------------------------------------------------------
     sigma_u |   1.259649   .3030868                      .7860316     2.01864
         rho |   .6134093   .1141167                      .3818941    .8029521
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(fake=1), predict(pr)
dy/dx w.r.t. : bonus_2 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   .0961699    .063935     1.50   0.133    -.0291404    .2214802
     bonus_3 |   .1110324   .0645646     1.72   0.085    -.0155119    .2375767
 bonus_order |   .0705924   .0860772     0.82   0.412    -.0981159    .2393007
------------------------------------------------------------------------------

. est store pr2

. eststo reg_dic1: xtprobit dic bonus_2 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -50.134837  
Iteration 1:   log pseudolikelihood = -46.751419  
Iteration 2:   log pseudolikelihood = -46.668355  
Iteration 3:   log pseudolikelihood = -46.668238  
Iteration 4:   log pseudolikelihood = -46.668238  

Fitting full model:

rho =  0.0     log pseudolikelihood = -46.668238
rho =  0.1     log pseudolikelihood =  -46.34144
rho =  0.2     log pseudolikelihood = -46.487345

Iteration 0:   log pseudolikelihood =  -46.34144  
Iteration 1:   log pseudolikelihood = -46.224904  
Iteration 2:   log pseudolikelihood = -45.725694  
Iteration 3:   log pseudolikelihood = -45.716321  
Iteration 4:   log pseudolikelihood = -45.716168  
Iteration 5:   log pseudolikelihood = -45.716168  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       5.89
Log pseudolikelihood  = -45.716168              Prob > chi2       =     0.1171

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |  -.7685142   .3654187    -2.10   0.035    -1.484722   -.0523066
     bonus_3 |  -.9802238   .4762269    -2.06   0.040    -1.913611   -.0468363
 bonus_order |  -.3149328   .3841314    -0.82   0.412    -1.067817    .4379509
       _cons |  -1.164717   .3813613    -3.05   0.002    -1.912172   -.4172627
-------------+----------------------------------------------------------------
    /lnsig2u |   -.664432   .8165016                     -2.264746    .9358817
-------------+----------------------------------------------------------------
     sigma_u |   .7173324   .2928515                      .3222677    1.596703
         rho |   .3397447   .1831562                      .0940851     .718267
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dic=1), predict(pr)
dy/dx w.r.t. : bonus_2 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |  -.0804475   .0394257    -2.04   0.041    -.1577204   -.0031745
     bonus_3 |  -.1026091   .0485981    -2.11   0.035    -.1978595   -.0073586
 bonus_order |  -.0329669   .0402543    -0.82   0.413    -.1118639    .0459301
------------------------------------------------------------------------------

. est store pr3

. 
. *test small versus large bonus 
. xtprobit dem bonus_1 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -125.38709  
Iteration 1:   log pseudolikelihood = -125.13711  
Iteration 2:   log pseudolikelihood =  -125.1371  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -125.1371
rho =  0.1     log pseudolikelihood = -120.75301
rho =  0.2     log pseudolikelihood = -117.40806
rho =  0.3     log pseudolikelihood = -114.86156
rho =  0.4     log pseudolikelihood = -112.98925
rho =  0.5     log pseudolikelihood = -111.75008
rho =  0.6     log pseudolikelihood = -111.18782
rho =  0.7     log pseudolikelihood = -111.49319

Iteration 0:   log pseudolikelihood = -111.19027  
Iteration 1:   log pseudolikelihood =  -110.5521  
Iteration 2:   log pseudolikelihood = -110.53321  
Iteration 3:   log pseudolikelihood = -110.53321  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       0.20
Log pseudolikelihood  = -110.53321              Prob > chi2       =     0.9783

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.0040703   .2964191    -0.01   0.989    -.5850411    .5769005
     bonus_3 |  -.0004308   .2642776    -0.00   0.999    -.5184054    .5175438
 bonus_order |  -.1862215   .4213684    -0.44   0.659    -1.012088    .6396453
       _cons |   .6984892   .3495222     2.00   0.046     .0134383     1.38354
-------------+----------------------------------------------------------------
    /lnsig2u |   .5654265   .4499982                     -.3165538    1.447407
-------------+----------------------------------------------------------------
     sigma_u |   1.326725   .2985119                      .8536134    2.062056
         rho |   .6377072   .1039661                      .4215158     .809599
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dem=1), predict(pr)
dy/dx w.r.t. : bonus_1 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.0009149    .066629    -0.01   0.989    -.1315053    .1296755
     bonus_3 |  -.0000968   .0594032    -0.00   0.999     -.116525    .1163313
 bonus_order |  -.0418581   .0944824    -0.44   0.658    -.2270401     .143324
------------------------------------------------------------------------------

. xtprobit fake bonus_1 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =  -114.9984  
Iteration 1:   log pseudolikelihood = -113.09846  
Iteration 2:   log pseudolikelihood = -113.09531  
Iteration 3:   log pseudolikelihood = -113.09531  

Fitting full model:

rho =  0.0     log pseudolikelihood = -113.09531
rho =  0.1     log pseudolikelihood = -109.50028
rho =  0.2     log pseudolikelihood = -106.85965
rho =  0.3     log pseudolikelihood = -104.95446
rho =  0.4     log pseudolikelihood = -103.67659
rho =  0.5     log pseudolikelihood = -102.99775
rho =  0.6     log pseudolikelihood = -102.97063
rho =  0.7     log pseudolikelihood = -103.77414

Iteration 0:   log pseudolikelihood = -102.97557  
Iteration 1:   log pseudolikelihood = -101.54769  
Iteration 2:   log pseudolikelihood = -101.40994  
Iteration 3:   log pseudolikelihood = -101.40943  
Iteration 4:   log pseudolikelihood = -101.40943  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       3.97
Log pseudolikelihood  = -101.40943              Prob > chi2       =     0.2652

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.4614349   .3139349    -1.47   0.142    -1.076736    .1538663
     bonus_3 |   .0713124   .2771217     0.26   0.797    -.4718362     .614461
 bonus_order |   .3387109   .4152962     0.82   0.415    -.4752546    1.152676
       _cons |  -.9703856   .3528396    -2.75   0.006    -1.661939   -.2788326
-------------+----------------------------------------------------------------
    /lnsig2u |   .4616659   .4812244                     -.4815165    1.404848
-------------+----------------------------------------------------------------
     sigma_u |   1.259649   .3030868                      .7860316     2.01864
         rho |   .6134093   .1141167                      .3818941    .8029521
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(fake=1), predict(pr)
dy/dx w.r.t. : bonus_1 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |  -.0961699    .063935    -1.50   0.133    -.2214802    .0291404
     bonus_3 |   .0148626   .0577308     0.26   0.797    -.0982878    .1280129
 bonus_order |   .0705924   .0860772     0.82   0.412    -.0981159    .2393007
------------------------------------------------------------------------------

. xtprobit dic bonus_1 bonus_3 bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -50.134837  
Iteration 1:   log pseudolikelihood = -46.751419  
Iteration 2:   log pseudolikelihood = -46.668355  
Iteration 3:   log pseudolikelihood = -46.668238  
Iteration 4:   log pseudolikelihood = -46.668238  

Fitting full model:

rho =  0.0     log pseudolikelihood = -46.668238
rho =  0.1     log pseudolikelihood =  -46.34144
rho =  0.2     log pseudolikelihood = -46.487345

Iteration 0:   log pseudolikelihood =  -46.34144  
Iteration 1:   log pseudolikelihood = -46.224904  
Iteration 2:   log pseudolikelihood = -45.725694  
Iteration 3:   log pseudolikelihood = -45.716321  
Iteration 4:   log pseudolikelihood = -45.716168  
Iteration 5:   log pseudolikelihood = -45.716168  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(3)      =       5.89
Log pseudolikelihood  = -45.716168              Prob > chi2       =     0.1171

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |   .7685142   .3654187     2.10   0.035     .0523066    1.484722
     bonus_3 |  -.2117097   .4085308    -0.52   0.604    -1.012415    .5889961
 bonus_order |  -.3149328   .3841314    -0.82   0.412    -1.067817    .4379509
       _cons |  -1.933231   .4224659    -4.58   0.000    -2.761249   -1.105213
-------------+----------------------------------------------------------------
    /lnsig2u |   -.664432   .8165016                     -2.264746    .9358817
-------------+----------------------------------------------------------------
     sigma_u |   .7173324   .2928515                      .3222677    1.596703
         rho |   .3397447   .1831562                      .0940851     .718267
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dic=1), predict(pr)
dy/dx w.r.t. : bonus_1 bonus_3 bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_1 |   .0804475   .0394257     2.04   0.041     .0031745    .1577204
     bonus_3 |  -.0221616   .0421551    -0.53   0.599    -.1047841    .0604609
 bonus_order |  -.0329669   .0402543    -0.82   0.413    -.1118639    .0459301
------------------------------------------------------------------------------

. 
. *pooled bonus
. eststo reg_dem2: xtprobit dem bonus bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -125.38709  
Iteration 1:   log pseudolikelihood = -125.13711  
Iteration 2:   log pseudolikelihood =  -125.1371  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -125.1371
rho =  0.1     log pseudolikelihood = -120.75302
rho =  0.2     log pseudolikelihood = -117.40806
rho =  0.3     log pseudolikelihood = -114.86156
rho =  0.4     log pseudolikelihood = -112.98925
rho =  0.5     log pseudolikelihood = -111.75008
rho =  0.6     log pseudolikelihood = -111.18782
rho =  0.7     log pseudolikelihood =  -111.4932

Iteration 0:   log pseudolikelihood = -111.19027  
Iteration 1:   log pseudolikelihood =  -110.5521  
Iteration 2:   log pseudolikelihood = -110.53321  
Iteration 3:   log pseudolikelihood = -110.53321  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       0.20
Log pseudolikelihood  = -110.53321              Prob > chi2       =     0.9069

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .0038548   .2653135     0.01   0.988      -.51615    .5238597
 bonus_order |  -.1862194   .4213702    -0.44   0.659     -1.01209    .6396511
       _cons |   .6944178   .3408885     2.04   0.042     .0262886    1.362547
-------------+----------------------------------------------------------------
    /lnsig2u |   .5654267   .4499981                     -.3165533    1.447407
-------------+----------------------------------------------------------------
     sigma_u |   1.326725   .2985118                      .8536136    2.062056
         rho |   .6377072   .1039661                       .421516     .809599
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dem=1), predict(pr)
dy/dx w.r.t. : bonus bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .0008665   .0596371     0.01   0.988    -.1160202    .1177531
 bonus_order |  -.0418576   .0944827    -0.44   0.658    -.2270403    .1433252
------------------------------------------------------------------------------

. est store pr4

. eststo reg_fake2: xtprobit fake bonus bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =  -114.9984  
Iteration 1:   log pseudolikelihood = -113.11824  
Iteration 2:   log pseudolikelihood = -113.11513  
Iteration 3:   log pseudolikelihood = -113.11513  

Fitting full model:

rho =  0.0     log pseudolikelihood = -113.11513
rho =  0.1     log pseudolikelihood = -109.52127
rho =  0.2     log pseudolikelihood = -106.88185
rho =  0.3     log pseudolikelihood = -104.97786
rho =  0.4     log pseudolikelihood =  -103.7012
rho =  0.5     log pseudolikelihood = -103.02356
rho =  0.6     log pseudolikelihood = -102.99767
rho =  0.7     log pseudolikelihood = -103.80249

Iteration 0:   log pseudolikelihood = -103.00256  
Iteration 1:   log pseudolikelihood = -101.57872  
Iteration 2:   log pseudolikelihood = -101.44091  
Iteration 3:   log pseudolikelihood = -101.44039  
Iteration 4:   log pseudolikelihood = -101.44039  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       3.88
Log pseudolikelihood  = -101.44039              Prob > chi2       =     0.1435

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .4971642   .2842203     1.75   0.080    -.0598972    1.054226
 bonus_order |   .3385349   .4151405     0.82   0.415    -.4751255    1.152195
       _cons |  -1.431149   .3832357    -3.73   0.000    -2.182278   -.6800211
-------------+----------------------------------------------------------------
    /lnsig2u |   .4601208    .481087                     -.4827923    1.403034
-------------+----------------------------------------------------------------
     sigma_u |   1.258676   .3027663                      .7855304     2.01681
         rho |   .6130428   .1141241                       .381593    .8026649
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(fake=1), predict(pr)
dy/dx w.r.t. : bonus bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .1036855   .0574167     1.81   0.071    -.0088492    .2162201
 bonus_order |   .0706027   .0860697     0.82   0.412    -.0980907    .2392962
------------------------------------------------------------------------------

. est store pr5

. eststo reg_dic2: xtprobit dic bonus bonus_order, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -50.134837  
Iteration 1:   log pseudolikelihood = -46.837592  
Iteration 2:   log pseudolikelihood = -46.766968  
Iteration 3:   log pseudolikelihood =  -46.76692  
Iteration 4:   log pseudolikelihood =  -46.76692  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -46.76692
rho =  0.1     log pseudolikelihood = -46.438292
rho =  0.2     log pseudolikelihood = -46.586174

Iteration 0:   log pseudolikelihood = -46.438292  
Iteration 1:   log pseudolikelihood = -46.303056  
Iteration 2:   log pseudolikelihood = -45.823896  
Iteration 3:   log pseudolikelihood = -45.814007  
Iteration 4:   log pseudolikelihood = -45.813838  
Iteration 5:   log pseudolikelihood = -45.813838  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       6.02
Log pseudolikelihood  = -45.813838              Prob > chi2       =     0.0493

                                    (Std. Err. adjusted for 64 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.8653539   .3619556    -2.39   0.017    -1.574774   -.1559341
 bonus_order |  -.3153426   .3830241    -0.82   0.410    -1.066056    .4353707
       _cons |  -1.162901   .3801173    -3.06   0.002    -1.907917   -.4178845
-------------+----------------------------------------------------------------
    /lnsig2u |  -.6719679   .8021689                      -2.24419    .9002543
-------------+----------------------------------------------------------------
     sigma_u |   .7146346   .2866288                      .3255969    1.568512
         rho |   .3380563   .1795048                      .0958518    .7110018
------------------------------------------------------------------------------

. margins, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(dic=1), predict(pr)
dy/dx w.r.t. : bonus bonus_order

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.0908287   .0383611    -2.37   0.018     -.166015   -.0156423
 bonus_order |  -.0330988   .0403304    -0.82   0.412    -.1121449    .0459473
------------------------------------------------------------------------------

. est store pr6

. 
. 
. *plot marginal effects for bonus treatment
. coefplot (pr1, offset(0.2) msymbol(D)) (pr2, offset(0) msymbol(S)) (pr3, offset(-0.2) msymbol(O)) (pr4, offset(0.2) msymbol(D) mcolor("100 143 255") ci
> opts(lwidth(0.3 1) lcolor("100 143 255*.8" "100 143 255*.2")  recast(rcap))) (pr5, offset(0) msymbol(S) mcolor("120 94 240") ciopts(lwidth(0.3 1) color
> ("120 94 240*.8" "120 94 240*.2")  recast(rcap)))  (pr6, offset(-0.2) msymbol(O) mcolor("220 38 127") ciopts(lwidth(0.3 1) color("220 38 127*.8" "220 3
> 8 127*.2")  recast(rcap))), keep(bonus_2 bonus_3 bonus) coeflabels(bonus = "Pooled Bonus" bonus_2 = "Small bonus" bonus_3="Large bonus") xline(0, lpatt
> ern(dash) lcolor(gs3)) xtitle("Regression estimated impact relative to baseline in pp") msize(3pt) xla(-0.3(0.1)0.3, nogrid) grid(none) levels(95 90) c
> iopts(lwidth(0.3 1) lcolor(*.8 *.2) recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", "") )))  mlabsize(7pt)  mlabp
> osition(12) mlabgap(-0.1)  legend(order(3 "Democratic" 6 "Pseudo-democratic" 9 "Autocratic") pos(6) ring(1) rows(1) bmargin(small)) graphregion(margin(
> tiny))  xsize(3.465) ysize(2) scale(1.2)
(note:  named style medthin not found in class linestyle, default attributes used)

. gr save "$working_ANALYSIS/results/intermediate/figure2.gph", replace 
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure2.gph saved)

. gr export "$working_ANALYSIS/results/figures/figure2.tif", replace width(4000)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure2.tif written in TIFF format)

. 
. *Table S5.      Main effects of bonus payment 
. esttab reg_dem1 reg_fake1 reg_dic1 reg_dem2 reg_fake2 reg_dic2 using "$working_ANALYSIS\results\Tables\tableS5_main_effects.rtf",  ci transform(ln*: ex
> p(@) exp(@))mtitles("Democratic" "Pseudo-democratic" "Dictator" "Democratic" "Pseudo-democratic" "Dictator") b(%4.2f) eqlabels("" "lnsig2u", none) stat
> s(N N_g sigma_u rho chi2 p, labels("N" "Individuals" "sigma_u" "rho" "Wald Chi2" "p" ) fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(
> ,elist(weight:_cons "{break}{hline @width}")) replace 
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS5_main_effects.rtf
> )

. 
. 
. 
. 
. *Table 2.       Observed crowding effects of conditional monetary incentives in the experiment.
. *created in word, descriptives are calculated here
. 
. tab rule type if round==2, column

+-------------------+
| Key               |
|-------------------|
|     frequency     |
| column percentage |
+-------------------+

                  |                    type
             rule |     Box I    Box III     Box II     Box IV |     Total
------------------+--------------------------------------------+----------
       Democratic |         2          7         16         15 |        40 
                  |     16.67      63.64      69.57      83.33 |     62.50 
------------------+--------------------------------------------+----------
Pseudo-democratic |         9          4          6          3 |        22 
                  |     75.00      36.36      26.09      16.67 |     34.38 
------------------+--------------------------------------------+----------
       Autocratic |         1          0          1          0 |         2 
                  |      8.33       0.00       4.35       0.00 |      3.13 
------------------+--------------------------------------------+----------
            Total |        12         11         23         18 |        64 
                  |    100.00     100.00     100.00     100.00 |    100.00 

. 
. 
. 
. *Figure 5.      Likelihood to choose democratic rule across subgroups
. eststo sub1: xtmixed dem i.bonus bonus_order  || id: if type==1,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -18.564637  
Iteration 1:   log restricted-likelihood = -18.564241  
Iteration 2:   log restricted-likelihood = -18.564241  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         36
Group variable: id                              Number of groups  =         12

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =       5.90
Log restricted-likelihood = -18.564241          Prob > chi2       =     0.0522

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |   .2916667   .1200719     2.43   0.015       .05633    .5270033
          bonus_order |  -.0095238   .1622964    -0.06   0.953     -.327619    .3085714
                _cons |   .0055556   .1475559     0.04   0.970    -.2836488    .2947599
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .1959065   .0923388      .0777754    .4934637
-----------------------------+------------------------------------------------
                sd(Residual) |   .3396147   .0500735      .2543804    .4534082
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 1.80          Prob >= chibar2 = 0.0899

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "12"

. eststo sub2: xtmixed dem i.bonus bonus_order  || id: if type==2,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -19.596737  
Iteration 1:   log restricted-likelihood = -19.596494  
Iteration 2:   log restricted-likelihood = -19.596494  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         33
Group variable: id                              Number of groups  =         11

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =      14.05
Log restricted-likelihood = -19.596494          Prob > chi2       =     0.0009

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |         .5   .1356402     3.69   0.000     .2341501    .7658499
          bonus_order |  -.1309524   .1920815    -0.68   0.495    -.5074253    .2455205
                _cons |   .0833333   .1779209     0.47   0.640    -.2653852    .4320519
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .2212279   .1048617      .0873719    .5601549
-----------------------------+------------------------------------------------
                sd(Residual) |   .3673154    .056678      .2714538    .4970298
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 1.85          Prob >= chibar2 = 0.0870

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals' 

added macro:
        e(individuals) : "11"

. eststo sub3: xtmixed dem i.bonus bonus_order  || id: if type==3,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -29.466679  
Iteration 1:   log restricted-likelihood = -29.466581  
Iteration 2:   log restricted-likelihood = -29.466581  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         69
Group variable: id                              Number of groups  =         23

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =      11.38
Log restricted-likelihood = -29.466581          Prob > chi2       =     0.0034

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |  -.2608696   .0788491    -3.31   0.001     -.415411   -.1063282
          bonus_order |   .0732323   .1114045     0.66   0.511    -.1451165    .2915812
                _cons |   .9617918    .096117    10.01   0.000      .773406    1.150178
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .1986239   .0578471      .1122349    .3515078
-----------------------------+------------------------------------------------
                sd(Residual) |   .3087557   .0325457      .2511253    .3796117
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 5.02          Prob >= chibar2 = 0.0125

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "23"

. eststo sub4: xtmixed dem i.bonus bonus_order  || id: if type==4,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -17.148897  
Iteration 1:   log restricted-likelihood = -17.135094  
Iteration 2:   log restricted-likelihood = -17.135079  
Iteration 3:   log restricted-likelihood = -17.135079  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         54
Group variable: id                              Number of groups  =         18

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =       4.16
Log restricted-likelihood = -17.135079          Prob > chi2       =     0.1249

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |  -.1666667   .0845154    -1.97   0.049    -.3323139   -.0010195
          bonus_order |        .05   .0960143     0.52   0.603    -.1381846    .2381846
                _cons |   .9777778    .085275    11.47   0.000     .8106419    1.144914
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .1113588   .0719082      .0314105    .3947978
-----------------------------+------------------------------------------------
                sd(Residual) |     .29277   .0349927      .2316267    .3700536
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 0.74          Prob >= chibar2 = 0.1944

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "18"

. 
. 
. coefplot (sub1, label (Box I)) (sub2, label (Box III))  (sub3, label (Box II))  (sub4, label (Box IV)) , keep(1.bonus) coeflabels(1.bonus = "Pooled Bon
> us")  byopts(xrescale) xline(0, lpattern(dash) lcolor(gs3)) xtitle("Regression estimated impact relative to baseline in pp") grid(none) levels(95 90) c
> iopts(lwidth(0.8 2)  lcolor(*1 *.3) recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", "")))) msize(3pt) msymbol(D) 
> mlabsize(8pt) mlabposition(1) mlabgap(-0.4) subtitle(, size(6pt) lstyle(none) margin(medium) nobox justification(left)  bmargin(top))  xla(-50(25)75, n
> ogrid)  xsize(3.465) ysize(2) scale(1.2)

. gr_edit style.editstyle margin(vsmall) editcopy

. gr save  "$working_ANALYSIS\results\intermediate\figure5_boxes_subgroups.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\intermediate\figure5_boxes_subgroups.gph sav
> ed)

. gr export "$working_ANALYSIS\results\figures\figure5_boxes_subgroups.tif", replace width(4000) 
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\figures\figure5_boxes_subgroups.tif written 
> in TIFF format)

. 
. 
. *Table S9.      Subsample treatment effects on democratic rule choices
. esttab sub1 sub2 sub3 sub4 using "$working_ANALYSIS\results\tables\tableS9_social_norms_boxes_democratic.rtf",  label se(%4.3f)  transform(ln*: exp(@) 
> exp(@)) mgroups("Democratic Rule (=1)", pattern(1 0 0))   mtitles("Box 1" "Box 2" "Box 3" "Box 4") b(%4.3f) stats(N individuals chi2 p, labels("N" "Ind
> ividuals" "Wald Chi2" "p" ) fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(weight:_cons "{break}{hline @width}")) nonotes addno
> tes("Notes: Estimates are from multilevel panel regressions that account for the grouping structure of the data at the individual level (random interce
> pt). Standard errors with stars indicating the following significant levels: * p < 0.10, ** p < 0.05, *** p < 0.01") replace 
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\tables\tableS9_social_norms_box
> es_democratic.rtf)

. 
. *Figure 6.      Villagers' satisfaction with their leader’s performance outside the lab
. preserve

. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. 
. bysort group_leader_type: sum satisfaction_leader

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = True-democrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |        246    3.827134    .6666073       1.75          5

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Pseudo-democrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         54    3.626852    .7306603        2.2        4.6

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Paternalist

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         30    3.844167    .5952282        2.6       4.75

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Autocrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         36       3.725    .5777419        2.6        4.5

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Benevolent-Autocrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         18    3.816667    .7085611        1.4        4.5


. eststo reg_satisfaction: reg satisfaction_leader rule_base2 rule_base3 i.village, vce(robust)

Linear regression                               Number of obs     =        384
                                                F(33, 350)        =       1.62
                                                Prob > F          =     0.0193
                                                R-squared         =     0.1226
                                                Root MSE          =     .65223

------------------------------------------------------------------------------------
                   |               Robust
satisfaction_lea~r |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------------+----------------------------------------------------------------
        rule_base2 |   -.358179   .1199986    -2.98   0.003    -.5941881   -.1221699
        rule_base3 |  -.2967078   .1229121    -2.41   0.016     -.538447   -.0549687
                   |
           village |
            Ehafo  |   .1874999   .2924635     0.64   0.522    -.3877071     .762707
           Endola  |   .1915895   .3034727     0.63   0.528      -.40527     .788449
        Epatululo  |      .3375   .3173276     1.06   0.288    -.2866089    .9616089
            Epuku  |  -.2209105   .3065403    -0.72   0.472    -.8238032    .3819822
            Etale  |  -.2229939   .3493882    -0.64   0.524    -.9101583    .4641706
         Etilashi  |   .0437499   .3591033     0.12   0.903    -.6625218    .7500217
           Etomba  |  -.2020834   .2887129    -0.70   0.484    -.7699139    .3657471
        Ohangwena  |   .3353394   .2888458     1.16   0.246    -.2327523    .9034312
       Oipapakane  |   .2062499   .3038216     0.68   0.498    -.3912957    .8037955
          Okadiwa  |     .36875   .2812437     1.31   0.191    -.1843903    .9218902
          Okafitu  |   .1504372   .3234825     0.47   0.642    -.4857769    .7866513
           Okakwa  |   .2374228   .2795042     0.85   0.396    -.3122963     .787142
         Okangudi  |   .3436728   .3049252     1.13   0.260    -.2560434     .943389
        Okapundja  |   .4025205   .2978602     1.35   0.177    -.1833004    .9883415
          Okatale  |   .1337705   .2947688     0.45   0.650    -.4459704    .7135114
         Okelemba  |   .1458333   .2838147     0.51   0.608    -.4123636    .7040302
         Omahenge  |   .2666666   .3117335     0.86   0.393      -.34644    .8797731
         Omakango  |  -.0395834   .3264571    -0.12   0.904    -.6816477    .6024809
         Omalyata  |   .2296039   .3002282     0.76   0.445    -.3608743    .8200822
          Omaputo  |        -.1   .3159365    -0.32   0.752    -.7213729    .5213728
          Omukuve  |   .2379372    .298702     0.80   0.426    -.3495395    .8254139
Omutwe Oshimbungu  |   .1166666   .3207679     0.36   0.716    -.5142085    .7475418
         Onangwhe  |   .5316872   .3109826     1.71   0.088    -.0799425    1.143317
    Onekwaya East  |   .5498457   .3088478     1.78   0.076    -.0575854    1.157277
    Onekwaya West  |  -.2354167   .3520817    -0.67   0.504    -.9278786    .4570452
         Onengali  |   .5295267   .3106328     1.70   0.089    -.0814151    1.140468
          Ongonga  |   .1607767   .3359346     0.48   0.633    -.4999276    .8214811
        Onheleiwa  |     .75661   .2810407     2.69   0.007      .203869    1.309351
      Oshikwiyu 1  |   .6852623   .3040821     2.25   0.025     .0872042     1.28332
      Oshikwiyu 2  |     .03125   .3304008     0.09   0.925    -.6185708    .6810707
          Ouhongo  |   .4374228    .320296     1.37   0.173    -.1925242     1.06737
                   |
             _cons |   3.704167    .241697    15.33   0.000     3.228805    4.179528
------------------------------------------------------------------------------------

. 
. 
. coefplot (satisfaction), keep(rule_base2 rule_base3) coeflabels(rule_base2 = "Baseline: Pseudo-democratic rule" rule_base3 = "Baseline: Autocratic rule
> ") xline(0, lpattern(dash) lcolor(gs3))  xtitle("Regression estimated imppact relative to 'Baseline: Democratic rule'") xla(-1(0.25)0.25, nogrid) grid(
> none) levels(95 90) ciopts(lwidth(0.3 1) lcolor(*.8 *.2)   recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", ""))))
>  mlabsize(9pt) mlabposition(12) mlabgap(-0.1) 
estimation result satisfaction not found
r(111);

end of do-file

r(111);

. do "C:\Users\istei\AppData\Local\Temp\STD3f80_000000.tmp"

. coefplot (reg_satisfaction), keep(rule_base2 rule_base3) coeflabels(rule_base2 = "Baseline: Pseudo-democratic rule" rule_base3 = "Baseline: Autocratic 
> rule") xline(0, lpattern(dash) lcolor(gs3))  xtitle("Regression estimated imppact relative to 'Baseline: Democratic rule'") xla(-1(0.25)0.25, nogrid) g
> rid(none) levels(95 90) ciopts(lwidth(0.3 1) lcolor(*.8 *.2)   recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", ""
> )))) mlabsize(9pt) mlabposition(12) mlabgap(-0.1) 
(note:  named style medthin not found in class linestyle, default attributes used)

. 
end of do-file

. do "C:\Users\istei\AppData\Local\Temp\STD3f80_000000.tmp"

. 
. *Figure 6.      Villagers' satisfaction with their leader’s performance outside the lab
. preserve

. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. 
. bysort group_leader_type: sum satisfaction_leader

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = True-democrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |        246    3.827134    .6666073       1.75          5

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Pseudo-democrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         54    3.626852    .7306603        2.2        4.6

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Paternalist

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         30    3.844167    .5952282        2.6       4.75

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Autocrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         36       3.725    .5777419        2.6        4.5

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> group_leader_type = Benevolent-Autocrat

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
satisfacti~r |         18    3.816667    .7085611        1.4        4.5


. eststo reg_satisfaction: reg satisfaction_leader rule_base2 rule_base3 i.village, vce(robust)

Linear regression                               Number of obs     =        384
                                                F(33, 350)        =       1.62
                                                Prob > F          =     0.0193
                                                R-squared         =     0.1226
                                                Root MSE          =     .65223

------------------------------------------------------------------------------------
                   |               Robust
satisfaction_lea~r |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------------+----------------------------------------------------------------
        rule_base2 |   -.358179   .1199986    -2.98   0.003    -.5941881   -.1221699
        rule_base3 |  -.2967078   .1229121    -2.41   0.016     -.538447   -.0549687
                   |
           village |
            Ehafo  |   .1874999   .2924635     0.64   0.522    -.3877071     .762707
           Endola  |   .1915895   .3034727     0.63   0.528      -.40527     .788449
        Epatululo  |      .3375   .3173276     1.06   0.288    -.2866089    .9616089
            Epuku  |  -.2209105   .3065403    -0.72   0.472    -.8238032    .3819822
            Etale  |  -.2229939   .3493882    -0.64   0.524    -.9101583    .4641706
         Etilashi  |   .0437499   .3591033     0.12   0.903    -.6625218    .7500217
           Etomba  |  -.2020834   .2887129    -0.70   0.484    -.7699139    .3657471
        Ohangwena  |   .3353394   .2888458     1.16   0.246    -.2327523    .9034312
       Oipapakane  |   .2062499   .3038216     0.68   0.498    -.3912957    .8037955
          Okadiwa  |     .36875   .2812437     1.31   0.191    -.1843903    .9218902
          Okafitu  |   .1504372   .3234825     0.47   0.642    -.4857769    .7866513
           Okakwa  |   .2374228   .2795042     0.85   0.396    -.3122963     .787142
         Okangudi  |   .3436728   .3049252     1.13   0.260    -.2560434     .943389
        Okapundja  |   .4025205   .2978602     1.35   0.177    -.1833004    .9883415
          Okatale  |   .1337705   .2947688     0.45   0.650    -.4459704    .7135114
         Okelemba  |   .1458333   .2838147     0.51   0.608    -.4123636    .7040302
         Omahenge  |   .2666666   .3117335     0.86   0.393      -.34644    .8797731
         Omakango  |  -.0395834   .3264571    -0.12   0.904    -.6816477    .6024809
         Omalyata  |   .2296039   .3002282     0.76   0.445    -.3608743    .8200822
          Omaputo  |        -.1   .3159365    -0.32   0.752    -.7213729    .5213728
          Omukuve  |   .2379372    .298702     0.80   0.426    -.3495395    .8254139
Omutwe Oshimbungu  |   .1166666   .3207679     0.36   0.716    -.5142085    .7475418
         Onangwhe  |   .5316872   .3109826     1.71   0.088    -.0799425    1.143317
    Onekwaya East  |   .5498457   .3088478     1.78   0.076    -.0575854    1.157277
    Onekwaya West  |  -.2354167   .3520817    -0.67   0.504    -.9278786    .4570452
         Onengali  |   .5295267   .3106328     1.70   0.089    -.0814151    1.140468
          Ongonga  |   .1607767   .3359346     0.48   0.633    -.4999276    .8214811
        Onheleiwa  |     .75661   .2810407     2.69   0.007      .203869    1.309351
      Oshikwiyu 1  |   .6852623   .3040821     2.25   0.025     .0872042     1.28332
      Oshikwiyu 2  |     .03125   .3304008     0.09   0.925    -.6185708    .6810707
          Ouhongo  |   .4374228    .320296     1.37   0.173    -.1925242     1.06737
                   |
             _cons |   3.704167    .241697    15.33   0.000     3.228805    4.179528
------------------------------------------------------------------------------------

. 
. 
. coefplot (reg_satisfaction), keep(rule_base2 rule_base3) coeflabels(rule_base2 = "Baseline: Pseudo-democratic rule" rule_base3 = "Baseline: Autocratic 
> rule") xline(0, lpattern(dash) lcolor(gs3))  xtitle("Regression estimated imppact relative to 'Baseline: Democratic rule'") xla(-1(0.25)0.25, nogrid) g
> rid(none) levels(95 90) ciopts(lwidth(0.3 1) lcolor(*.8 *.2)   recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", ""
> )))) mlabsize(9pt) mlabposition(12) mlabgap(-0.1) 
(note:  named style medthin not found in class linestyle, default attributes used)

. gr save "$working_ANALYSIS/results/intermediate/figure6_satisfaction_villagers.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figure6_satisfaction_villagers.
> gph saved)

. gr export "$working_ANALYSIS/results/figures/figure6_satisfaction_villagers.tif", replace width(3465)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figure6_satisfaction_villagers.tif w
> ritten in TIFF format)

. 
. *Table S11.     Villager satisfaction with different leader types
. esttab reg_satisfaction using "$working_ANALYSIS\results\Tables\tableS11.rtf", keep(rule_base2 rule_base3) ci transform(ln*: exp(@) exp(@))mtitles("Sat
> isfaction") b(%4.2f) eqlabels("" "lnsig2u", none) stats(N N_g r2 r2_a , labels("N" "Individuals" "R-squared" "Adjusted R-squared") fmt(%4.0f %4.0f %4.2
> f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(weight:_cons "{break}{hline @width}")) replace 
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS11.rtf)

. 
. 
. restore

. 
. 
. 
. 
. 
. *--------------------------------------------------------------
. * Analysis for supplementary online materials (SOM)
. *--------------------------------------------------------------
. *Table S1.      Time schedule of field implementation
. *created in word
. 
. 
. * Figure S1.    Minimal detectable effect size: Within-subject design
. *power analysis: MDES with 80% power
. power pairedproportions 0.64, corr(0.39) diff(0(0.01)0.2) alpha(0.05 0.1) n(64)

Estimated power for a two-sample paired-proportions test
Large-sample McNemar's test
Ho: p+1 = p1+  versus  Ha: p+1 != p1+

  +-----------------------------------------------------------------+
  |   alpha   power       N   delta  pmarg1  pmarg2    corr    diff |
  |-----------------------------------------------------------------|
  |     .05       .       .       .     .64     .64     .39       0 |
  |     .05  .05259      64     .01     .64     .65     .39     .01 |
  |     .05  .06045      64     .02     .64     .66     .39     .02 |
  |     .05   .0738      64     .03     .64     .67     .39     .03 |
  |     .05   .0929      64     .04     .64     .68     .39     .04 |
  |     .05    .118      64     .05     .64     .69     .39     .05 |
  |     .05   .1494      64     .06     .64      .7     .39     .06 |
  |     .05    .187      64     .07     .64     .71     .39     .07 |
  |     .05    .231      64     .08     .64     .72     .39     .08 |
  |     .05   .2808      64     .09     .64     .73     .39     .09 |
  |     .05   .3359      64      .1     .64     .74     .39      .1 |
  |     .05   .3953      64     .11     .64     .75     .39     .11 |
  |     .05   .4578      64     .12     .64     .76     .39     .12 |
  |     .05    .522      64     .13     .64     .77     .39     .13 |
  |     .05   .5862      64     .14     .64     .78     .39     .14 |
  |     .05   .6487      64     .15     .64     .79     .39     .15 |
  |     .05   .7081      64     .16     .64      .8     .39     .16 |
  |     .05   .7628      64     .17     .64     .81     .39     .17 |
  |     .05   .8118      64     .18     .64     .82     .39     .18 |
  |     .05   .8545      64     .19     .64     .83     .39     .19 |
  |     .05   .8905      64      .2     .64     .84     .39      .2 |
  |     .05       .      64       .     .64     .64     .39       0 |
  |      .1   .1038      64     .01     .64     .65     .39     .01 |
  |      .1   .1154      64     .02     .64     .66     .39     .02 |
  |      .1   .1346      64     .03     .64     .67     .39     .03 |
  |      .1   .1616      64     .04     .64     .68     .39     .04 |
  |      .1    .196      64     .05     .64     .69     .39     .05 |
  |      .1   .2376      64     .06     .64      .7     .39     .06 |
  |      .1   .2857      64     .07     .64     .71     .39     .07 |
  |      .1   .3395      64     .08     .64     .72     .39     .08 |
  |      .1   .3979      64     .09     .64     .73     .39     .09 |
  |      .1   .4595      64      .1     .64     .74     .39      .1 |
  |      .1   .5229      64     .11     .64     .75     .39     .11 |
  |      .1   .5864      64     .12     .64     .76     .39     .12 |
  |      .1   .6484      64     .13     .64     .77     .39     .13 |
  |      .1   .7072      64     .14     .64     .78     .39     .14 |
  |      .1   .7615      64     .15     .64     .79     .39     .15 |
  |      .1   .8104      64     .16     .64      .8     .39     .16 |
  |      .1   .8529      64     .17     .64     .81     .39     .17 |
  |      .1   .8889      64     .18     .64     .82     .39     .18 |
  |      .1   .9184      64     .19     .64     .83     .39     .19 |
  |      .1   .9419      64      .2     .64     .84     .39      .2 |
  +-----------------------------------------------------------------+
   Warning: some of the computations failed; execute each computation separately to see the specific error

. *MDES alpha 0.05 --> d=0.18, alpha 0.1 --> d=0.16
. 
. power pairedproportions 0.64, corr(0.39) diff(0(0.01)0.2) n(64) table(alpha power beta N delta:"Difference in proportion to select democratic rule") gr
> aph(ytitle(Effect size) xline(0.8, lcolor(538b) lpattern(dash)) yline(0.178, lpattern(dash)) title("") legend(ring(1) rows(1) pos(6)) xdimension(power)
>  xla(0(0.1)1, nogrid) yla(0(0.02)0.2, nogrid) ydimension(diff)) 

Estimated power for a two-sample paired-proportions test
Large-sample McNemar's test
Ho: p+1 = p1+  versus  Ha: p+1 != p1+

  +------------------------------------------------------------------------------------+
  |   alpha   power    beta       N Difference in proportion to select democratic rule |
  |------------------------------------------------------------------------------------|
  |     .05       .       .       .                                                  . |
  |     .05  .05259   .9474      64                                                .01 |
  |     .05  .06045   .9396      64                                                .02 |
  |     .05   .0738   .9262      64                                                .03 |
  |     .05   .0929   .9071      64                                                .04 |
  |     .05    .118    .882      64                                                .05 |
  |     .05   .1494   .8506      64                                                .06 |
  |     .05    .187    .813      64                                                .07 |
  |     .05    .231    .769      64                                                .08 |
  |     .05   .2808   .7192      64                                                .09 |
  |     .05   .3359   .6641      64                                                 .1 |
  |     .05   .3953   .6047      64                                                .11 |
  |     .05   .4578   .5422      64                                                .12 |
  |     .05    .522    .478      64                                                .13 |
  |     .05   .5862   .4138      64                                                .14 |
  |     .05   .6487   .3513      64                                                .15 |
  |     .05   .7081   .2919      64                                                .16 |
  |     .05   .7628   .2372      64                                                .17 |
  |     .05   .8118   .1882      64                                                .18 |
  |     .05   .8545   .1455      64                                                .19 |
  |     .05   .8905   .1095      64                                                 .2 |
  +------------------------------------------------------------------------------------+
   Warning: some of the computations failed; execute each computation separately to see the specific error
(note:  named style 538b not found in class color, default attributes used)

. gr save  "$working_ANALYSIS/results/intermediate/figureS1_MDES.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figureS1_MDES.gph saved)

. gr export "$working_ANALYSIS/results/figures/figureS1_MDES.tif", replace width(4000)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figureS1_MDES.tif written in TIFF fo
> rmat)

. 
. 
. *Figure S2.     Equivalence tests
. *created in R with the openly accessible  package ‘TOSTER’ by Caldwell (2022).
. 
. 
. preserve

. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. 
. 
. * Table S2.     Participants characteristics
. global controls2 male age education rootedness pca_wealth d3a d3c 

. iebaltab $controls2, grpvar(id1) rowvarlabels format(%9.2f) stdev ftest fmissok tblnonote save("$working_ANALYSIS/results/tables/tableS2_sample_charact
> eristics.xlsx") replace
    Balance table saved to: C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for
        democracy\analysis/results/tables/tableS2_sample_characteristics.xlsx

. prtest male, by(villager)

Two-sample test of proportions                     0: Number of obs =       64
                                                   1: Number of obs =      383
------------------------------------------------------------------------------
       Group |       Mean   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
           0 |     .71875   .0562012                      .6085978    .8289022
           1 |    .381201   .0248172                      .3325603    .4298418
-------------+----------------------------------------------------------------
        diff |    .337549   .0614366                      .2171353    .4579626
             |  under Ho:   .0668463     5.05   0.000
------------------------------------------------------------------------------
        diff = prop(0) - prop(1)                                  z =   5.0496
    Ho: diff = 0

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(Z < z) = 1.0000         Pr(|Z| > |z|) = 0.0000          Pr(Z > z) = 0.0000

. foreach x of varlist age education rootedness pca_wealth d3a d3c {
  2.         ranksum `x', by(villager)
  3.         }

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64       21611       14336
           1 |      383       78517       85792
-------------+---------------------------------
    combined |      447      100128      100128

unadjusted variance   915114.67
adjustment for ties     -459.84
                     ----------
adjusted variance     914654.83

Ho: age(villager==0) = age(villager==1)
             z =   7.607
    Prob > |z| =   0.0000

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       63     12355.5       14049
           1 |      382     86879.5       85186
-------------+---------------------------------
    combined |      445       99235       99235

unadjusted variance   894453.00
adjustment for ties   -19195.80
                     ----------
adjusted variance     875257.20

Ho: educat~n(villager==0) = educat~n(villager==1)
             z =  -1.810
    Prob > |z| =   0.0703

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64       11164       14368
           1 |      384       89412       86208
-------------+---------------------------------
    combined |      448      100576      100576

unadjusted variance   919552.00
adjustment for ties  -239244.82
                     ----------
adjusted variance     680307.18

Ho: rooted~s(villager==0) = rooted~s(villager==1)
             z =  -3.885
    Prob > |z| =   0.0001

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64     18992.5       13824
           1 |      367     74103.5       79272
-------------+---------------------------------
    combined |      431       93096       93096

unadjusted variance   845568.00
adjustment for ties    -2070.36
                     ----------
adjusted variance     843497.64

Ho: pca_we~h(villager==0) = pca_we~h(villager==1)
             z =   5.628
    Prob > |z| =   0.0000

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64       18709       14176
           1 |      378       79194       83727
-------------+---------------------------------
    combined |      442       97903       97903

unadjusted variance   893088.00
adjustment for ties   -66216.48
                     ----------
adjusted variance     826871.52

Ho: d3a(villager==0) = d3a(villager==1)
             z =   4.985
    Prob > |z| =   0.0000

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

Two-sample Wilcoxon rank-sum (Mann-Whitney) test

    villager |      obs    rank sum    expected
-------------+---------------------------------
           0 |       64     17714.5       14176
           1 |      378     80188.5       83727
-------------+---------------------------------
    combined |      442       97903       97903

unadjusted variance   893088.00
adjustment for ties   -29599.40
                     ----------
adjusted variance     863488.60

Ho: d3c(villager==0) = d3c(villager==1)
             z =   3.808
    Prob > |z| =   0.0001

Note: Exact p-value is not computed by default for sample sizes > 200.
      Use option exact to compute it.

. reg id1 $controls2 if id1 !=0 // chiefs vs villagers

      Source |       SS           df       MS      Number of obs   =       394
-------------+----------------------------------   F(7, 386)       =     29.30
       Model |  10.2010544         7  1.45729349   Prob > F        =    0.0000
    Residual |  19.1999608       386  .049740831   R-squared       =    0.3470
-------------+----------------------------------   Adj R-squared   =    0.3351
       Total |  29.4010152       393  .074811744   Root MSE        =    .22303

------------------------------------------------------------------------------
         id1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        male |  -.1296617   .0236755    -5.48   0.000    -.1762108   -.0831127
         age |  -.0066006   .0007591    -8.69   0.000    -.0080931    -.005108
   education |  -.0078332   .0040656    -1.93   0.055    -.0158267    .0001603
  rootedness |   .0907614    .039103     2.32   0.021     .0138798     .167643
  pca_wealth |  -.0293369   .0074095    -3.96   0.000     -.043905   -.0147688
         d3a |    .000388   .0006738     0.58   0.565    -.0009367    .0017128
         d3c |    -.00293   .0008376    -3.50   0.001    -.0045769   -.0012831
       _cons |   2.269217   .0634849    35.74   0.000     2.144398    2.394037
------------------------------------------------------------------------------

. reg id1 $controls2 if id1 !=1 // DEL vs villagers

      Source |       SS           df       MS      Number of obs   =       393
-------------+----------------------------------   F(7, 385)       =      4.80
       Model |  9.17075049         7  1.31010721   Prob > F        =    0.0000
    Residual |  105.048079       385  .272852153   R-squared       =    0.0803
-------------+----------------------------------   Adj R-squared   =    0.0636
       Total |   114.21883       392  .291374565   Root MSE        =    .52235

------------------------------------------------------------------------------
         id1 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
        male |  -.0322257   .0555344    -0.58   0.562    -.1414145    .0769631
         age |  -.0097613   .0019009    -5.13   0.000    -.0134988   -.0060238
   education |  -.0229965    .009749    -2.36   0.019    -.0421644   -.0038286
  rootedness |   .1147954   .0918885     1.25   0.212    -.0658707    .2954616
  pca_wealth |   -.039424   .0183658    -2.15   0.032    -.0755339   -.0033141
         d3a |   .0002838   .0016126     0.18   0.860    -.0028868    .0034543
         d3c |  -.0012367   .0024103    -0.51   0.608    -.0059757    .0035024
       _cons |   2.337824   .1550281    15.08   0.000     2.033017    2.642632
------------------------------------------------------------------------------

. * Leaders only
. global controls1 male age education rootedness pca_wealth d3a d3c  married experience motivation helpauthentic

. iebaltab $controls1, grpvar(TL) rowvarlabels format(%9.2f) stdev ftest fmissok tblnonote save("$working_ANALYSIS/results/tables/tableS2_leaders_charact
> eristics.xlsx") replace
    Balance table saved to: C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for
        democracy\analysis/results/tables/tableS2_leaders_characteristics.xlsx

. reg TL $controls1

      Source |       SS           df       MS      Number of obs   =        63
-------------+----------------------------------   F(11, 51)       =      4.42
       Model |  7.68364189        11  .698512899   Prob > F        =    0.0001
    Residual |  8.06238986        51  .158086076   R-squared       =    0.4880
-------------+----------------------------------   Adj R-squared   =    0.3775
       Total |  15.7460317        62  .253968254   Root MSE        =     .3976

-------------------------------------------------------------------------------
           TL |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
--------------+----------------------------------------------------------------
         male |   .5756709   .1515165     3.80   0.000     .2714888    .8798529
          age |  -.0013323    .004849    -0.27   0.785    -.0110671    .0084025
    education |   .0115139   .0171882     0.67   0.506    -.0229929    .0460208
   rootedness |  -.3209752    .192027    -1.67   0.101    -.7064855    .0645352
   pca_wealth |   .0641615   .0340908     1.88   0.066    -.0042786    .1326016
          d3a |  -.0022809   .0048669    -0.47   0.641    -.0120516    .0074897
          d3c |   .0026512     .00324     0.82   0.417    -.0038534    .0091558
      married |  -.1502687   .1648473    -0.91   0.366    -.4812135     .180676
   experience |   .0104446   .0052226     2.00   0.051    -.0000402    .0209294
   motivation |  -.1329139   .1301428    -1.02   0.312    -.3941865    .1283587
helpauthentic |  -.0045327   .0140829    -0.32   0.749    -.0328052    .0237399
        _cons |   .3461321   .3151008     1.10   0.277    -.2864591    .9787234
-------------------------------------------------------------------------------

. 
. 
. *Table S3.      Summary statistics of  main outcomes for leaders
. * Stage 1 rule choices by leaders
. estpost tabulate rule1 

       rule1 |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
  Democratic |        41    64.0625    64.0625 
Pseudo-dem~c |        14     21.875    85.9375 
  Autocratic |         9    14.0625        100 
-------------+---------------------------------
       Total |        64        100            

. esttab using "$output\tableS3_outcome-variables.rtf", cell("b pct(fmt(0)) cumpct(fmt(0))") unstack noobs replace
(output written to \tableS3_outcome-variables.rtf)

. estpost tabulate rule5

       rule5 |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
  Democratic |        41    64.0625    64.0625 
Pseudo-dem~c |        20      31.25    95.3125 
  Autocratic |         3     4.6875        100 
-------------+---------------------------------
       Total |        64        100            

. esttab using "$output\tableS3_outcome-variables.rtf", cell("b pct(fmt(0)) cumpct(fmt(0))") unstack noobs append
(output written to \tableS3_outcome-variables.rtf)

. estpost tabulate rule6

       rule6 |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
  Democratic |        41    64.0625    64.0625 
Pseudo-dem~c |        21    32.8125     96.875 
  Autocratic |         2      3.125        100 
-------------+---------------------------------
       Total |        64        100            

. esttab using "$output\tableS3_outcome-variables.rtf", cell("b pct(fmt(0)) cumpct(fmt(0))") unstack noobs append
(output written to \tableS3_outcome-variables.rtf)

. 
. * Stage 2 distribution decisions by leaders
. estpost tabulate  vote1  if id <65 & rule1==1

       vote1 |      e(b)     e(pct)  e(cumpct) 
-------------+---------------------------------
Distributi~A |        19   46.34146   46.34146 
Distributi~B |        22   53.65854        100 
-------------+---------------------------------
       Total |        41        100            

. bysort rule1: tab vote1 if id <65

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule1 = Democratic

    Benefit to |
 leader at the |
    expense of |
     villagers |      Freq.     Percent        Cum.
---------------+-----------------------------------
Distribution A |         19       46.34       46.34
Distribution B |         22       53.66      100.00
---------------+-----------------------------------
         Total |         41      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule1 = Pseudo-democratic

    Benefit to |
 leader at the |
    expense of |
     villagers |      Freq.     Percent        Cum.
---------------+-----------------------------------
Distribution A |          9       64.29       64.29
Distribution B |          5       35.71      100.00
---------------+-----------------------------------
         Total |         14      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule1 = Autocratic

    Benefit to |
 leader at the |
    expense of |
     villagers |      Freq.     Percent        Cum.
---------------+-----------------------------------
Distribution A |          6       66.67       66.67
Distribution B |          3       33.33      100.00
---------------+-----------------------------------
         Total |          9      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule1 = .
no observations


. bysort rule5: tab vote5 if id <65

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule5 = Democratic

Small bonus |
  (+10) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |         17       41.46       41.46
    Chose B |         24       58.54      100.00
------------+-----------------------------------
      Total |         41      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule5 = Pseudo-democratic

Small bonus |
  (+10) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |         15       75.00       75.00
    Chose B |          5       25.00      100.00
------------+-----------------------------------
      Total |         20      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule5 = Autocratic

Small bonus |
  (+10) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |          2       66.67       66.67
    Chose B |          1       33.33      100.00
------------+-----------------------------------
      Total |          3      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule5 = .
no observations


. bysort rule6: tab vote6 if id <65

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule6 = Democratic

  Big bonus |
 (+100) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |         23       56.10       56.10
    Chose B |         18       43.90      100.00
------------+-----------------------------------
      Total |         41      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule6 = Pseudo-democratic

  Big bonus |
 (+100) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |         14       66.67       66.67
    Chose B |          7       33.33      100.00
------------+-----------------------------------
      Total |         21      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule6 = Autocratic

  Big bonus |
 (+100) for |
   choosing |
majority or |
       fake |
   majority |      Freq.     Percent        Cum.
------------+-----------------------------------
    Chose A |          1       50.00       50.00
    Chose B |          1       50.00      100.00
------------+-----------------------------------
      Total |          2      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> rule6 = .
no observations


. 
. restore

. 
. 
. *Figure S3.     Order effects on rule choice in bonus rounds
. bysort bonus_size bonus_order: tab rule

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Baseline, bonus_order = Base-Large-Small

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         21       70.00       70.00
Pseudo-democratic |          4       13.33       83.33
       Autocratic |          5       16.67      100.00
------------------+-----------------------------------
            Total |         30      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Baseline, bonus_order = Base-Small-Large

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         20       58.82       58.82
Pseudo-democratic |         10       29.41       88.24
       Autocratic |          4       11.76      100.00
------------------+-----------------------------------
            Total |         34      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Small Bonus, bonus_order = Base-Large-Small

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         20       66.67       66.67
Pseudo-democratic |          8       26.67       93.33
       Autocratic |          2        6.67      100.00
------------------+-----------------------------------
            Total |         30      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Small Bonus, bonus_order = Base-Small-Large

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         21       61.76       61.76
Pseudo-democratic |         12       35.29       97.06
       Autocratic |          1        2.94      100.00
------------------+-----------------------------------
            Total |         34      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Large Bonus, bonus_order = Base-Large-Small

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         19       63.33       63.33
Pseudo-democratic |         10       33.33       96.67
       Autocratic |          1        3.33      100.00
------------------+-----------------------------------
            Total |         30      100.00

---------------------------------------------------------------------------------------------------------------------------------------------------------
-> bonus_size = Large Bonus, bonus_order = Base-Small-Large

             rule |      Freq.     Percent        Cum.
------------------+-----------------------------------
       Democratic |         22       64.71       64.71
Pseudo-democratic |         11       32.35       97.06
       Autocratic |          1        2.94      100.00
------------------+-----------------------------------
            Total |         34      100.00


. catplot rule bonus_order if decision > 1, over(bonus_size) percent(bonus_order bonus_size ) asyvar recast(bar) yla(0(20)100) blabel(bar, format(%9.0f) 
> pos(center)  gap(0.1)) b1title("") legend(ring(0) pos(12) rows(1))

. gr export "$working_ANALYSIS/results/figures/figureS3_order_effects.tif", replace width(5800)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figureS3_order_effects.tif written i
> n TIFF format)

. 
. tab rule bonus_order if decision > 1, chi2 exact

Enumerating sample-space combinations:
stage 3:  enumerations = 1
stage 2:  enumerations = 2
stage 1:  enumerations = 0

                  |      bonus_order
             rule | Base-Larg  Base-Smal |     Total
------------------+----------------------+----------
       Democratic |        39         43 |        82 
Pseudo-democratic |        18         23 |        41 
       Autocratic |         3          2 |         5 
------------------+----------------------+----------
            Total |        60         68 |       128 

          Pearson chi2(2) =   0.5069   Pr = 0.776
           Fisher's exact =                 0.811

. *no significant differences between the two randomization (small or large bonus round played first)
. 
. 
. *Table S4.      Sample splits by order of conditional payments
. *Order 1: Base-Large-Small
. eststo reg_time1: xtreg dem i.round if bonus_order==0, vce(robust)

Random-effects GLS regression                   Number of obs     =         90
Group variable: id                              Number of groups  =         30

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0033                                         max =          3

                                                Wald chi2(2)      =       0.39
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.8227

                                    (Std. Err. adjusted for 30 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |  -.0666667   .1077112    -0.62   0.536    -.2777768    .1444435
          3  |  -.0333333   .1026813    -0.32   0.745    -.2345849    .1679183
             |
       _cons |         .7   .0860689     8.13   0.000     .5313081    .8686919
-------------+----------------------------------------------------------------
     sigma_u |  .28432888
     sigma_e |  .38506605
         rho |  .35284281   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.14
         Prob > chi2 =    0.7127

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .71265666

. eststo reg_time2: xtreg fake i.round if bonus_order==0, vce(robust)

Random-effects GLS regression                   Number of obs     =         90
Group variable: id                              Number of groups  =         30

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0374                                         max =          3

                                                Wald chi2(2)      =       5.22
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.0735

                                    (Std. Err. adjusted for 30 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |         .2   .0894191     2.24   0.025     .0247418    .3752582
          3  |   .1333333   .0936999     1.42   0.155    -.0503151    .3169818
             |
       _cons |   .1333333   .0638457     2.09   0.037      .008198    .2584686
-------------+----------------------------------------------------------------
     sigma_u |  .23812808
     sigma_e |  .35665539
         rho |  .30833333   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.48
         Prob > chi2 =    0.4882

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .48820502

. eststo reg_time3: xtreg dic i.round if bonus_order==0, vce(robust)

Random-effects GLS regression                   Number of obs     =         90
Group variable: id                              Number of groups  =         30

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0396                                         max =          3

                                                Wald chi2(2)      =       2.82
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.2441

                                    (Std. Err. adjusted for 30 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |  -.1333333   .0801746    -1.66   0.096    -.2904728    .0238061
          3  |        -.1   .0743404    -1.35   0.179    -.2457044    .0457044
             |
       _cons |   .1666667   .0699955     2.38   0.017      .029478    .3038553
-------------+----------------------------------------------------------------
     sigma_u |  .07057509
     sigma_e |  .27473428
         rho |  .06190476   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.32
         Prob > chi2 =    0.5725

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .5724982

. 
. *Order 2: Base-Small-Large
. eststo reg_time4: xtreg dem i.round if bonus_order==1, vce(robust)

Random-effects GLS regression                   Number of obs     =        102
Group variable: id                              Number of groups  =         34

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0024                                         max =          3

                                                Wald chi2(2)      =       0.49
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.7814

                                    (Std. Err. adjusted for 34 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |   .0294118   .0903144     0.33   0.745    -.1476013    .2064248
          3  |   .0588235   .0846593     0.69   0.487    -.1071056    .2247527
             |
       _cons |   .5882353   .0865339     6.80   0.000      .418632    .7578386
-------------+----------------------------------------------------------------
     sigma_u |  .34985779
     sigma_e |  .34687297
         rho |  .50428397   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.14
         Prob > chi2 =    0.7118

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .71180246

. eststo reg_time5: xtreg fake i.round if bonus_order==1, vce(robust)

Random-effects GLS regression                   Number of obs     =        102
Group variable: id                              Number of groups  =         34

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0026                                         max =          3

                                                Wald chi2(2)      =       0.49
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =     0.7814

                                    (Std. Err. adjusted for 34 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |   .0588235   .0846593     0.69   0.487    -.1071056    .2247527
          3  |   .0294118   .0903144     0.33   0.745    -.1476013    .2064248
             |
       _cons |   .2941176   .0801148     3.67   0.000     .1370955    .4511398
-------------+----------------------------------------------------------------
     sigma_u |  .32338083
     sigma_e |  .34687297
         rho |  .46499339   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0

           chi2(  1) =    0.14
         Prob > chi2 =    0.7118

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .71180246

. eststo reg_time6: xtreg dic i.round if bonus_order==1, vce(robust)

Random-effects GLS regression                   Number of obs     =        102
Group variable: id                              Number of groups  =         34

R-sq:                                           Obs per group:
     within  = 0.0000                                         min =          3
     between = 0.0000                                         avg =        3.0
     overall = 0.0313                                         max =          3

                                                Wald chi2(1)      =          .
corr(u_i, X)   = 0 (assumed)                    Prob > chi2       =          .

                                    (Std. Err. adjusted for 34 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       round |
          2  |  -.0882353   .0656176    -1.34   0.179    -.2168434    .0403728
          3  |  -.0882353   .0656176    -1.34   0.179    -.2168434    .0403728
             |
       _cons |   .1176471   .0566497     2.08   0.038     .0066156    .2286785
-------------+----------------------------------------------------------------
     sigma_u |  .08618128
     sigma_e |  .21870357
         rho |   .1344086   (fraction of variance due to u_i)
------------------------------------------------------------------------------

. testparm 2.round 3.round, equal

 ( 1)  - 2.round + 3.round = 0
       Constraint 1 dropped

           chi2(  0) =       .
         Prob > chi2 =         .

. estadd scalar joint_test =r(p)

added scalar:
         e(joint_test) =  .

. 
. esttab reg_time1 reg_time2 reg_time3 reg_time4 reg_time5 reg_time6 using "$working_ANALYSIS\results\Tables\tableS4_order_effects.rtf", keep(2.round 3.r
> ound _cons) label se(%4.3f)  transform(ln*: exp(@) exp(@)) mgroups("Order 1: Base-Large-Small" "Order 2: Base-Small-Large", pattern(1 0 0 1 0 0)) mtitl
> es("Democratic" "Pseudo-democratic" "Dictator" "Democratic" "Pseudo-democratic" "Dictator") b(%4.3f) stats(N N_clust r2_o joint_test, fmt(0 0 3 3) labe
> ls("Observations" "Cluster" "Overall R-squared" "Test: Round 2 = Round 3 (chi2)" )) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(weight:_cons "{break
> }{hline @width}")) nonotes addnotes("Notes: Robust standard errors in brackets: * p < 0.10, ** p < 0.05, *** p < 0.01.") replace 
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS4_order_effects.rt
> f)

. 
. 
. *Table S5. Main treatment effects
. *stored before in main analysis
. 
. *Table S6.      Treatment effects seperately for chiefs and DELs
. *DEL only
. eststo reg_del1: xtprobit dem bonus bonus_order if TL==0, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =   -64.8446  
Iteration 1:   log pseudolikelihood = -64.702192  
Iteration 2:   log pseudolikelihood = -64.702189  

Fitting full model:

rho =  0.0     log pseudolikelihood = -64.702189
rho =  0.1     log pseudolikelihood = -61.662199
rho =  0.2     log pseudolikelihood = -59.214166
rho =  0.3     log pseudolikelihood = -57.207376
rho =  0.4     log pseudolikelihood =  -55.55525
rho =  0.5     log pseudolikelihood = -54.213309
rho =  0.6     log pseudolikelihood = -53.173382
rho =  0.7     log pseudolikelihood = -52.477597
rho =  0.8     log pseudolikelihood = -52.351833

Iteration 0:   log pseudolikelihood = -52.490192  
Iteration 1:   log pseudolikelihood = -52.001292  
Iteration 2:   log pseudolikelihood = -51.992761  
Iteration 3:   log pseudolikelihood = -51.992729  
Iteration 4:   log pseudolikelihood =  -51.99272  
Iteration 5:   log pseudolikelihood =  -51.99272  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =         96
Group variable: id                              Number of groups  =         32

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       0.39
Log pseudolikelihood  =  -51.99272              Prob > chi2       =     0.8215

                                    (Std. Err. adjusted for 32 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .2605404   .4349219     0.60   0.549    -.5918909    1.112972
 bonus_order |   .1143122   .8257757     0.14   0.890    -1.504178    1.732803
       _cons |    .289949   .6199466     0.47   0.640     -.925124    1.505022
-------------+----------------------------------------------------------------
    /lnsig2u |   1.297737     .65285                      .0181742    2.577299
-------------+----------------------------------------------------------------
     sigma_u |   1.913374   .6245732                      1.009129    3.627884
         rho |   .7854538   .1100157                      .5045434    .9293862
------------------------------------------------------------------------------

. eststo reg_del2: xtprobit fake bonus bonus_order if TL==0, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -58.811442  
Iteration 1:   log pseudolikelihood = -58.454962  
Iteration 2:   log pseudolikelihood = -58.454765  
Iteration 3:   log pseudolikelihood = -58.454765  

Fitting full model:

rho =  0.0     log pseudolikelihood = -58.454765
rho =  0.1     log pseudolikelihood = -56.253096
rho =  0.2     log pseudolikelihood = -54.581638
rho =  0.3     log pseudolikelihood =  -53.30674
rho =  0.4     log pseudolikelihood =  -52.35816
rho =  0.5     log pseudolikelihood = -51.709141
rho =  0.6     log pseudolikelihood = -51.378996
rho =  0.7     log pseudolikelihood = -51.476689

Iteration 0:   log pseudolikelihood = -51.370448  
Iteration 1:   log pseudolikelihood = -50.644871  
Iteration 2:   log pseudolikelihood = -50.611279  
Iteration 3:   log pseudolikelihood = -50.611225  
Iteration 4:   log pseudolikelihood = -50.611225  (backed up)

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =         96
Group variable: id                              Number of groups  =         32

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       1.05
Log pseudolikelihood  = -50.611225              Prob > chi2       =     0.5905

                                    (Std. Err. adjusted for 32 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .4046395    .406516     1.00   0.320    -.3921172    1.201396
 bonus_order |   .1025418   .6656078     0.15   0.878    -1.202026    1.407109
       _cons |  -1.224443   .5532215    -2.21   0.027    -2.308737   -.1401485
-------------+----------------------------------------------------------------
    /lnsig2u |   .7566546   .7113321                     -.6375307     2.15084
-------------+----------------------------------------------------------------
     sigma_u |   1.459841   .5192158                      .7270461    2.931224
         rho |    .680627    .154625                      .3458049    .8957472
------------------------------------------------------------------------------

. eststo reg_del3: xtprobit dic bonus bonus_order if TL==0, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -32.077708  
Iteration 1:   log pseudolikelihood = -30.077896  
Iteration 2:   log pseudolikelihood = -30.052602  
Iteration 3:   log pseudolikelihood = -30.052593  
Iteration 4:   log pseudolikelihood = -30.052593  

Fitting full model:

rho =  0.0     log pseudolikelihood = -30.052593
rho =  0.1     log pseudolikelihood = -29.725734
rho =  0.2     log pseudolikelihood = -29.680977
rho =  0.3     log pseudolikelihood = -29.882437

Iteration 0:   log pseudolikelihood = -29.680977  
Iteration 1:   log pseudolikelihood =  -29.18367  
Iteration 2:   log pseudolikelihood = -29.179457  
Iteration 3:   log pseudolikelihood = -29.179445  
Iteration 4:   log pseudolikelihood = -29.179445  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =         96
Group variable: id                              Number of groups  =         32

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       3.12
Log pseudolikelihood  = -29.179445              Prob > chi2       =     0.2098

                                    (Std. Err. adjusted for 32 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.8455278   .4834548    -1.75   0.080    -1.793082    .1020262
 bonus_order |  -.4412828   .5355935    -0.82   0.410    -1.491027    .6084612
       _cons |   -.904483   .4873957    -1.86   0.063    -1.859761     .050795
-------------+----------------------------------------------------------------
    /lnsig2u |  -.5058839   .7638826                     -2.003066    .9912985
-------------+----------------------------------------------------------------
     sigma_u |    .776513   .2965824                      .3673159    1.641564
         rho |   .3761589   .1792553                      .1188814    .7293443
------------------------------------------------------------------------------

. *TL only
. eststo reg_tl1: xtprobit dem bonus bonus_order if TL==1, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -59.624292  
Iteration 1:   log pseudolikelihood = -58.587478  
Iteration 2:   log pseudolikelihood = -58.586665  
Iteration 3:   log pseudolikelihood = -58.586665  

Fitting full model:

rho =  0.0     log pseudolikelihood = -58.586665
rho =  0.1     log pseudolikelihood = -57.430605
rho =  0.2     log pseudolikelihood = -56.694152
rho =  0.3     log pseudolikelihood = -56.296625
rho =  0.4     log pseudolikelihood = -56.205965
rho =  0.5     log pseudolikelihood = -56.428391

Iteration 0:   log pseudolikelihood = -56.206124  
Iteration 1:   log pseudolikelihood = -55.968731  
Iteration 2:   log pseudolikelihood = -55.963474  
Iteration 3:   log pseudolikelihood = -55.963468  
Iteration 4:   log pseudolikelihood = -55.963468  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =         96
Group variable: id                              Number of groups  =         32

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       1.34
Log pseudolikelihood  = -55.963468              Prob > chi2       =     0.5119

                                    (Std. Err. adjusted for 32 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.1729246    .349092    -0.50   0.620    -.8571324    .5112831
 bonus_order |   -.440891   .4305836    -1.02   0.306    -1.284819    .4030373
       _cons |   .9955562   .3871534     2.57   0.010     .2367494    1.754363
-------------+----------------------------------------------------------------
    /lnsig2u |  -.3566518   .7894161                     -1.903879    1.190575
-------------+----------------------------------------------------------------
     sigma_u |   .8366697   .3302403                      .3859917    1.813553
         rho |   .4117703   .1912088                      .1296701     .766844
------------------------------------------------------------------------------

. eststo reg_tl2: xtprobit fake bonus bonus_order if TL==1, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -56.072249  
Iteration 1:   log pseudolikelihood = -54.089786  
Iteration 2:   log pseudolikelihood =  -54.08234  
Iteration 3:   log pseudolikelihood =  -54.08234  

Fitting full model:

rho =  0.0     log pseudolikelihood =  -54.08234
rho =  0.1     log pseudolikelihood = -52.725849
rho =  0.2     log pseudolikelihood = -51.796432
rho =  0.3     log pseudolikelihood = -51.206613
rho =  0.4     log pseudolikelihood = -50.917774
rho =  0.5     log pseudolikelihood = -50.927762

Iteration 0:   log pseudolikelihood = -50.917925  
Iteration 1:   log pseudolikelihood = -50.222479  
Iteration 2:   log pseudolikelihood = -50.221022  
Iteration 3:   log pseudolikelihood = -50.221022  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =         96
Group variable: id                              Number of groups  =         32

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       3.24
Log pseudolikelihood  = -50.221022              Prob > chi2       =     0.1979

                                    (Std. Err. adjusted for 32 clusters in id)
------------------------------------------------------------------------------
             |               Robust
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |   .5793174   .4072181     1.42   0.155    -.2188153     1.37745
 bonus_order |    .565667   .5143773     1.10   0.271    -.4424939    1.573828
       _cons |  -1.617239   .5380111    -3.01   0.003    -2.671722   -.5627569
-------------+----------------------------------------------------------------
    /lnsig2u |   .0973398   .7137629                      -1.30161    1.496289
-------------+----------------------------------------------------------------
     sigma_u |   1.049874   .3746805                      .5216257    2.113076
         rho |   .5243158   .1780187                      .2138942    .8170204
------------------------------------------------------------------------------

. eststo reg_tl3: xtprobit dic bonus bonus_order if TL==1, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood =   -16.6277  
Iteration 1:   log pseudolikelihood = -15.147065  
Iteration 2:   log pseudolikelihood = -15.070779  
Iteration 3:   log pseudolikelihood = -15.070512  
Iteration 4:   log pseudolikelihood = -15.070512  

Fitting full model:

rho =  0.0     log pseudolikelihood = -15.070512
rho =  0.1     log pseudolikelihood = -15.193619

Iteration 0:   log pseudolikelihood = -15.193619  
Iteration 1:   log pseudolikelihood = -15.108766  
Iteration 2:   log pseudolikelihood = -15.092512  
Iteration 3:   log pseudolikelihood = -15.074223  
Iteration 4:   log pseudolikelihood = -15.071547  
Iteration 5:   log pseudolikelihood = -15.070758  
Iteration 6:   log pseudolikelihood = -15.070561  
Iteration 7:   log pseudolikelihood = -15.070521  
Iteration 8:   log pseudolikelihood = -15.070514  
Iteration 9:   log pseudolikelihood = -15.070514  

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =         96
Group variable: id                              Number of groups  =         32

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(2)      =       2.32
Log pseudolikelihood  = -15.070514              Prob > chi2       =     0.3134

                                    (Std. Err. adjusted for 32 clusters in id)
------------------------------------------------------------------------------
             |               Robust
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
       bonus |  -.8492874    .751461    -1.13   0.258    -2.322124     .623549
 bonus_order |   -.132417   .4375285    -0.30   0.762    -.9899572    .7251231
       _cons |  -1.246383    .847516    -1.47   0.141    -2.907483    .4147182
-------------+----------------------------------------------------------------
    /lnsig2u |  -12.88138   369894.7                     -724993.1    724967.3
-------------+----------------------------------------------------------------
     sigma_u |   .0015953   295.0476                             0           .
         rho |   2.54e-06   .9413778                             0           .
------------------------------------------------------------------------------

. 
. esttab reg_del1 reg_del2 reg_del3 reg_tl1 reg_tl2 reg_tl3 using "$working_ANALYSIS\results\Tables\tableS6_chiefs_DEL.rtf",  ci transform(ln*: exp(@) ex
> p(@))mtitles("Democratic" "Pseudo-democratic" "Dictator" "Democratic" "Pseudo-democratic" "Dictator") b(%4.2f) eqlabels("" "lnsig2u", none) stats(N N_g
>  sigma_u rho chi2 p, labels("N" "Individuals" "sigma_u" "rho" "Wald Chi2" "p" ) fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(
> weight:_cons "{break}{hline @width}")) replace 
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS6_chiefs_DEL.rtf)

. 
. 
. *Table S7.      Robustness check – Mixed effects regression
. * Treating participant as a random factor or use a simple linear model
. eststo reg_rb1: xtmixed dem bonus_2 bonus_3 bonus_order || id:, reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -122.20159  
Iteration 1:   log restricted-likelihood = -122.20159  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =        192
Group variable: id                              Number of groups  =         64

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(3)      =       0.26
Log restricted-likelihood = -122.20159          Prob > chi2       =     0.9674

------------------------------------------------------------------------------
         dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |   3.05e-16   .0642931     0.00   1.000    -.1260121    .1260121
     bonus_3 |   1.94e-16   .0642931     0.00   1.000    -.1260121    .1260121
 bonus_order |  -.0490196   .0961789    -0.51   0.610    -.2375267    .1394875
       _cons |   .6666667   .0793229     8.40   0.000     .5111966    .8221367
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .3214593   .0420819      .2487116    .4154855
-----------------------------+------------------------------------------------
                sd(Residual) |   .3636965   .0229107      .3214537    .4114904
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 32.81         Prob >= chibar2 = 0.0000

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'´

added macro:
        e(individuals) : "64´"

. eststo reg_rb2: xtmixed fake bonus_2 bonus_3 bonus_order || id:,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -112.31687  
Iteration 1:   log restricted-likelihood = -112.31686  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =        192
Group variable: id                              Number of groups  =         64

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(3)      =       4.44
Log restricted-likelihood = -112.31686          Prob > chi2       =     0.2180

------------------------------------------------------------------------------
        fake |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |     .09375   .0621061     1.51   0.131    -.0279756    .2154756
     bonus_3 |    .109375   .0621061     1.76   0.078    -.0123506    .2311006
 bonus_order |    .079085   .0879801     0.90   0.369    -.0933529    .2515229
       _cons |   .1767361   .0734702     2.41   0.016     .0327373     .320735
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .2867424   .0396787      .2186275     .376079
-----------------------------+------------------------------------------------
                sd(Residual) |    .351325   .0221314      .3105191    .3974932
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 27.09         Prob >= chibar2 = 0.0000

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'´

added macro:
        e(individuals) : "64´"

. eststo reg_rb3: xtmixed dic bonus_2 bonus_3 bonus_order || id:,  reml 

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -19.252893  
Iteration 1:   log restricted-likelihood = -19.173457  
Iteration 2:   log restricted-likelihood =  -19.17325  
Iteration 3:   log restricted-likelihood =  -19.17325  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =        192
Group variable: id                              Number of groups  =         64

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(3)      =       8.02
Log restricted-likelihood =  -19.17325          Prob > chi2       =     0.0457

------------------------------------------------------------------------------
         dic |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
     bonus_2 |    -.09375   .0432786    -2.17   0.030    -.1785745   -.0089255
     bonus_3 |   -.109375   .0432786    -2.53   0.011    -.1941995   -.0245505
 bonus_order |  -.0300654   .0408055    -0.74   0.461    -.1100427    .0499119
       _cons |   .1565972   .0388449     4.03   0.000     .0804627    .2327318
------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .0809833    .033279      .0361914    .1812114
-----------------------------+------------------------------------------------
                sd(Residual) |   .2448207   .0154223      .2163852     .276993
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 1.72          Prob >= chibar2 = 0.0946

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'´

added macro:
        e(individuals) : "64´"

. 
. esttab reg_rb1 reg_rb2 reg_rb3 using "$working_ANALYSIS\results\Tables\tableS7_rc_xtmixed.rtf",  ci transform(ln*: exp(@) exp(@))mtitles("Democratic" "
> Pseudo-democratic" "Dictator") b(%4.2f) eqlabels("" "sd(_cons)" "sd(Residual)", none) stats(N individuals chi2 p, labels("N" "Individuals" "Wald Chi2" 
> "p" ) fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(weight:_cons "{break}{hline @width}"))  replace 
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS7_rc_xtmixed.rtf)

. 
. 
. *Table S8.      Effects of bonus payments – Multinomial probit
. mprobit rule bonus_2 bonus_3 bonus_order, cluster(id)

Iteration 0:   log pseudolikelihood = -155.96029  
Iteration 1:   log pseudolikelihood =  -155.4905  
Iteration 2:   log pseudolikelihood = -155.48258  
Iteration 3:   log pseudolikelihood = -155.48257  

Multinomial probit regression                   Number of obs     =        192
                                                Wald chi2(6)      =       7.17
Log pseudolikelihood = -155.48257               Prob > chi2       =     0.3050

                                         (Std. Err. adjusted for 64 clusters in id)
-----------------------------------------------------------------------------------
                  |               Robust
             rule |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
------------------+----------------------------------------------------------------
Democratic        |  (base outcome)
------------------+----------------------------------------------------------------
Pseudo_democratic |
          bonus_2 |   .2766687   .2639683     1.05   0.295    -.2406998    .7940371
          bonus_3 |   .3177508   .2620714     1.21   0.225    -.1958997    .8314014
      bonus_order |   .3023284     .37056     0.82   0.415    -.4239558    1.028613
            _cons |  -1.060319   .3026821    -3.50   0.000    -1.653565   -.4670735
------------------+----------------------------------------------------------------
Autocratic        |
          bonus_2 |  -.6893181   .4174503    -1.65   0.099    -1.507506    .1288693
          bonus_3 |  -.9087708   .4965233    -1.83   0.067    -1.881939    .0643971
      bonus_order |  -.2001093   .4532496    -0.44   0.659    -1.088462    .6882436
            _cons |  -1.092758   .3556707    -3.07   0.002     -1.78986   -.3956564
-----------------------------------------------------------------------------------

. margins, dydx(bonus_2 bonus_3) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

dy/dx w.r.t. : bonus_2 bonus_3
1._predict   : Pr(rule==Democratic), predict(pr outcome(1))
2._predict   : Pr(rule==Pseudo-democratic), predict(pr outcome(2))
3._predict   : Pr(rule==Autocratic), predict(pr outcome(3))

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
bonus_2      |
    _predict |
          1  |  -.0132312   .0669098    -0.20   0.843    -.1443719    .1179095
          2  |   .0919615   .0625273     1.47   0.141    -.0305897    .2145127
          3  |  -.0787303   .0392565    -2.01   0.045    -.1556715   -.0017891
-------------+----------------------------------------------------------------
bonus_3      |
    _predict |
          1  |  -.0074632   .0664854    -0.11   0.911    -.1377722    .1228458
          2  |   .1096425   .0639036     1.72   0.086    -.0156063    .2348912
          3  |  -.1021792   .0486804    -2.10   0.036     -.197591   -.0067675
------------------------------------------------------------------------------

. est store bonus1

. outreg2 using  "$working_ANALYSIS/results/tables/tableS8_multi_probit", drop() addstat(Pseudo R-squared, e(r2_p))  adec(3) dec(3) word  replace
check eret list for the existence of e(r2_p)
C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/tables/tableS8_multi_probit.rtf
dir : seeout

. mprobit rule bonus bonus_order, cluster(id) level(90)

Iteration 0:   log pseudolikelihood = -156.05588  
Iteration 1:   log pseudolikelihood = -155.59802  
Iteration 2:   log pseudolikelihood = -155.59245  
Iteration 3:   log pseudolikelihood = -155.59245  

Multinomial probit regression                   Number of obs     =        192
                                                Wald chi2(4)      =       7.06
Log pseudolikelihood = -155.59245               Prob > chi2       =     0.1327

                                         (Std. Err. adjusted for 64 clusters in id)
-----------------------------------------------------------------------------------
                  |               Robust
             rule |      Coef.   Std. Err.      z    P>|z|     [90% Conf. Interval]
------------------+----------------------------------------------------------------
Democratic        |  (base outcome)
------------------+----------------------------------------------------------------
Pseudo_democratic |
            bonus |   .2975364   .2353973     1.26   0.206    -.0896577    .6847306
      bonus_order |   .3016971   .3706743     0.81   0.416    -.3080079     .911402
            _cons |  -1.059987   .3027227    -3.50   0.000    -1.557921   -.5620521
------------------+----------------------------------------------------------------
Autocratic        |
            bonus |  -.7899665   .4054291    -1.95   0.051    -1.456838    -.123095
      bonus_order |  -.2020001    .453668    -0.45   0.656    -.9482176    .5442174
            _cons |  -1.091828    .356129    -3.07   0.002    -1.677608   -.5060479
-----------------------------------------------------------------------------------

. margins, dydx(bonus) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

dy/dx w.r.t. : bonus
1._predict   : Pr(rule==Democratic), predict(pr outcome(1))
2._predict   : Pr(rule==Pseudo-democratic), predict(pr outcome(2))
3._predict   : Pr(rule==Autocratic), predict(pr outcome(3))

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
bonus        |
    _predict |
          1  |  -.0109626   .0598247    -0.18   0.855     -.128217    .1062917
          2  |    .100676    .056045     1.80   0.072    -.0091703    .2105222
          3  |  -.0897134   .0386461    -2.32   0.020    -.1654584   -.0139683
------------------------------------------------------------------------------

. est store bonus2

. outreg2 using "$working_ANALYSIS/results/tables/tableS8_multi_probit", drop() addstat(Pseudo R-squared, e(r2_p))  adec(3) dec(3) word  append
check eret list for the existence of e(r2_p)
C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/tables/tableS8_multi_probit.rtf
dir : seeout

. 
. 
. 
. *Table S9.      Subsample treatment effects on democratic rule choices
. *stored before under main analysis
. 
. 
. *Table S10.     Robustness check: Authentic leadership score median split
. 
. eststo sub1_rc: xtmixed dem i.bonus bonus_order  || id: if type_AL==1,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -17.699032  
Iteration 1:   log restricted-likelihood = -17.699018  
Iteration 2:   log restricted-likelihood = -17.699018  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         33
Group variable: id                              Number of groups  =         11

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =       8.82
Log restricted-likelihood = -17.699018          Prob > chi2       =     0.0122

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |   .3636364   .1238882     2.94   0.003     .1208199    .6064528
          bonus_order |  -.1111111   .2456759    -0.45   0.651    -.5926271    .3704048
                _cons |   .0909091   .2370742     0.38   0.701    -.3737478     .555566
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .2474821   .0969293      .1148578    .5332453
-----------------------------+------------------------------------------------
                sd(Residual) |   .3354909   .0517674      .2479348    .4539666
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 3.25          Prob >= chibar2 = 0.0358

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "11"

. eststo sub2_rc: xtmixed dem i.bonus bonus_order  || id: if type_AL==2,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -21.508732  
Iteration 1:   log restricted-likelihood = -21.507408  
Iteration 2:   log restricted-likelihood = -21.507408  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         36
Group variable: id                              Number of groups  =         12

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =       9.76
Log restricted-likelihood = -21.507408          Prob > chi2       =     0.0076

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |   .4166667   .1334691     3.12   0.002      .155072    .6782614
          bonus_order |  -.0190476   .1707925    -0.11   0.911    -.3537947    .3156995
                _cons |   .0079365    .141674     0.06   0.955    -.2697395    .2856125
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .1938436   .1045827      .0673302    .5580753
-----------------------------+------------------------------------------------
                sd(Residual) |   .3775077   .0556605      .2827633    .5039978
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 1.26          Prob >= chibar2 = 0.1306

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals' 

added macro:
        e(individuals) : "12"

. eststo sub3_rc: xtmixed dem i.bonus bonus_order  || id: if type_AL==3,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood =   -25.8423  
Iteration 1:   log restricted-likelihood = -25.842247  
Iteration 2:   log restricted-likelihood = -25.842247  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         69
Group variable: id                              Number of groups  =         23

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =      12.62
Log restricted-likelihood = -25.842247          Prob > chi2       =     0.0018

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |  -.2391304   .0741117    -3.23   0.001    -.3843867   -.0938742
          bonus_order |   .1590909   .1070566     1.49   0.137    -.0507361     .368918
                _cons |    .916996   .0917651     9.99   0.000     .7371397    1.096852
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .1941747   .0544467      .1120767    .3364108
-----------------------------+------------------------------------------------
                sd(Residual) |   .2902051   .0305903      .2360372    .3568039
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 5.60          Prob >= chibar2 = 0.0090

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "23"

. eststo sub4_rc: xtmixed dem i.bonus bonus_order  || id: if type_AL==4,  reml

Performing EM optimization: 

Performing gradient-based optimization: 

Iteration 0:   log restricted-likelihood = -20.369588  
Iteration 1:   log restricted-likelihood = -20.329371  
Iteration 2:   log restricted-likelihood = -20.329371  

Computing standard errors:

Mixed-effects REML regression                   Number of obs     =         54
Group variable: id                              Number of groups  =         18

                                                Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

                                                Wald chi2(2)      =       4.94
Log restricted-likelihood = -20.329371          Prob > chi2       =     0.0844

---------------------------------------------------------------------------------------
                  dem |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
----------------------+----------------------------------------------------------------
                bonus |
Pooled Bonus (n=128)  |  -.1944444   .0918889    -2.12   0.034    -.3745433   -.0143456
          bonus_order |  -.0666667   .0976281    -0.68   0.495    -.2580143    .1246809
                _cons |    1.02963   .0893801    11.52   0.000     .8544478    1.204811
---------------------------------------------------------------------------------------

------------------------------------------------------------------------------
  Random-effects Parameters  |   Estimate   Std. Err.     [95% Conf. Interval]
-----------------------------+------------------------------------------------
id: Identity                 |
                   sd(_cons) |   .0926653   .0918057      .0132927    .6459847
-----------------------------+------------------------------------------------
                sd(Residual) |   .3183123   .0380456      .2518346    .4023384
------------------------------------------------------------------------------
LR test vs. linear model: chibar2(01) = 0.29          Prob >= chibar2 = 0.2953

. matrix N_g = e(N_g)

. local individuals = N_g[1, 1]

. estadd local individuals `individuals'

added macro:
        e(individuals) : "18"

. 
. 
. esttab sub1_rc sub2_rc sub3_rc sub4_rc using "$working_ANALYSIS\results\tables\tableS10_social_norms_boxes_democratic_rc.rtf",  label se(%4.3f)  transf
> orm(ln*: exp(@) exp(@)) mgroups("Democratic Rule (=1)", pattern(1 0 0))   mtitles("Box 1" "Box 2" "Box 3" "Box 4") b(%4.3f) stats(N individuals chi2 p,
>  labels("N" "Individuals" "Wald Chi2" "p" ) fmt(%4.0f %4.0f %4.2f)) star(* 0.10 ** 0.05 *** 0.01) varlabels(,elist(weight:_cons "{break}{hline @width}"
> )) nonotes addnotes("Notes: Estimates are from multilevel panel regressions that account for the grouping structure of the data at the individual level
>  (random intercept). Standard errors with stars indicating the following significant levels: * p < 0.10, ** p < 0.05, *** p < 0.01") replace 
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\tables\tableS10_social_norms_bo
> xes_democratic_rc.rtf)

. 
. 
. *Figure S4.     Subsample treatment effects: Robustness check with authentic leadership
. coefplot (sub1_rc, label (Box I)) (sub2_rc, label (Box III))  (sub3_rc, label (Box II))  (sub4_rc, label (Box IV)) , keep(1.bonus) coeflabels(1.bonus =
>  "Pooled Bonus")  byopts(xrescale) xline(0, lpattern(dash) lcolor(gs3)) xtitle("Regression estimated impact relative to baseline in pp") grid(none) lev
> els(95 90) ciopts(lwidth(0.8 2)  lcolor(*1 *.3) recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", "")))) msize(3pt)
>  msymbol(D) mlabsize(8pt) mlabposition(1) mlabgap(-0.4) subtitle(, size(6pt) lstyle(none) margin(medium) nobox justification(left)  bmargin(top))  xla(
> -50(25)75, nogrid)  xsize(3.465) ysize(2) scale(1.2)
(note:  named style medthin not found in class linestyle, default attributes used)

. gr_edit style.editstyle margin(vsmall) editcopy

. gr save  "$working_ANALYSIS\results\intermediate\figureS4_subsample_democratic.gph", replace
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\intermediate\figureS4_subsample_democratic.g
> ph saved)

. gr export "$working_ANALYSIS\results\figures\figureS4_subsample_democratic.tif", replace width(4000) 
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\figures\figureS4_subsample_democratic.tif wr
> itten in TIFF format)

. 
. 
. *Table S11.     Villager satisfaction with different leader types
. *stored before in main analysis
. 
. 
. 
. preserve

. clear all

. use "$working_ANALYSIS/processed/analysis_wide.dta"

. * Figure S5.    Preferred distribution by leaders and villagers in the baseline
. *PANEL A: Leaders
. catplot vote1 , over(rule_base) asyvar recast(bar) yla(0(20)100, nogrid) percent(rule_base) bargap(10) blabel(bar, format(%9.0f) pos(outside)  gap(0.1)
> ) title("{bf:A} Leaders")  b1title("") legend(ring(1) pos(6) rows(1))

. gr save  "$working_ANALYSIS/results/intermediate/figureS5a.gph", replace
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figureS5a.gph not found)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figureS5a.gph saved)

. 
. *PANEL B: Villagers
. catplot vote1 if id>64, asyvar recast(bar) yla(0(20)100, nogrid) percent bargap(10)  blabel(bar, format(%9.0f)pos(outside)  gap(0.1)) title("{bf:B} Vil
> lagers")  b1title("") legend(ring(1) pos(6) rows(1))

. gr save  "$working_ANALYSIS/results/intermediate/figureS5b.gph", replace
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figureS5b.gph not found)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figureS5b.gph saved)

. 
. grc1leg  "$working_ANALYSIS/results/intermediate/figureS5a.gph" "$working_ANALYSIS/results/intermediate/figureS5b.gph", rows(1) pos(6) ring(1) 

. gr save "$working_ANALYSIS/results/intermediate/figureS5_stage2.gph", replace
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figureS5_stage2.gph not f
> ound)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figureS5_stage2.gph saved)

. gr export "$working_ANALYSIS/results/figures/figureS5_stage2.tif", replace width(4000)
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figureS5_stage2.tif not found)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figureS5_stage2.tif written in TIFF 
> format)

. 
. *Tests
. gen prefer_B=1 if vote1==2
(158 missing values generated)

. replace prefer_B=0 if vote1==1
(158 real changes made)

. 
. tab vote1 villager, chi2 exact

    Benefit to |
 leader at the |
    expense of |       villager
     villagers |         0          1 |     Total
---------------+----------------------+----------
Distribution A |        34        124 |       158 
Distribution B |        30        260 |       290 
---------------+----------------------+----------
         Total |        64        384 |       448 

          Pearson chi2(1) =  10.4292   Pr = 0.001
           Fisher's exact =                 0.002
   1-sided Fisher's exact =                 0.001

. ttest prefer_B, by(villager)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
       0 |      64      .46875    .0628709    .5029674    .3431125    .5943875
       1 |     384    .6770833    .0238928    .4682012    .6301059    .7240608
---------+--------------------------------------------------------------------
combined |     448    .6473214    .0225993    .4783379    .6029073    .6917356
---------+--------------------------------------------------------------------
    diff |           -.2083333    .0638984               -.3339126   -.0827541
------------------------------------------------------------------------------
    diff = mean(0) - mean(1)                                      t =  -3.2604
Ho: diff = 0                                     degrees of freedom =      446

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.0006         Pr(|T| > |t|) = 0.0012          Pr(T > t) = 0.9994

. * villagers significantly more likely to prefer distribution B than leaders (20 pp difference)
. 
. tab vote1 game1_group if villager==1, chi2 exact

    Benefit to |
 leader at the |
    expense of |      game1_group
     villagers |        13         14 |     Total
---------------+----------------------+----------
Distribution A |        55         69 |       124 
Distribution B |       137        123 |       260 
---------------+----------------------+----------
         Total |       192        192 |       384 

          Pearson chi2(1) =   2.3345   Pr = 0.127
           Fisher's exact =                 0.156
   1-sided Fisher's exact =                 0.078

. ttest prefer_B if id>64, by(game1_group)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. Err.   Std. Dev.   [95% Conf. Interval]
---------+--------------------------------------------------------------------
      13 |     192    .7135417    .0327133    .4532881     .649016    .7780673
      14 |     192     .640625    .0347184    .4810717    .5721444    .7091056
---------+--------------------------------------------------------------------
combined |     384    .6770833    .0238928    .4682012    .6301059    .7240608
---------+--------------------------------------------------------------------
    diff |            .0729167    .0477024               -.0208755    .1667089
------------------------------------------------------------------------------
    diff = mean(13) - mean(14)                                    t =   1.5286
Ho: diff = 0                                     degrees of freedom =      382

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.9364         Pr(|T| > |t|) = 0.1272          Pr(T > t) = 0.0636

. * distribution B is more often (7pp, p=0.13) preferred by villagers in groups governed by traditional authorities
. reg prefer_B game1_group if id>64, vce(robust)

Linear regression                               Number of obs     =        384
                                                F(1, 382)         =       2.34
                                                Prob > F          =     0.1272
                                                R-squared         =     0.0061
                                                Root MSE          =     .46739

------------------------------------------------------------------------------
             |               Robust
    prefer_B |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
 game1_group |  -.0729167   .0477024    -1.53   0.127    -.1667089    .0208755
       _cons |   1.661458   .6430065     2.58   0.010     .3971832    2.925733
------------------------------------------------------------------------------

. tab vote1 rule_base if rule_base <3, chi2 exact

    Benefit to |
 leader at the |
    expense of |       rule_base
     villagers | Base: Dem  Base: Pse |     Total
---------------+----------------------+----------
Distribution A |        19          9 |        28 
Distribution B |        22          5 |        27 
---------------+----------------------+----------
         Total |        41         14 |        55 

          Pearson chi2(1) =   1.3446   Pr = 0.246
           Fisher's exact =                 0.355
   1-sided Fisher's exact =                 0.198

. 
. tab leader_type

        leader_type |      Freq.     Percent        Cum.
--------------------+-----------------------------------
      True-democrat |         41       64.06       64.06
    Pseudo-democrat |          9       14.06       78.13
        Paternalist |          5        7.81       85.94
           Autocrat |          6        9.38       95.31
Benevolent-Autocrat |          3        4.69      100.00
--------------------+-----------------------------------
              Total |         64      100.00

. * Regression analysis
. probit prefer_B villager , vce(robust)

Iteration 0:   log pseudolikelihood = -290.79189  
Iteration 1:   log pseudolikelihood = -285.79107  
Iteration 2:   log pseudolikelihood = -285.79094  
Iteration 3:   log pseudolikelihood = -285.79094  

Probit regression                               Number of obs     =        448
                                                Wald chi2(1)      =       9.95
                                                Prob > chi2       =     0.0016
Log pseudolikelihood = -285.79094               Pseudo R2         =     0.0172

------------------------------------------------------------------------------
             |               Robust
    prefer_B |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    villager |   .5379707   .1705353     3.15   0.002     .2037276    .8722137
       _cons |  -.0784124   .1570147    -0.50   0.618    -.3861557    .2293308
------------------------------------------------------------------------------

. margins, dydx(villager)

Average marginal effects                        Number of obs     =        448
Model VCE    : Robust

Expression   : Pr(prefer_B), predict()
dy/dx w.r.t. : villager

------------------------------------------------------------------------------
             |            Delta-method
             |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
    villager |   .1960901   .0600081     3.27   0.001     .0784763    .3137039
------------------------------------------------------------------------------

. 
. 
. restore

. 
. 
. *Table S12.     Likelihood of distribution B being implemented in stage 2
. eststo reg_stage2: xtprobit payoff bonus baseline_2 baseline_3 bonus_pseudo bonus_dictator, vce(robust)

Fitting comparison model:

Iteration 0:   log pseudolikelihood = -125.38709  
Iteration 1:   log pseudolikelihood = -112.47189  
Iteration 2:   log pseudolikelihood = -112.44528  
Iteration 3:   log pseudolikelihood = -112.44528  

Fitting full model:

rho =  0.0     log pseudolikelihood = -112.44528
rho =  0.1     log pseudolikelihood = -108.16339
rho =  0.2     log pseudolikelihood = -104.94467
rho =  0.3     log pseudolikelihood = -102.52388
rho =  0.4     log pseudolikelihood = -100.76519
rho =  0.5     log pseudolikelihood = -99.620632
rho =  0.6     log pseudolikelihood = -99.129166
rho =  0.7     log pseudolikelihood = -99.473951

Iteration 0:   log pseudolikelihood = -99.128678  
Iteration 1:   log pseudolikelihood = -96.514424  
Iteration 2:   log pseudolikelihood = -96.277056  
Iteration 3:   log pseudolikelihood = -96.276281  
Iteration 4:   log pseudolikelihood = -96.276281  (backed up)

Calculating robust standard errors:

Random-effects probit regression                Number of obs     =        192
Group variable: id                              Number of groups  =         64

Random effects u_i ~ Gaussian                   Obs per group:
                                                              min =          3
                                                              avg =        3.0
                                                              max =          3

Integration method: mvaghermite                 Integration pts.  =         12

                                                Wald chi2(5)      =      17.48
Log pseudolikelihood  = -96.276281              Prob > chi2       =     0.0037

                                      (Std. Err. adjusted for 64 clusters in id)
--------------------------------------------------------------------------------
               |               Robust
        payoff |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
---------------+----------------------------------------------------------------
         bonus |  -.6630801   .3733322    -1.78   0.076    -1.394798    .0686375
    baseline_2 |  -2.328642   .7733767    -3.01   0.003    -3.844433   -.8128517
    baseline_3 |  -2.523964   .9291104    -2.72   0.007    -4.344987   -.7029406
  bonus_pseudo |   .6599155   .7284527     0.91   0.365    -.7678256    2.087656
bonus_dictator |   2.923806   .8886222     3.29   0.001     1.182138    4.665473
         _cons |   1.711766   .4687351     3.65   0.000     .7930619     2.63047
---------------+----------------------------------------------------------------
      /lnsig2u |   .9083993   .4959556                     -.0636559    1.880454
---------------+----------------------------------------------------------------
       sigma_u |   1.574912   .3905433                      .9686732    2.560563
           rho |   .7126725    .101557                      .4840914    .8676633
--------------------------------------------------------------------------------

. margin, dydx(*) post

Average marginal effects                        Number of obs     =        192
Model VCE    : Robust

Expression   : Pr(payoff=1), predict(pr)
dy/dx w.r.t. : bonus baseline_2 baseline_3 bonus_pseudo bonus_dictator

--------------------------------------------------------------------------------
               |            Delta-method
               |      dy/dx   Std. Err.      z    P>|z|     [95% Conf. Interval]
---------------+----------------------------------------------------------------
         bonus |  -.1168856   .0640911    -1.82   0.068    -.2425019    .0087307
    baseline_2 |  -.4104856   .1008716    -4.07   0.000    -.6081904   -.2127809
    baseline_3 |  -.4449162   .1531795    -2.90   0.004    -.7451424     -.14469
  bonus_pseudo |   .1163278   .1274468     0.91   0.361    -.1334633    .3661188
bonus_dictator |   .5153991   .1432262     3.60   0.000      .234681    .7961172
--------------------------------------------------------------------------------

. est store payoff1

. 
. esttab reg_stage2 using "$working_ANALYSIS\results\Tables\tableS9.rtf",  ci transform(ln*: exp(@) exp(@))mtitles("Distribution B (=1)") b(%4.2f) eqlabe
> ls("" "lnsig2u", none) stats(N N_g sigma_u rho chi2 p, labels("N" "Individuals" "sigma_u" "rho" "Wald Chi2" "p" ) fmt(%4.0f %4.0f %4.2f)) star(* 0.10 *
> * 0.05 *** 0.01) varlabels(,elist(weight:_cons "{break}{hline @width}")) replace 
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS9.rtf not found)
(output written to C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis\results\Tables\tableS9.rtf)

. 
. 
. *Figure S6.     Likelihood of distribution B being implemented
. coefplot (payoff1, msymbol(d)), keep(bonus baseline_2 baseline_3 bonus_pseudo bonus_dictator) coeflabels(bonus= "Pooled Bonus" baseline_2 = "Base: Pseu
> do-democrat" baseline_3 ="Base: Autocrat" bonus_pseudo = "Interaction:Bonus*Pseudo" bonus_dictator = "Interaction: Bonus*Autocrat") xline(0, lpattern(d
> ash) lcolor(gs3))  xtitle("Regression estimated impact relative to baseline democrats in pp") msymbol(d) xla(-1(0.25)1, nogrid) grid(none) levels(95 90
> ) ciopts(lwidth(0.3 1) lcolor(*.8 *.2)  recast(rcap)) mlabel(cond(@pval<.01, "***", cond(@pval<.05, "**", cond(@pval<.1, "*", "")))) mlabsize(8pt) mlab
> position(12) mlabgap(-0.1) 
(note:  named style medthin not found in class linestyle, default attributes used)

. gr save "$working_ANALYSIS/results/intermediate/figureS7.gph", replace
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figureS7.gph not found)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/intermediate/figureS7.gph saved)

. gr export "$working_ANALYSIS/results/figures/figureS7.tif", replace width(3465)
(note: file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figureS7.tif not found)
(file C:\Users\istei\HESSENBOX\2-Projekte (Björn Vollan)\Paper SustUse\Paying for democracy\analysis/results/figures/figureS7.tif written in TIFF format)

. 
. 
. 
. 
end of do-file

. exit, clear
